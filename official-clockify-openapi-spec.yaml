openapi: 3.0.1
info:
  description: |+
    ## Introduction
    By using this REST API, you can easily integrate Clockify with your own add-ons, push and pull data
    between Clockify and other tools, and create custom add-ons on [CAKE.com Marketplace](https://marketplace.cake.com).
    Whether you’re looking to automate time tracking, generate custom reports, or build other custom
    integrations, our API provides the flexibility and power you need to get the job done. If you
    have any questions or run into any issues while using our API, don’t hesitate to reach out to us for help.
    You can also post questions on Stack Overflow with the Clockify tag to get help from the community.
    ## Authentication
    To authenticate your requests to your API, make sure to include either the ‘X-Api-Key’ or the
    ‘X-Addon-Token’ in the request header, containing your API or Addon key. If your workspace is
    on a subdomain (e.g. subdomain.clockify.me), you’ll need to generate a new API key in your
    Profile Settings that will work specifically for that workspace. This ensures that you’re
    accessing data from the correct workspace and helps maintain the security of your data.
    ## Webhooks
    Webhooks can enhance your workflow by keeping your add-on up-to-date with the latest changes in
    Clockify. With Clockify’s webhooks you can receive real-time notifications when certain events such as
    starting timer or deleting time entry occur in Clockify. Workspace admins can create up to 10 webhooks
    each, with a total of 100 webhooks allowed per workspace.
    ## Rate limiting
    Our REST API has a specific rate limit of 50 requests per second (by addon on one workspace) when
    accessed using X-Addon-Token. Exceeding this limit will result in an error message with the description
    "Too many requests".
    ## API URLs
    Refer to the list on what URL to use base on the subdomain and data region settings of your workspace.
    * Global - can be used by workspaces with or without subdomain.
        * Regular: https://api.clockify.me/api/v1/file/image
        * PTO: https://pto.api.clockify.me/v1/workspaces/{workspaceId}/policies
        * Reports: https://reports.api.clockify.me/v1/workspaces/{workspaceId}/reports/detailed
    * Regional
        * Non-subdomain
            * Regular: https://euc1.clockify.me/api/v1/file/image
            * PTO: https://use2.api.clockify.me/pto/v1/workspaces/{workspaceId}/policies
            * Reports: https://use2.clockify.me/report/v1/workspaces/{workspaceId}/reports/detailed
        * Subdomain
            * Regular: https://euc1.clockify.me/api/v1/file/image
            * PTO: https://yoursubdomainname.clockify.me/pto/v1/workspaces/{workspaceId}/policies
            * Reports: https://yoursubdomainname.clockify.me/report/v1/workspaces/{workspaceId}/reports/detailed
    ## Regional Server Prefixes
    If your workspace is in a specific region, you need to change your URL prefix to access v1 API endpoints.
    For example, this is how **backend** api [v1/file/image](#tag/User/operation/uploadImage) endpoint
    would look in EU region:
    [https://euc1.clockify.me/api/v1/file/image](https://euc1.clockify.me)

    Below are the available regional server prefixes:
    * **EU (Germany)**: euc1
    * **USA**: use2
    * **UK**: euw2
    * **AU**: apse2

  title: Clockify API
  version: v1
  x-logo:
    altText: Clockify logo
    url: https://clockify.me/downloads/clockify_logo_primary_black_margin.png
servers:
  - url: /api
    description: API Base URL
security:
  - ApiKeyAuth: []
  - AddonKeyAuth: []
paths:
  /access:
    post:
      operationId: disableAccess
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisableAccessRequest'
        required: true
      responses:
        "201":
          description: Created
      tags:
        - access-http-adapter
  /access/users:
    get:
      operationId: getUsers_5
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserAccessDisabledDto'
          description: OK
      tags:
        - access-http-adapter
  /access/users/filter:
    get:
      operationId: getDisabledUsers
      parameters:
        - in: query
          name: userId
          required: false
          schema:
            type: string
        - in: query
          name: email
          required: false
          schema:
            type: string
        - in: query
          name: name
          required: false
          schema:
            type: string
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
            default: 1
        - in: query
          name: pageSize
          required: false
          schema:
            type: integer
            format: int32
            default: 50
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserAccessDisabledDto'
          description: OK
      tags:
        - access-http-adapter
  /access/users/{userId}:
    delete:
      operationId: enableUserAccess
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
      tags:
        - access-http-adapter
    get:
      operationId: getDisabledUser
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserAccessDisabledDto'
          description: OK
      tags:
        - access-http-adapter
  /access/workspaces:
    get:
      operationId: getWorkspaces
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WorkspaceAccessDisabledDto'
          description: OK
      tags:
        - access-http-adapter
  /access/workspaces/filter:
    get:
      operationId: getDisabledWorkspaces
      parameters:
        - in: query
          name: workspaceId
          required: false
          schema:
            type: string
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
            default: 1
        - in: query
          name: pageSize
          required: false
          schema:
            type: integer
            format: int32
            default: 50
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WorkspaceAccessDisabledDto'
          description: OK
      tags:
        - access-http-adapter
  /access/workspaces/{workspaceId}:
    delete:
      operationId: enableWorkspaceAccess
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
      tags:
        - access-http-adapter
    get:
      operationId: getDisabledWorkspace
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/WorkspaceAccessDisabledDto'
          description: OK
      tags:
        - access-http-adapter
  /activity/filter:
    post:
      operationId: filterActivities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilterActivitiesRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ActivityDto'
          description: OK
      tags:
        - activity-http-adapter
  /addon/user/{userId}/token:
    post:
      operationId: generateAddonToken
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: string
          description: OK
      tags:
        - addon-developer-http-adapter
  /addon/workspaces/{workspaceId}/settings:
    get:
      operationId: getSettings
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AddonSettingsDto'
          description: OK
      tags:
        - addon-http-adapter
    patch:
      operationId: updateSettings_2
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddonUpdateSettingsRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AddonDto'
          description: OK
      tags:
        - addon-http-adapter
  /addon/workspaces/{workspaceId}/user:
    get:
      operationId: getCurrentUser
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserInfoDto'
          description: OK
      tags:
        - addon-http-adapter
  /addon/{addonKey}:
    patch:
      operationId: updateAddon
      parameters:
        - in: path
          name: addonKey
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddonUpdateRequest'
        required: true
      responses:
        "200":
          description: OK
      tags:
        - addon-developer-http-adapter
  /addons/manifest-schema:
    get:
      operationId: getManifestSchema
      parameters:
        - in: query
          name: version
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: string
          description: OK
      tags:
        - addon-manifest-schema-http-adapter
  /apiKey:
    get:
      operationId: getAllApiKeys
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiKeyDto'
          description: OK
      tags:
        - api-key-http-adapter
  /apiKey/activateApiKey/{userId}:
    put:
      operationId: activateApiKey
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiKeyDto'
          description: OK
      tags:
        - api-key-http-adapter
  /apiKey/deactivateApiKey/{userId}:
    put:
      operationId: deactivateApiKey
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiKeyDto'
          description: OK
      tags:
        - api-key-http-adapter
  /apiKey/deactivateApiKey/{userId}/workspaces/{workspaceId}:
    put:
      operationId: deactivateUserApiKey
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiKeyDto'
          description: OK
      tags:
        - api-key-http-adapter
  /apiKey/{userId}:
    get:
      operationId: getApiKeyForUser
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiKeyDto'
          description: OK
      tags:
        - api-key-http-adapter
  /apiKey/{userId}/generateApiKey:
    post:
      operationId: generateApiKeyForUser
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiKeyDto'
          description: OK
      tags:
        - api-key-http-adapter
  /auth:
    post:
      operationId: create_23
      parameters:
        - in: header
          name: Sub-Domain-Name
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/AuthCreationRequest'
                trackingRequest:
                  $ref: '#/components/schemas/TrackingRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthAccessResponse'
          description: OK
      tags:
        - auth-http-adapter
  /auth/admin/verification/validate:
    post:
      operationId: validateAdminVerificationCode
      parameters:
        - in: query
          name: email
          required: true
          schema:
            type: string
        - in: query
          name: code
          required: true
          schema:
            type: string
        - in: header
          name: Sub-Domain-Name
          required: false
          schema:
            type: string
        - in: query
          name: include-memberships
          required: false
          schema:
            type: boolean
        - in: header
          name: App-Name
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthResponse'
          description: OK
      tags:
        - auth-http-adapter
  /auth/admin/verification/{email}:
    post:
      operationId: generateAdminVerificationCode
      parameters:
        - in: path
          name: email
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
      tags:
        - auth-http-adapter
  /auth/apple:
    post:
      operationId: appleSignIn
      parameters:
        - in: header
          name: Sub-Domain-Name
          required: false
          schema:
            type: string
        - in: header
          name: App-Name
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppleAuthenticationRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthResponse'
          description: OK
      tags:
        - auth-http-adapter
  /auth/code:
    post:
      operationId: oAuthLogin_1
      parameters:
        - in: header
          name: Sub-Domain-Name
          required: false
          schema:
            type: string
        - in: header
          name: App-Name
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/OAuth2AuthenticationRequest'
                trackingRequest:
                  $ref: '#/components/schemas/TrackingRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthResponse'
          description: OK
      tags:
        - auth-http-adapter
  /auth/email-verification/resend/{email}:
    put:
      operationId: resendVerifyEmailByEmail
      parameters:
        - in: path
          name: email
          required: true
          schema:
            type: string
        - in: header
          name: Task-Id
          required: false
          schema:
            type: string
      responses:
        "200":
          description: OK
      tags:
        - auth-http-adapter
  /auth/exchange:
    post:
      operationId: authenticateWithExchangeToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExchangeTokenRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthAccessResponse'
          description: OK
      tags:
        - auth-http-adapter
  /auth/hasPassword:
    get:
      operationId: canChange
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CanChangePasswordResponse'
          description: OK
      tags:
        - auth-http-adapter
  /auth/integrations/public-key:
    get:
      operationId: getIntegrationPublicKey
      parameters:
        - in: query
          name: publicKey
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/IntegrationPublicKeyDto'
          description: OK
      tags:
        - auth-http-adapter
  /auth/password:
    post:
      operationId: requestPasswordSet
      parameters:
        - in: header
          name: Sub-Domain-Name
          required: false
          schema:
            type: string
      responses:
        "200":
          description: OK
      tags:
        - auth-http-adapter
    put:
      operationId: changePassword
      parameters:
        - in: header
          name: Sub-Domain-Name
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserChangesPasswordRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthDto'
          description: OK
      tags:
        - auth-http-adapter
  /auth/resendVerifyEmail/{userId}:
    put:
      operationId: resendVerifyEmail
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: header
          name: Task-Id
          required: false
          schema:
            type: string
      responses:
        "200":
          description: OK
      tags:
        - auth-http-adapter
  /auth/saml2:
    post:
      operationId: samlLogin
      responses:
        "200":
          description: OK
      tags:
        - auth-http-adapter
  /auth/sso/apple:
    post:
      operationId: newAppleSignIn
      parameters:
        - in: header
          name: Sub-Domain-Name
          required: false
          schema:
            type: string
        - in: header
          name: App-Name
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppleAuthenticationRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthResponse'
          description: OK
      tags:
        - auth-http-adapter
  /auth/sso/code:
    post:
      operationId: newOAuthLogin
      parameters:
        - in: header
          name: Sub-Domain-Name
          required: false
          schema:
            type: string
        - in: header
          name: App-Name
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/OAuth2AuthenticationRequest'
                trackingRequest:
                  $ref: '#/components/schemas/TrackingRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthResponse'
          description: OK
      tags:
        - auth-http-adapter
  /auth/terms:
    post:
      operationId: validateTermsAccepted
      parameters:
        - in: header
          name: Sub-Domain-Name
          required: false
          schema:
            type: string
        - in: header
          name: App-Name
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/AcceptTermsTokenRequest'
                trackingRequest:
                  $ref: '#/components/schemas/TrackingRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthAccessResponse'
          description: OK
      tags:
        - auth-http-adapter
  /auth/token:
    post:
      operationId: authenticate_1
      parameters:
        - in: header
          name: Sub-Domain-Name
          required: false
          schema:
            type: string
        - in: query
          name: include-memberships
          required: false
          schema:
            type: boolean
        - in: header
          name: App-Name
          required: false
          schema:
            type: string
        - in: query
          name: state
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticationRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthResponse'
          description: OK
      tags:
        - auth-http-adapter
  /auth/token/code:
    post:
      operationId: authenticateWithMultiFactor_1
      parameters:
        - in: header
          name: Sub-Domain-Name
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultiFactorCodeConfirmationRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthResponse'
          description: OK
      tags:
        - auth-http-adapter
  /auth/token/code/workspace/{workspaceId}:
    post:
      operationId: authenticateWithMultiFactorAndChangeWorkspace
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultiFactorRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthResponse'
          description: OK
      tags:
        - auth-http-adapter
  /auth/token/exchange:
    post:
      operationId: exchangeToken
      parameters:
        - in: header
          name: Sub-Domain-Name
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshTokenRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExchangeTokenResponse'
          description: OK
      tags:
        - auth-http-adapter
  /auth/token/owner:
    post:
      operationId: authenticateOwner
      parameters:
        - in: header
          name: Sub-Domain-Name
          required: false
          schema:
            type: string
        - in: header
          name: App-Name
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticationRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthResponse'
          description: OK
      tags:
        - auth-http-adapter
  /auth/token/refresh:
    post:
      operationId: refreshToken
      parameters:
        - in: header
          name: App-Name
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshTokenRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthAccessResponse'
          description: OK
      tags:
        - auth-http-adapter
  /auth/token/{userId}:
    post:
      operationId: authenticate_2
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: header
          name: Sub-Domain-Name
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthAccessResponse'
          description: OK
      tags:
        - auth-http-adapter
  /auth/token/{userId}/workspaces/{workspaceId}:
    post:
      operationId: authenticateAsUser
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: header
          name: Sub-Domain-Name
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthAccessResponse'
          description: OK
      tags:
        - auth-http-adapter
  /auth/tokens:
    delete:
      operationId: authenticate_3
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvalidateTokenRequest'
        required: true
      responses:
        "200":
          description: OK
      tags:
        - auth-http-adapter
  /auth/unlock-account/resend-email:
    post:
      operationId: unlockAccount_1
      parameters:
        - in: query
          name: email
          required: true
          schema:
            type: string
        - in: header
          name: Sub-Domain-Name
          required: false
          schema:
            type: string
      responses:
        "200":
          description: OK
      tags:
        - auth-http-adapter
  /auth/verification/code/invite/unlock-account/{email}/{token}:
    post:
      operationId: unlockAccountForInvite
      parameters:
        - in: path
          name: email
          required: true
          schema:
            type: string
        - in: path
          name: token
          required: true
          schema:
            type: string
        - in: header
          name: Sub-Domain-Name
          required: false
          schema:
            type: string
      responses:
        "200":
          description: OK
      tags:
        - auth-http-adapter
  /auth/verification/code/unlock-account/{email}/{token}:
    post:
      operationId: unlockAccount
      parameters:
        - in: path
          name: email
          required: true
          schema:
            type: string
        - in: path
          name: token
          required: true
          schema:
            type: string
        - in: header
          name: Sub-Domain-Name
          required: false
          schema:
            type: string
        - in: header
          name: App-Name
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthResponse'
          description: OK
      tags:
        - auth-http-adapter
  /auth/verification/code/validate:
    post:
      operationId: validateVerificationCode
      parameters:
        - in: query
          name: email
          required: true
          schema:
            type: string
        - in: query
          name: code
          required: true
          schema:
            type: string
        - in: header
          name: Sub-Domain-Name
          required: false
          schema:
            type: string
        - in: header
          name: App-Name
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrackingRequest'
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthResponse'
          description: OK
      tags:
        - auth-http-adapter
  /auth/verification/code/{email}:
    post:
      operationId: generateVerificationCode_1
      parameters:
        - in: path
          name: email
          required: true
          schema:
            type: string
        - in: header
          name: Sub-Domain-Name
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerificationCodeRequest'
      responses:
        "200":
          description: OK
      tags:
        - auth-http-adapter
  /auth/verification/validate/{email}:
    get:
      operationId: checkIfAccountIsLocked
      parameters:
        - in: path
          name: email
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: boolean
          description: OK
      tags:
        - auth-http-adapter
  /auth/verify:
    get:
      operationId: verifyAuthToken
      responses:
        "200":
          description: OK
      tags:
        - auth-http-adapter
  /auth/workspaces/{workspaceId}/token/integration:
    post:
      operationId: excahngeRefreshForIntegrationToken
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshTokenRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/IntegrationTokenDto'
          description: OK
      tags:
        - auth-http-adapter
  /auth/workspaces/{workspaceId}/transfer:
    post:
      operationId: authenticateTransferRequest
      parameters:
        - in: header
          name: Sub-Domain-Name
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransferRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TransferAuthenticationTypeDto'
          description: OK
      tags:
        - auth-http-adapter
  /auth/{userId}/setPassword:
    put:
      operationId: setPasswordForUser
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSetPasswordRequest'
        required: true
      responses:
        "200":
          description: OK
      tags:
        - auth-http-adapter
  /cake-migration/migration-revert-started:
    post:
      operationId: migrationRevertStarted
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CakeMigrationRevertStartedRequest'
        required: true
      responses:
        "200":
          description: OK
      tags:
        - cake-migration-http-adapter
  /cake-migration/migration-started:
    post:
      operationId: migrationStarted
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CakeMigrationStartedRequest'
        required: true
      responses:
        "200":
          description: OK
      tags:
        - cake-migration-http-adapter
  /cake/exchange:
    get:
      operationId: initiateTokenExchange
      parameters:
        - in: query
          name: email
          required: false
          schema:
            type: string
        - in: query
          name: workspaceId
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProductExchangeTokenDto'
          description: OK
      tags:
        - Cake Auth
  /cake/exchange/info:
    get:
      operationId: getTokenExchangeFlowInfo
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TokenExchangeFlowInfoDto'
          description: OK
      tags:
        - Cake Auth
  /cake/login/exchange:
    post:
      operationId: verifyCakeExchangeToken
      parameters:
        - in: query
          name: include-memberships
          required: false
          schema:
            type: boolean
        - in: query
          name: workspaceId
          required: false
          schema:
            type: string
        - in: header
          name: App-Name
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CakeExchangeTokenDto'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthResponse'
          description: OK
      tags:
        - Cake Auth
  /cake/memberships:
    get:
      operationId: getCakeMemberships
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CakeOrganizationMembershipDto'
          description: OK
      tags:
        - Cake Memberships
  /cake/migration/status:
    get:
      operationId: checkCurrentUserCakeMigrationStatus
      responses:
        "200":
          description: OK
      tags:
        - Cake Auth
  /cronjobs/accountVerification/createNotificationsForVerifyEmail:
    get:
      operationId: triggerCreateNotificationsForVerifyEmail
      responses:
        "200":
          description: OK
      tags:
        - cron-jobs-http-adapter
  /cronjobs/featureSubscription/expirationNotification:
    get:
      operationId: triggerExpirationNotification
      responses:
        "200":
          description: OK
      tags:
        - cron-jobs-http-adapter
  /cronjobs/featureSubscription/notifyUserAboutTrial:
    get:
      operationId: notifyUserAboutTrial
      responses:
        "200":
          description: OK
      tags:
        - cron-jobs-http-adapter
  /domains:
    get:
      operationId: getAll
      parameters:
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - in: query
          name: page-size
          required: false
          schema:
            type: integer
            format: int32
            default: 10
        - in: query
          name: sortOrder
          required: false
          schema:
            type: string
            default: ASCENDING
        - in: query
          name: searchDomain
          required: false
          schema:
            type: string
            default: ""
        - in: query
          name: isValid
          required: false
          schema:
            type: boolean
            default: false
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DomainDtoAndCount'
          description: OK
      tags:
        - domain-http-adapter
    post:
      operationId: createBulk
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/DomainRequest'
        required: true
      responses:
        "201":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DomainDto'
          description: Created
      tags:
        - domain-http-adapter
  /domains/{domainId}:
    put:
      operationId: update_12
      parameters:
        - in: path
          name: domainId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DomainDto'
          description: OK
      tags:
        - domain-http-adapter
  /email-unsubscribe:
    get:
      operationId: getEmailPreferencesFromEmail
      parameters:
        - in: query
          name: session
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EmailPreferencesDto'
          description: OK
      tags:
        - email-unsubscribe-http-adapter
    post:
      operationId: unsubscribeFromEmail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailUnsubscribeRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EmailSessionDto'
          description: OK
      tags:
        - email-unsubscribe-http-adapter
    put:
      operationId: editEmailPreferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEmailPreferencesRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EmailPreferencesDto'
          description: OK
      tags:
        - email-unsubscribe-http-adapter
  /email-verification/account/{code}:
    get:
      operationId: getAccountVerification
      parameters:
        - in: path
          name: code
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccountVerificationDto'
          description: OK
      tags:
        - email-verification-http-adapter
  /email-verification/email-change/{code}:
    post:
      operationId: confirmEmailChanges
      parameters:
        - in: path
          name: code
          required: true
          schema:
            type: string
        - in: header
          name: Sub-Domain-Name
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthAccessResponse'
          description: OK
      tags:
        - email-verification-http-adapter
  /email-verification/users/{userId}/cancel:
    post:
      operationId: cancelEmailChange
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
      tags:
        - email-verification-http-adapter
  /email-verification/users/{userId}/pending:
    get:
      operationId: hasPendingEmailChangeRequest
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PendingChangeEmailRequestDto'
          description: OK
      tags:
        - email-verification-http-adapter
  /email-verification/users/{userId}/resend:
    post:
      operationId: resendChangeMailVerification
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: query
          name: organizationName
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
      tags:
        - email-verification-http-adapter
  /email-verification/{code}:
    get:
      operationId: doesAccountVerificationExist
      parameters:
        - in: path
          name: code
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: boolean
          description: OK
      tags:
        - email-verification-http-adapter
    post:
      operationId: accountVerification
      parameters:
        - in: path
          name: code
          required: true
          schema:
            type: string
        - in: header
          name: Sub-Domain-Name
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailVerificationRequest'
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthAccessResponse'
          description: OK
      tags:
        - email-verification-http-adapter
  /expense-report/{reportId}:
    get:
      operationId: getInitialData
      parameters:
        - in: path
          name: reportId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvoiceEmailLinkDto'
          description: OK
      tags:
        - invoice-email-link-http-adapter
  /expense-report/{reportId}/download:
    post:
      operationId: downloadReport
      parameters:
        - in: path
          name: reportId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvoiceEmailLinkPinRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: string
                format: binary
          description: OK
      tags:
        - invoice-email-link-http-adapter
  /expense-report/{reportId}/reset-pin:
    patch:
      operationId: resetPin
      parameters:
        - in: path
          name: reportId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
      tags:
        - invoice-email-link-http-adapter
  /expense-report/{reportId}/validate-pin:
    patch:
      operationId: validatePin
      parameters:
        - in: path
          name: reportId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvoiceEmailLinkPinRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvoiceEmailLinkPinValidationDto'
          description: OK
      tags:
        - invoice-email-link-http-adapter
  /file/config:
    post:
      operationId: uploadConfig
      requestBody:
        content:
          application/json:
            schema:
              required:
                - file
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UploadFileResponse'
          description: OK
      tags:
        - User
  /file/image:
    post:
      operationId: uploadImage_1
      requestBody:
        content:
          application/json:
            schema:
              required:
                - file
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UploadFileResponse'
          description: OK
      tags:
        - User
  /file/profile-image:
    post:
      operationId: uploadProfileImage
      requestBody:
        content:
          application/json:
            schema:
              required:
                - file
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UploadFileResponse'
          description: OK
      tags:
        - User
  /file/{fileId}:
    get:
      operationId: download
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
      tags:
        - User
  /invitations/join/{invitationCode}:
    post:
      operationId: create_22
      parameters:
        - in: header
          name: App-Name
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewUserJoinsRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthAccessResponse'
          description: OK
      tags:
        - user-invitation-http-adapter
  /invitations/workspaces/{workspaceId}/users/{userId}:
    put:
      operationId: deleteUserFromWorkspace
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: userId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeWorkspaceStatusWithNotificationMarkRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/WorkspaceDto'
          description: OK
      tags:
        - user-invitation-http-adapter
  /invitations/workspaces/{workspaceId}/users/{userId}/status:
    put:
      operationId: updateUserStatus_1
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: userId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeWorkspaceStatusWithNotificationMarkRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MembershipDto'
          description: OK
      tags:
        - user-invitation-http-adapter
  /invitations/{invitationCode}:
    get:
      operationId: getInvitationByCode
      parameters:
        - in: path
          name: invitationCode
          required: true
          schema:
            type: string
        - in: header
          name: Sub-Domain-Name
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvitedUserDto'
          description: OK
      tags:
        - user-invitation-http-adapter
    post:
      operationId: joinWorkspace
      parameters:
        - in: header
          name: App-Name
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewUserJoinsRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthAccessResponse'
          description: OK
      tags:
        - user-invitation-http-adapter
  /kiosk/workspaces/{workspaceId}/kiosks/{kioskId}/info:
    get:
      operationId: getKioskBootInfo
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: kioskId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LoggedInKioskInfoDto'
          description: OK
      tags:
        - kiosk-auth-http-adapter
  /kiosk/workspaces/{workspaceId}/kiosks/{kioskId}/logout:
    post:
      operationId: kioskLogout
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: kioskId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KioskLogoutRequest'
        required: true
      responses:
        "200":
          description: OK
      tags:
        - kiosk-auth-http-adapter
  /kiosk/workspaces/{workspaceId}/kiosks/{kioskId}/member/forgot-pin:
    post:
      operationId: forgotPin
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: kioskId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserForgotPinRequest'
        required: true
      responses:
        "200":
          description: OK
      tags:
        - kiosk-auth-http-adapter
  /kiosk/workspaces/{workspaceId}/kiosks/{kioskId}/member/login:
    post:
      operationId: loginUser
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: kioskId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KioskUserLoginRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/KioskTokenDto'
          description: OK
      tags:
        - kiosk-auth-http-adapter
  /kiosk/workspaces/{workspaceId}/kiosks/{kioskId}/member/logout:
    post:
      operationId: logoutUser
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: kioskId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
      tags:
        - kiosk-auth-http-adapter
  /kiosk/workspaces/{workspaceId}/kiosks/{kioskId}/members:
    get:
      operationId: getKioskMembers
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: kioskId
          required: true
          schema:
            type: string
        - in: query
          name: search
          required: false
          schema:
            type: string
            default: ""
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - in: query
          name: page-size
          required: false
          schema:
            type: integer
            format: int32
            default: 50
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/KioskMemberDto'
          description: OK
      tags:
        - kiosk-members-http-adapter
  /kiosk/workspaces/{workspaceId}/kiosks/{kioskId}/members/user/{userId}/details:
    get:
      operationId: getKioskMemberDetails
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: kioskId
          required: true
          schema:
            type: string
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: query
          name: timeZoneOffsetMinutes
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/KioskMemberDetailsDto'
          description: OK
      tags:
        - kiosk-members-http-adapter
  /kiosk/workspaces/{workspaceId}/kiosks/{kioskId}/members/{userId}:
    get:
      operationId: getKioskMember
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: kioskId
          required: true
          schema:
            type: string
        - in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/KioskMemberDto'
          description: OK
      tags:
        - kiosk-members-http-adapter
  /kiosk/workspaces/{workspaceId}/kiosks/{kioskId}/user/break:
    post:
      operationId: startBreak
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: kioskId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KioskEntryRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TimeEntryDtoImpl'
          description: OK
      tags:
        - kiosk-entries-http-adapter
  /kiosk/workspaces/{workspaceId}/kiosks/{kioskId}/user/clock-in:
    post:
      operationId: clockIn
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: kioskId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KioskClockInRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TimeEntryDtoImpl'
          description: OK
      tags:
        - kiosk-entries-http-adapter
  /kiosk/workspaces/{workspaceId}/kiosks/{kioskId}/user/clock-out:
    post:
      operationId: clockOut
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: kioskId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KioskEntryRequest'
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TimeEntryDtoImpl'
          description: OK
      tags:
        - kiosk-entries-http-adapter
  /kiosk/workspaces/{workspaceId}/kiosks/{kioskId}/user/currently-running:
    patch:
      operationId: updateCurrentRunningEntry
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: kioskId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KioskEntryRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TimeEntryDtoImpl'
          description: OK
      tags:
        - kiosk-entries-http-adapter
  /kiosk/workspaces/{workspaceId}/kiosks/{kioskId}/user/finish-break:
    post:
      operationId: finishBreak
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: kioskId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FinishBreakRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TimeEntryDtoImpl'
          description: OK
      tags:
        - kiosk-entries-http-adapter
  /kiosk/workspaces/{workspaceId}/kiosks/{kioskId}/user/projects:
    get:
      operationId: searchEntities
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: kioskId
          required: true
          schema:
            type: string
        - in: query
          name: search-term
          required: false
          schema:
            type: string
        - in: query
          name: projectFavorites
          required: false
          schema:
            type: boolean
            default: false
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
            default: 1
        - in: query
          name: page-size
          required: false
          schema:
            type: integer
            format: int32
            default: 10
        - in: query
          name: entry-type
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/KioskProjectDtoList'
          description: OK
      tags:
        - kiosk-projects-http-adapter
  /kiosk/workspaces/{workspaceId}/kiosks/{kioskId}/user/projects/{projectId}/favorites:
    delete:
      operationId: removeProjectFromFavorite
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: kioskId
          required: true
          schema:
            type: string
        - in: path
          name: projectId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
      tags:
        - kiosk-projects-http-adapter
    post:
      operationId: addProjectToFavorite
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: kioskId
          required: true
          schema:
            type: string
        - in: path
          name: projectId
          required: true
          schema:
            type: string
      responses:
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProjectFavoritesDto'
          description: Created
      tags:
        - kiosk-projects-http-adapter
  /kiosk/workspaces/{workspaceId}/kiosks/{kioskId}/user/projects/{projectId}/tasks/{taskId}/favorites:
    delete:
      operationId: removeTaskFromFavorite
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: kioskId
          required: true
          schema:
            type: string
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: taskId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
      tags:
        - kiosk-projects-http-adapter
    post:
      operationId: addTaskToFavorite
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: kioskId
          required: true
          schema:
            type: string
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: taskId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TaskFavoritesDto'
          description: OK
      tags:
        - kiosk-projects-http-adapter
  /kiosks/{kioskId}/auth/code:
    post:
      operationId: generateVerificationCode
      parameters:
        - in: path
          name: kioskId
          required: true
          schema:
            type: string
        - in: header
          name: Sub-Domain-Name
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KioskAuthenticationCodeRequest'
        required: true
      responses:
        "200":
          description: OK
      tags:
        - kiosk-auth-http-adapter
  /kiosks/{kioskId}/auth/{code}:
    post:
      operationId: verificationCodeLogin
      parameters:
        - in: path
          name: kioskId
          required: true
          schema:
            type: string
        - in: path
          name: code
          required: true
          schema:
            type: string
        - in: header
          name: Sub-Domain-Name
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KioskAuthenticationRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AbstractKioskTokenDto'
          description: OK
      tags:
        - kiosk-auth-http-adapter
  /kiosks/{kioskId}/autologin-token/{urlToken}:
    post:
      operationId: authenticateAutologin
      parameters:
        - in: path
          name: kioskId
          required: true
          schema:
            type: string
        - in: path
          name: urlToken
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AbstractKioskTokenDto'
          description: OK
      tags:
        - kiosk-auth-http-adapter
  /kiosks/{kioskId}/blocked/email:
    post:
      operationId: resendUnlockEmail
      parameters:
        - in: path
          name: kioskId
          required: true
          schema:
            type: string
        - in: header
          name: Sub-Domain-Name
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResendUnlockAccountEmailForKiosk'
        required: true
      responses:
        "200":
          description: OK
      tags:
        - kiosk-auth-http-adapter
  /kiosks/{kioskId}/blocked/{email}/{token}:
    delete:
      operationId: unlockAccountFromKiosk
      parameters:
        - in: path
          name: kioskId
          required: true
          schema:
            type: string
        - in: path
          name: email
          required: true
          schema:
            type: string
        - in: path
          name: token
          required: true
          schema:
            type: string
        - in: header
          name: Sub-Domain-Name
          required: false
          schema:
            type: string
        - in: header
          name: App-Name
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AbstractKioskTokenDto'
          description: OK
      tags:
        - kiosk-auth-http-adapter
  /kiosks/{kioskId}/login:
    post:
      operationId: authenticate
      parameters:
        - in: path
          name: kioskId
          required: true
          schema:
            type: string
        - in: header
          name: Sub-Domain-Name
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticationRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AbstractKioskTokenDto'
          description: OK
      tags:
        - kiosk-auth-http-adapter
  /kiosks/{kioskId}/login-settings:
    get:
      operationId: getLoginSettings_2
      parameters:
        - in: path
          name: kioskId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/KioskLoginSettingsDto'
          description: OK
      tags:
        - kiosk-auth-http-adapter
  /kiosks/{kioskId}/login/code:
    post:
      operationId: authenticateWithMultiFactor
      parameters:
        - in: path
          name: kioskId
          required: true
          schema:
            type: string
        - in: header
          name: Sub-Domain-Name
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultiFactorCodeConfirmationRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AbstractKioskTokenDto'
          description: OK
      tags:
        - kiosk-auth-http-adapter
  /kiosks/{kioskId}/login/role:
    post:
      operationId: getRolesIfAuthenticationPasses
      parameters:
        - in: path
          name: kioskId
          required: true
          schema:
            type: string
        - in: header
          name: Sub-Domain-Name
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticationRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
          description: OK
      tags:
        - kiosk-auth-http-adapter
  /kiosks/{kioskId}/login/token:
    get:
      operationId: kioskLogin
      parameters:
        - in: path
          name: kioskId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/KioskTokenDto'
          description: OK
      tags:
        - kiosk-auth-http-adapter
  /kiosks/{kioskId}/sso/code:
    post:
      operationId: oAuthLogin
      parameters:
        - in: path
          name: kioskId
          required: true
          schema:
            type: string
        - in: header
          name: Sub-Domain-Name
          required: false
          schema:
            type: string
        - in: header
          name: App-Name
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/OAuth2AuthenticationRequest'
                trackingRequest:
                  $ref: '#/components/schemas/TrackingRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthAccessResponse'
          description: OK
      tags:
        - kiosk-auth-http-adapter
  /metrics/rate-limiter:
    get:
      operationId: getRateLimiterMetrics
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
          description: OK
      tags:
        - rate-limiter-metrics-adapter
  /multifactor/code:
    post:
      operationId: requestCodeOnLogin
      parameters:
        - in: header
          name: Sub-Domain-Name
          required: false
          schema:
            type: string
        - in: query
          name: state
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultiFactorResendCodeLoginRequest'
        required: true
      responses:
        "200":
          description: OK
      tags:
        - multi-factor-http-adapter
  /multifactor/settings/code:
    post:
      operationId: requestCodeForSetup_1
      parameters:
        - in: header
          name: Sub-Domain-Name
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultiFactorResendCodeOptionalActionRequest'
        required: true
      responses:
        "200":
          description: OK
      tags:
        - multi-factor-http-adapter
  /multifactor/user-settings/code:
    post:
      operationId: enableMultiFactorOnLogin
      parameters:
        - in: header
          name: Sub-Domain-Name
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultiFactorCodeConfirmationRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthResponse'
          description: OK
      tags:
        - multi-factor-http-adapter
  /multifactor/users/{userId}:
    post:
      operationId: updateUserSettings
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: header
          name: Sub-Domain-Name
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultiFactorUserSettingsCodeConfirmationRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MultiFactorAuthUserDto'
          description: OK
      tags:
        - multi-factor-http-adapter
  /multifactor/users/{userId}/code:
    post:
      operationId: requestCodeForSetup
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: header
          name: Sub-Domain-Name
          required: false
          schema:
            type: string
      responses:
        "200":
          description: OK
      tags:
        - multi-factor-http-adapter
  /multifactor/workspace/disabled/user/{userId}:
    get:
      operationId: getFirstAvailableWorkspaceWithoutMfEnabled
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: header
          name: Sub-Domain-Name
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WorkspaceDto'
          description: OK
      tags:
        - multi-factor-http-adapter
  /multifactor/workspace/{workspaceId}/code:
    post:
      operationId: updateWorkspaceSettings
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: header
          name: Sub-Domain-Name
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultiFactorWorkspaceConfirmationRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/WorkspaceSettingsDto'
          description: OK
      tags:
        - multi-factor-http-adapter
  /password-reset-tokens:
    post:
      operationId: sendPasswordResetToken
      parameters:
        - in: header
          name: Sub-Domain-Name
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetEmailRequest'
        required: true
      responses:
        "200":
          description: OK
      tags:
        - password-reset-http-adapter
  /password-reset-tokens/{tokenId}:
    get:
      operationId: getPasswordResetToken
      parameters:
        - in: path
          name: tokenId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PasswordResetTokenDto'
          description: OK
      tags:
        - password-reset-http-adapter
    post:
      operationId: resetPassword
      parameters:
        - in: path
          name: tokenId
          required: true
          schema:
            type: string
        - in: header
          name: Sub-Domain-Name
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthDto'
          description: OK
      tags:
        - password-reset-http-adapter
  /payment-configuration/country:
    patch:
      operationId: update_15
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentConfigurationRequest'
        required: true
      responses:
        "200":
          description: OK
      tags:
        - payment-configuration-http-adapter
  /sales-panel/workspaces/{identifier}/users:
    get:
      operationId: getUsersForSalesPanelByWorkspaceOrSubdomain
      parameters:
        - in: path
          name: identifier
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SalesPanelWorkspaceUsersDto'
          description: OK
      tags:
        - support-http-adapter
  /subdomain/{subdomainName}:
    get:
      operationId: checkIfDomainExists
      parameters:
        - in: path
          name: subdomainName
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: boolean
          description: OK
      tags:
        - subdomain-http-adapter
  /subscription/coupons/used:
    put:
      operationId: markCouponAsUsed
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionCouponRequest'
        required: true
      responses:
        "200":
          description: OK
      tags:
        - subscription-coupon-integration-http-adapter
  /subscription/coupons/valid:
    post:
      operationId: isValidCoupon
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionCouponRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SubscriptionCouponValidationResultDto'
          description: OK
      tags:
        - subscription-coupon-integration-http-adapter
  /subscription/{subscriptionId}/card-owner:
    get:
      operationId: getUserEmailBySubscriptionId
      parameters:
        - in: path
          name: subscriptionId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: string
          description: OK
      tags:
        - support-http-adapter
  /subscription/{subscriptionId}/owner:
    get:
      operationId: getOwnerEmailBySubscriptionId
      parameters:
        - in: path
          name: subscriptionId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: string
          description: OK
      tags:
        - support-http-adapter
  /survey/workspaces/{workspaceId}/survey-type/{surveyType}/user-survey-flow/{surveyFlow}:
    get:
      operationId: getWorkspaceSurveyDataDto
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: surveyType
          required: true
          schema:
            type: string
        - in: path
          name: surveyFlow
          required: true
          schema:
            type: string
        - in: query
          name: testSurveyPhase
          required: false
          schema:
            type: string
        - in: query
          name: testShowSurvey
          required: false
          schema:
            type: boolean
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/WorkspaceSurveyDataDto'
          description: OK
      tags:
        - Survey
    post:
      operationId: createEmptySurveyResponse
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: surveyType
          required: true
          schema:
            type: string
        - in: path
          name: surveyFlow
          required: true
          schema:
            type: string
        - in: query
          name: testSurveyPhase
          required: false
          schema:
            type: string
      responses:
        "201":
          description: Created
      tags:
        - Survey
    put:
      operationId: updateSurveyResponse
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: surveyType
          required: true
          schema:
            type: string
        - in: path
          name: surveyFlow
          required: true
          schema:
            type: string
        - in: query
          name: testSurveyPhase
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSurveyResponseRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SurveyResponseDto'
          description: OK
      tags:
        - Survey
  /system-settings:
    get:
      operationId: getSystemSettings
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SystemSettingsDto'
          description: OK
      tags:
        - system-settings-http-adapter
  /system-settings/custom-emails:
    get:
      operationId: getCustomEmailsSettings
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomEmailsSettingsDto'
          description: OK
      tags:
        - system-settings-http-adapter
  /system-settings/custom-links:
    get:
      operationId: getCustomSupportLinks
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomSupportLinksSettingsDto'
          description: OK
      tags:
        - system-settings-http-adapter
  /system-settings/default-workspace:
    get:
      operationId: getDefaultWorkspace
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SystemSettingsDefaultWorkspaceDto'
          description: OK
      tags:
        - system-settings-http-adapter
  /system-settings/login-preference:
    put:
      operationId: updateLoginPreference
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginPreferenceRequest'
        required: true
      responses:
        "200":
          description: OK
      tags:
        - system-settings-http-adapter
  /system-settings/login-settings:
    get:
      operationId: getLoginSettings_1
      parameters:
        - in: header
          name: Sub-Domain-Name
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LoginSettingsDto'
          description: OK
      tags:
        - system-settings-http-adapter
  /system-settings/o-auth2-configuration:
    get:
      operationId: getOAuth2Configuration
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OAuth2ConfigurationDto'
          description: OK
      tags:
        - system-settings-http-adapter
  /system-settings/saml2-configuration:
    get:
      operationId: getSaml2Configuration
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SAML2ConfigurationDto'
          description: OK
      tags:
        - system-settings-http-adapter
  /system-settings/smtp-configuration:
    get:
      operationId: getSmtpConfiguration
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SMTPConfigurationDto'
          description: OK
      tags:
        - system-settings-http-adapter
  /system-settings/{systemSettingsId}/auto-login:
    put:
      operationId: updateAutoLogin
      parameters:
        - in: path
          name: systemSettingsId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AutoLoginRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SystemSettingsDto'
          description: OK
      tags:
        - system-settings-http-adapter
  /system-settings/{systemSettingsId}/create-workspace:
    put:
      operationId: updateCreateWorkspaceForbidden
      parameters:
        - in: path
          name: systemSettingsId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SystemSettingsRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SystemSettingsDto'
          description: OK
      tags:
        - system-settings-http-adapter
  /system-settings/{systemSettingsId}/custom-emails:
    put:
      operationId: updateCustomEmailsSettings
      parameters:
        - in: path
          name: systemSettingsId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomEmailsSettingsRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomEmailsSettingsDto'
          description: OK
      tags:
        - system-settings-http-adapter
  /system-settings/{systemSettingsId}/custom-links:
    put:
      operationId: updateCustomLinksSettings
      parameters:
        - in: path
          name: systemSettingsId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomSupportLinksSettingsRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomSupportLinksSettingsDto'
          description: OK
      tags:
        - system-settings-http-adapter
  /system-settings/{systemSettingsId}/default-workspace:
    put:
      operationId: updateDefaultWorkspace
      parameters:
        - in: path
          name: systemSettingsId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DefaultWorkspaceRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SystemSettingsDefaultWorkspaceDto'
          description: OK
      tags:
        - system-settings-http-adapter
  /system-settings/{systemSettingsId}/multi-factor:
    post:
      operationId: requestMultiFactorCode
      parameters:
        - in: header
          name: Sub-Domain-Name
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultiFactorRequest'
        required: true
      responses:
        "200":
          description: OK
      tags:
        - system-settings-http-adapter
  /system-settings/{systemSettingsId}/multi-factor/code:
    post:
      operationId: confirmMultiFactorSystemSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultiFactorConfirmation'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SystemSettingsDto'
          description: OK
      tags:
        - system-settings-http-adapter
  /system-settings/{systemSettingsId}/o-auth2-configuration:
    put:
      operationId: updateOAuth2Configuration
      parameters:
        - in: path
          name: systemSettingsId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OAuthConfigurationRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OAuth2ConfigurationDto'
          description: OK
      tags:
        - system-settings-http-adapter
  /system-settings/{systemSettingsId}/saml2-configuration:
    put:
      operationId: updateSaml2Configuration
      parameters:
        - in: path
          name: systemSettingsId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SAML2ConfigurationRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SAML2ConfigurationDto'
          description: OK
      tags:
        - system-settings-http-adapter
  /system-settings/{systemSettingsId}/smtp-configuration:
    put:
      operationId: updateSmtpConfiguration
      parameters:
        - in: path
          name: systemSettingsId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SmtpConfigurationRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SMTPConfigurationDto'
          description: OK
      tags:
        - system-settings-http-adapter
  /transfer/access/disable:
    post:
      operationId: disableAccessToEntitiesInTransfer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisableAccessToEntitiesInTransferRequest'
        required: true
      responses:
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/WorkspaceTransferAccessDisabledDto'
          description: Created
      tags:
        - transfer-http-adapter
  /transfer/access/enable/{workspaceId}:
    delete:
      operationId: enableAccessToEntitiesInTransfer
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
      tags:
        - transfer-http-adapter
  /transfer/workspace-info/users-exist:
    post:
      operationId: usersExist
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsersExistRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: boolean
          description: OK
      tags:
        - transfer-http-adapter
  /transfer/{workspaceId}/cleanup:
    post:
      operationId: handleCleanupOnSourceRegion
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
      tags:
        - transfer-http-adapter
  /transfer/{workspaceId}/completed:
    post:
      operationId: handleTransferCompletedOnSourceRegion
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
      tags:
        - transfer-http-adapter
  /transfer/{workspaceId}/failure:
    post:
      operationId: handleTransferCompletedFailure
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceTransferFailedRequest'
        required: true
      responses:
        "200":
          description: OK
      tags:
        - transfer-http-adapter
  /transfer/{workspaceId}/success:
    post:
      operationId: handleTransferCompletedSuccess
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceTransferFinishedRequest'
        required: true
      responses:
        "200":
          description: OK
      tags:
        - transfer-http-adapter
  /users:
    get:
      operationId: getAllUsers
      parameters:
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
            default: 1
        - in: query
          name: pageSize
          required: false
          schema:
            type: integer
            format: int32
            default: 10
        - in: query
          name: sortColumn
          required: false
          schema:
            type: string
            default: ID
        - in: query
          name: sortOrder
          required: false
          schema:
            type: string
            default: DESCENDING
        - in: query
          name: searchEmail
          required: false
          schema:
            type: string
            default: ""
        - in: query
          name: strictEmailSearch
          required: false
          schema:
            type: boolean
            default: false
        - in: query
          name: searchName
          required: false
          schema:
            type: string
            default: ""
        - in: query
          name: strictNameSearch
          required: false
          schema:
            type: boolean
            default: false
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UsersDto'
          description: OK
      tags:
        - User
  /users/ids:
    post:
      operationId: getUserInfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsersIdsRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TeamMemberInfoDto'
          description: OK
      tags:
        - User
  /users/newsletter/{userId}:
    get:
      operationId: checkForNewsletterSubscription
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: boolean
          description: OK
      tags:
        - User
  /users/notifications:
    post:
      operationId: addNotifications
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - request
              type: object
              properties:
                image:
                  type: string
                  format: binary
                request:
                  $ref: '#/components/schemas/NewsRequest'
      responses:
        "200":
          description: OK
      tags:
        - notification-http-adapter
  /users/notifications/news:
    get:
      operationId: getNews
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NewsDto'
          description: OK
      tags:
        - notification-http-adapter
  /users/notifications/news/{newsId}:
    delete:
      operationId: deleteNews
      parameters:
        - in: path
          name: newsId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
      tags:
        - notification-http-adapter
    put:
      operationId: updateNews
      parameters:
        - in: path
          name: newsId
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - request
              type: object
              properties:
                image:
                  type: string
                  format: binary
                request:
                  $ref: '#/components/schemas/NewsRequest'
      responses:
        "200":
          description: OK
      tags:
        - notification-http-adapter
  /users/search:
    get:
      operationId: searchAllUsers
      parameters:
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
            default: 1
        - in: query
          name: pageSize
          required: false
          schema:
            type: integer
            format: int32
            default: 10
        - in: query
          name: sortColumn
          required: false
          schema:
            type: string
            default: ID
        - in: query
          name: sortOrder
          required: false
          schema:
            type: string
            default: DESCENDING
        - in: query
          name: email
          required: false
          schema:
            type: string
            default: ""
        - in: query
          name: strictEmailSearch
          required: false
          schema:
            type: boolean
            default: false
        - in: query
          name: name
          required: false
          schema:
            type: string
            default: ""
        - in: query
          name: strictNameSearch
          required: false
          schema:
            type: boolean
            default: false
        - in: query
          name: workspaceId
          required: false
          schema:
            type: string
            default: ""
        - in: header
          name: Task-Id
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UsersDto'
          description: OK
      tags:
        - User
  /users/user-count:
    get:
      operationId: numberOfUsersRegistered
      parameters:
        - in: query
          name: days
          required: false
          schema:
            type: string
            default: "7"
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: integer
                format: int64
          description: OK
      tags:
        - User
  /users/workspaces/{workspaceId}:
    get:
      operationId: getUsersOnWorkspace
      parameters:
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
            default: 1
        - in: query
          name: pageSize
          required: false
          schema:
            type: integer
            format: int32
            default: 10
        - in: query
          name: sortOrder
          required: false
          schema:
            type: string
            default: DESCENDING
        - in: query
          name: sortColumn
          required: false
          schema:
            type: string
            default: id
        - in: query
          name: searchEmail
          required: false
          schema:
            type: string
            default: ""
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UsersAndCountDto'
          description: OK
      tags:
        - User
  /users/workspaces/{workspaceId}/bulk:
    patch:
      operationId: bulkEditUsers
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkEditUsersRequest'
        required: true
      responses:
        "200":
          description: OK
      tags:
        - User
  /users/workspaces/{workspaceId}/count:
    get:
      operationId: getUsersOfWorkspace_5
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: query
          name: email
          required: false
          schema:
            type: string
        - in: query
          name: projectId
          required: false
          schema:
            type: string
        - in: query
          name: name
          required: false
          schema:
            type: string
        - in: query
          name: status
          required: false
          schema:
            type: string
        - in: query
          name: sort-column
          required: false
          schema:
            type: string
            default: NAME
        - in: query
          name: sort-order
          required: false
          schema:
            type: string
            default: ASCENDING
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
            default: 1
        - in: query
          name: page-size
          required: false
          schema:
            type: integer
            format: int32
            default: 50
        - in: query
          name: memberships
          required: false
          schema:
            type: string
            default: NONE
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserListAndCountDto'
          description: OK
      tags:
        - User
  /users/workspaces/{workspaceId}/ids:
    post:
      operationId: getInfo
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsersIdsRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TeamMemberInfoDto'
          description: OK
      tags:
        - User
  /users/workspaces/{workspaceId}/members:
    get:
      operationId: getMembersInfo
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: query
          name: sort-column
          required: false
          schema:
            type: string
            default: NAME
        - in: query
          name: sort-order
          required: false
          schema:
            type: string
            default: ASCENDING
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
            default: 1
        - in: query
          name: page-size
          required: false
          schema:
            type: integer
            format: int32
            default: 50
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TeamMemberInfoDto'
          description: OK
      tags:
        - User
  /users/workspaces/{workspaceId}/names:
    post:
      operationId: getUserNames
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: query
          name: name
          required: false
          schema:
            type: string
            default: ""
        - in: query
          name: sort-column
          required: false
          schema:
            type: string
            default: ID
        - in: query
          name: sort-order
          required: false
          schema:
            type: string
            default: ASCENDING
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
            default: 1
        - in: query
          name: page-size
          required: false
          schema:
            type: integer
            format: int32
            default: 50
        - in: query
          name: status
          required: true
          schema:
            type: string
        - in: query
          name: statuses
          required: false
          schema:
            type: array
            items:
              type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsersIdsRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EntityIdNameDto'
          description: OK
      tags:
        - User
  /users/workspaces/{workspaceId}/policies-for-approval:
    get:
      operationId: findPoliciesToBeApprovedByUser
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PolicyDto'
          description: OK
      tags:
        - User
  /users/workspaces/{workspaceId}/projects/{projectId}:
    get:
      operationId: getUsersAndUsersFromUserGroupsAssignedToProject
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: query
          name: name
          required: false
          schema:
            type: string
        - in: query
          name: statuses
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: sort-column
          required: false
          schema:
            type: string
            default: NAME_LOWERCASE
        - in: query
          name: sort-order
          required: false
          schema:
            type: string
            default: ASCENDING
        - in: query
          name: memberships
          required: false
          schema:
            type: string
            default: NONE
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
            default: 1
        - in: query
          name: excludedIds
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - in: query
          name: page-size
          required: false
          schema:
            type: integer
            format: int32
            default: 50
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDto'
          description: OK
      tags:
        - User
  /users/workspaces/{workspaceId}/projects/{projectId}/members-filter:
    post:
      operationId: getUsersForProjectMembersFilter
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: projectId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserReportFilterRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ReportFilterUsersWithCountDto'
          description: OK
      tags:
        - user-report-filter-http-adapter
  /users/workspaces/{workspaceId}/report-filters/attendance-report/team:
    post:
      operationId: getUsersForAttendanceReportFilter_1
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAttendanceReportFilterRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ReportFilterUsersWithCountDto'
          description: OK
      tags:
        - user-report-filter-http-adapter
  /users/workspaces/{workspaceId}/report-filters/ids:
    get:
      operationId: getUsersOfWorkspace_4
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: query
          name: name
          required: false
          schema:
            type: string
        - in: query
          name: status
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
          description: OK
      tags:
        - user-report-filter-http-adapter
  /users/workspaces/{workspaceId}/report-filters/team:
    get:
      deprecated: true
      operationId: getUsersForReportFilterOld
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: query
          name: searchValue
          required: false
          schema:
            type: string
            default: ""
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
            default: 1
        - in: query
          name: page-size
          required: false
          schema:
            type: integer
            format: int32
            default: 50
        - in: query
          name: sort-column
          required: false
          schema:
            type: string
            default: NAME
        - in: query
          name: sort-order
          required: false
          schema:
            type: string
            default: ASCENDING
        - in: query
          name: force-filter
          required: false
          schema:
            type: boolean
            default: false
        - in: query
          name: ignore-filter
          required: false
          schema:
            type: boolean
            default: false
        - in: query
          name: excludeIds
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - in: query
          name: statuses
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: userStatuses
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: reportType
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ReportFilterUsersWithCountDto'
          description: OK
      tags:
        - user-report-filter-http-adapter
    post:
      operationId: getUsersForReportFilter
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserReportFilterRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ReportFilterUsersWithCountDto'
          description: OK
      tags:
        - user-report-filter-http-adapter
  /users/workspaces/{workspaceId}/user-groups/{userGroupId}:
    get:
      operationId: getUsersOfUserGroup
      parameters:
        - in: path
          name: userGroupId
          required: true
          schema:
            type: string
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: query
          name: name
          required: false
          schema:
            type: string
        - in: query
          name: sort-column
          required: false
          schema:
            type: string
            default: NAME
        - in: query
          name: sort-order
          required: false
          schema:
            type: string
            default: ASCENDING
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
            default: 1
        - in: query
          name: page-size
          required: false
          schema:
            type: integer
            format: int32
            default: 50
        - in: query
          name: memberships
          required: false
          schema:
            type: string
            default: NONE
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDto'
          description: OK
      tags:
        - User
  /users/workspaces/{workspaceId}/users/count:
    get:
      operationId: getUsersOfWorkspace_3
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: query
          name: status
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: integer
                format: int64
          description: OK
      tags:
        - User
  /users/workspaces/{workspaceId}/with-pending:
    get:
      operationId: getUsersOfWorkspace_2
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: query
          name: email
          required: false
          schema:
            type: string
            default: ""
        - in: query
          name: sort-column
          required: false
          schema:
            type: string
            default: ID
        - in: query
          name: sort-order
          required: false
          schema:
            type: string
            default: ASCENDING
        - in: query
          name: searchByNameOnly
          required: false
          schema:
            type: boolean
            default: true
        - in: query
          name: email-as-name
          required: false
          schema:
            type: boolean
            default: false
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
            default: 1
        - in: query
          name: page-size
          required: false
          schema:
            type: integer
            format: int32
            default: 50
        - in: query
          name: excludedIds
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - in: query
          name: statuses
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: userStatuses
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TeamMembersAndCountDto'
          description: OK
      tags:
        - User
  /users/{userId}:
    get:
      operationId: getUser
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserDto'
          description: OK
      tags:
        - User
  /users/{userId}/compactView:
    put:
      operationId: updateTimeTrackingSettings_1
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCompactViewSettings'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserDto'
          description: OK
      tags:
        - User
  /users/{userId}/dashboardMe:
    put:
      operationId: updateDashboardSelection
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDashboardSelection'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserDto'
          description: OK
      tags:
        - User
  /users/{userId}/defaultWorkspace/{workspaceId}:
    post:
      operationId: setDefaultWorkspace
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserDto'
          description: OK
      tags:
        - User
  /users/{userId}/delete:
    post:
      operationId: deleteUser
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDeleteRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserDto'
          description: OK
      tags:
        - User
  /users/{userId}/email:
    put:
      operationId: changeEmail
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: header
          name: Sub-Domain-Name
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeEmailRequest'
        required: true
      responses:
        "200":
          description: OK
      tags:
        - User
  /users/{userId}/lang:
    put:
      operationId: updateLang
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLangRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserDto'
          description: OK
      tags:
        - User
  /users/{userId}/markAsRead:
    post:
      operationId: markAsRead_1
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserNotificationMarkAsReadManyRequest'
        required: true
      responses:
        "200":
          description: OK
      tags:
        - user-notification-http-adapter
    put:
      operationId: markAsRead
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserNotificationMarkAsReadRequest'
        required: true
      responses:
        "200":
          description: OK
      tags:
        - user-notification-http-adapter
  /users/{userId}/name:
    put:
      operationId: changeNameAdmin
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeUsernameRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserDto'
          description: OK
      tags:
        - User
  /users/{userId}/name/workspaces/{workspaceId}:
    put:
      operationId: changeNameAdmin_1
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeUsernameRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserDto'
          description: OK
      tags:
        - User
  /users/{userId}/news:
    get:
      operationId: getNewsForUser
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NewsDto'
          description: OK
      tags:
        - user-notification-http-adapter
    put:
      operationId: readNews
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReadNewsRequest'
        required: true
      responses:
        "200":
          description: OK
      tags:
        - user-notification-http-adapter
  /users/{userId}/notifications:
    get:
      operationId: getNotifications
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: query
          name: type
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NotificationDto'
          description: OK
      tags:
        - user-notification-http-adapter
  /users/{userId}/picture:
    put:
      operationId: updatePicture
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddProfilePictureRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserDto'
          description: OK
      tags:
        - User
  /users/{userId}/settings:
    patch:
      operationId: updateNameAndProfilePicture
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateNameAndProfilePictureRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UsersNameAndProfilePictureDto'
          description: OK
      tags:
        - User
    put:
      operationId: updateSettings
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: header
          name: Sub-Domain-Name
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserSettingsRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserDto'
          description: OK
      tags:
        - User
  /users/{userId}/summaryReportSettings:
    put:
      operationId: updateSummaryReportSettings
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSummaryReportSettingsRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserDto'
          description: OK
      tags:
        - User
  /users/{userId}/timeTrackingSettings:
    put:
      operationId: updateTimeTrackingSettings
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTimeTrackingSettingsRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserDto'
          description: OK
      tags:
        - User
  /users/{userId}/timezone:
    put:
      operationId: updateTimezone
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTimezoneRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserDto'
          description: OK
      tags:
        - User
  /users/{userId}/verification-notifications:
    get:
      operationId: getVerificationCampaignNotifications
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NotificationDto'
          description: OK
      tags:
        - notification-http-adapter
  /users/{userId}/verification-notifications/read:
    post:
      operationId: markNotificationsAsRead
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserNotificationMarkAsReadManyRequest'
        required: true
      responses:
        "200":
          description: OK
      tags:
        - notification-http-adapter
  /users/{userId}/workspaces/{workspaceId}/work-capacity:
    get:
      operationId: getWorkCapacityForUser
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserCapacityDto'
          description: OK
      tags:
        - User
  /users/{userId}/workspaces/{workspaceId}/working-days:
    get:
      operationId: getUsersWorkingDays
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
                  enum:
                    - MONDAY
                    - TUESDAY
                    - WEDNESDAY
                    - THURSDAY
                    - FRIDAY
                    - SATURDAY
                    - SUNDAY
          description: OK
      tags:
        - User
  /v1/file/image:
    post:
      operationId: uploadImage
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - file
              type: object
              properties:
                file:
                  type: string
                  description: Image to be uploaded
                  format: binary
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadFileResponseV1'
          description: OK
      summary: Add photo
      tags:
        - User
        - backend-app
  /v1/user:
    get:
      operationId: getLoggedUser
      parameters:
        - description: If set to true, memberships will be included.
          example: true
          in: query
          name: include-memberships
          required: false
          schema:
            type: string
            description: If set to true, memberships will be included.
            example: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDtoV1'
          description: OK
      security:
        - MarketplaceKeyAuth: []
        - ApiKeyAuth: []
        - AddonKeyAuth: []
      summary: Get currently logged-in user's info
      tags:
        - User
        - backend-app
  /v1/workspaces:
    get:
      operationId: getWorkspacesOfUser_1
      parameters:
        - description: If provided, you'll get a filtered list of workspaces where you have any of the specified roles. Owners are not counted as admins when filtering.
          example:
            - WORKSPACE_ADMIN
            - OWNER
          in: query
          name: roles
          required: false
          schema:
            type: string
            enum:
              - WORKSPACE_ADMIN
              - OWNER
              - TEAM_MANAGER
              - PROJECT_MANAGER
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WorkspaceDtoV1'
          description: OK
      security:
        - MarketplaceKeyAuth: []
        - ApiKeyAuth: []
      summary: Get all my workspaces
      tags:
        - backend-app
        - Workspace
    post:
      operationId: createWorkspace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceDtoV1'
          description: Created
      security:
        - ApiKeyAuth: []
      summary: Add workspace
      tags:
        - backend-app
        - Workspace
  /v1/workspaces/{workspaceId}:
    get:
      operationId: getWorkspaceOfUser
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceDtoV1'
          description: OK
      summary: Get workspace info
      tags:
        - backend-app
        - Workspace
  /v1/workspaces/{workspaceId}/addons/{addonId}/webhooks:
    get:
      operationId: getAddonWebhooks_1
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
        - description: Represents addon identifier across the system.
          example: 64c777ddd3fcab07cfbb210c
          in: path
          name: addonId
          required: true
          schema:
            type: string
            description: Represents addon identifier across the system.
            example: 64c777ddd3fcab07cfbb210c
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhooksDtoV1'
          description: OK
      summary: Get all webhooks for addon on workspace
      tags:
        - Webhooks
        - backend-app
  /v1/workspaces/{workspaceId}/approval-requests:
    get:
      operationId: getApprovalGroups_1
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
        - description: Filters results based from the provided approval state.
          example: PENDING
          in: query
          name: status
          required: false
          schema:
            type: string
            enum:
              - PENDING
              - APPROVED
              - WITHDRAWN_SUBMISSION
              - WITHDRAWN_APPROVAL
              - REJECTED
        - description: Represents the column name to be used as sorting criteria.
          example: START
          in: query
          name: sort-column
          required: false
          schema:
            type: string
            enum:
              - ID
              - USER_ID
              - START
              - UPDATED_AT
        - description: Represents the sorting order.
          example: ASCENDING
          in: query
          name: sort-order
          required: false
          schema:
            type: string
            enum:
              - ASCENDING
              - DESCENDING
        - description: Page number.
          example: 1
          in: query
          name: page
          required: false
          schema:
            type: string
            description: Page number.
            example: 1
            default: "1"
        - description: Page size.
          example: 50
          in: query
          name: page-size
          required: false
          schema:
            maximum: 200
            minimum: 1
            type: string
            description: Page size.
            example: 50
            default: "50"
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApprovalDetailsDtoV1'
          description: OK
      summary: Get approval requests
      tags:
        - Approval
        - backend-app
    post:
      operationId: createApprrovalRequest
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateApprovalRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApprovalRequestDtoV1'
          description: Created
      summary: Submit approval request
      tags:
        - Approval
        - backend-app
  /v1/workspaces/{workspaceId}/approval-requests/resubmit-entries-for-approval:
    post:
      operationId: resubmitApprovalRequest
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateApprovalRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApprovalRequestDtoV1'
          description: OK
      summary: Re-submit rejected/withdrawn entries/expenses for approval
      tags:
        - Approval
        - backend-app
  /v1/workspaces/{workspaceId}/approval-requests/users/{userId}:
    post:
      operationId: createApprovalForOther
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
        - description: Represents user identifier across the system.
          example: 5a0ab5acb07987125438b60f
          in: path
          name: userId
          required: true
          schema:
            type: string
            description: Represents user identifier across the system.
            example: 5a0ab5acb07987125438b60f
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateApprovalRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApprovalRequestDtoV1'
          description: Created
      summary: Submit approval request for user
      tags:
        - Approval
        - backend-app
  /v1/workspaces/{workspaceId}/approval-requests/users/{userId}/resubmit-entries-for-approval:
    post:
      operationId: resubmitApprovalRequestForOther
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
        - description: Represents user identifier across the system.
          example: 5a0ab5acb07987125438b60f
          in: path
          name: userId
          required: true
          schema:
            type: string
            description: Represents user identifier across the system.
            example: 5a0ab5acb07987125438b60f
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateApprovalRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApprovalRequestDtoV1'
          description: OK
      summary: Re-submit rejected/withdrawn entries/expenses for approval for user
      tags:
        - Approval
        - backend-app
  /v1/workspaces/{workspaceId}/approval-requests/{approvalRequestId}:
    patch:
      operationId: updateApprovalStatus
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
        - description: Represents approval request identifier across the system.
          example: 940ab5acb07987125438b65y
          in: path
          name: approvalRequestId
          required: true
          schema:
            type: string
            description: Represents approval request identifier across the system.
            example: 940ab5acb07987125438b65y
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateApprovalRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApprovalRequestDtoV1'
          description: OK
      summary: Update approval request
      tags:
        - Approval
        - backend-app
  /v1/workspaces/{workspaceId}/clients:
    get:
      operationId: getClients_3
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
        - description: Filters client results that matches with the string provided in their client name.
          example: Client X
          in: query
          name: name
          required: false
          schema:
            type: string
            description: Filters client results that matches with the string provided in their client name.
            example: Client X
        - description: Column name that will be used as criteria for sorting results.
          example: NAME
          in: query
          name: sort-column
          required: false
          schema:
            type: string
            description: Column name that will be used as criteria for sorting results.
            example: NAME
        - description: Sorting mode
          example: ASCENDING
          in: query
          name: sort-order
          required: false
          schema:
            type: string
            default: ASCENDING
        - description: Page number.
          example: 1
          in: query
          name: page
          required: false
          schema:
            type: string
            description: Page number.
            example: 1
            default: "1"
        - description: Page size.
          example: 50
          in: query
          name: page-size
          required: false
          schema:
            maximum: 5000
            minimum: 1
            type: string
            description: Page size.
            example: 50
            default: "50"
        - description: Filter whether to include archived clients or not.
          example: false
          in: query
          name: archived
          required: false
          schema:
            type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClientWithCurrencyDtoV1'
          description: OK
      summary: Find clients on workspace
      tags:
        - Client
        - backend-app
    post:
      operationId: createClient
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateClientRequestV1'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientWithCurrencyDtoV1'
          description: Created
      summary: Add a new client
      tags:
        - Client
        - backend-app
  /v1/workspaces/{workspaceId}/clients/{id}:
    delete:
      operationId: deleteClient
      parameters:
        - description: Represents client identifier across the system.
          example: 44a687e29ae1f428e7ebe305
          in: path
          name: id
          required: true
          schema:
            type: string
            description: Represents client identifier across the system.
            example: 44a687e29ae1f428e7ebe305
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientDtoV1'
          description: OK
      summary: Delete client
      tags:
        - Client
        - backend-app
    get:
      operationId: getClient_1
      parameters:
        - description: Represents client identifier across the system.
          example: 44a687e29ae1f428e7ebe305
          in: path
          name: id
          required: true
          schema:
            type: string
            description: Represents client identifier across the system.
            example: 44a687e29ae1f428e7ebe305
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientWithCurrencyDtoV1'
          description: OK
      summary: Get client by ID
      tags:
        - Client
        - backend-app
    put:
      operationId: updateClient
      parameters:
        - description: Represents client identifier across the system.
          example: 44a687e29ae1f428e7ebe305
          in: path
          name: id
          required: true
          schema:
            type: string
            description: Represents client identifier across the system.
            example: 44a687e29ae1f428e7ebe305
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
        - in: query
          name: archive-projects
          required: false
          schema:
            type: boolean
        - in: query
          name: mark-tasks-as-done
          required: false
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateClientRequestV1'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientDtoV1'
          description: OK
      summary: Update client
      tags:
        - Client
        - backend-app
  /v1/workspaces/{workspaceId}/cost-rate:
    put:
      operationId: setWorkspaceCostRate
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CostRateRequestV1'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceDtoV1'
          description: OK
      summary: Update workspace cost rate
      tags:
        - backend-app
        - Workspace
  /v1/workspaces/{workspaceId}/custom-fields:
    get:
      operationId: ofWorkspace_1
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
        - description: If provided, you'll get a filtered list of custom fields that contain the provided string in their name.
          example: nationality
          in: query
          name: name
          required: false
          schema:
            type: string
            description: If provided, you'll get a filtered list of custom fields that contain the provided string in their name.
            example: nationality
        - description: If provided, you'll get a filtered list of custom fields that matches the provided string with the custom field status.
          example: VISIBLE
          in: query
          name: status
          required: false
          schema:
            type: string
            enum:
              - INACTIVE
              - VISIBLE
              - INVISIBLE
        - description: If provided, you'll get a filtered list of custom fields that matches the provided string with the custom field entity type.
          example:
            - TIMEENTRY
            - USER
          in: query
          name: entity-type
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomFieldDtoV1'
          description: OK
      summary: Get custom fields on workspace
      tags:
        - backend-app
        - Custom fields
    post:
      operationId: create_21
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomFieldRequestV1'
        required: true
      responses:
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomFieldDtoV1'
          description: Created
      summary: Create custom fields on workspace
      tags:
        - backend-app
        - Custom fields
  /v1/workspaces/{workspaceId}/custom-fields/{customFieldId}:
    delete:
      operationId: delete_19
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: customFieldId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
      summary: Delete custom field
      tags:
        - backend-app
        - Custom fields
    put:
      operationId: editCustomField
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
        - description: Represents custom field identifier across the system.
          example: 26a687e29ae1f428e7ebe101
          in: path
          name: customFieldId
          required: true
          schema:
            type: string
            description: Represents custom field identifier across the system.
            example: 26a687e29ae1f428e7ebe101
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCustomFieldRequestV1'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomFieldDtoV1'
          description: OK
      summary: Set custom field as required
      tags:
        - backend-app
        - Custom fields
  /v1/workspaces/{workspaceId}/expenses:
    get:
      operationId: getExpenses_1
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
        - description: Page number.
          example: 1
          in: query
          name: page
          required: false
          schema:
            type: string
            description: Page number.
            example: 1
            default: "1"
        - description: Page size.
          example: 50
          in: query
          name: page-size
          required: false
          schema:
            maximum: 200
            minimum: 1
            type: string
            description: Page size.
            example: 50
            default: "50"
        - description: If provided, you'll get a filtered list of expenses which match the provided string in the user ID linked to the expense.
          example: 5a0ab5acb07987125438b60f
          in: query
          name: user-id
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpensesAndTotalsDtoV1'
          description: OK
      summary: Get all expenses on workspace
      tags:
        - Expense
        - backend-app
    post:
      operationId: createExpense_1
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateExpenseV1Request'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpenseDtoV1'
          description: Created
      summary: Create expense
      tags:
        - Expense
        - backend-app
  /v1/workspaces/{workspaceId}/expenses/categories:
    get:
      operationId: getCategories_1
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
        - description: Represents the column name to be used as sorting criteria.
          example: NAME
          in: query
          name: sort-column
          required: false
          schema:
            type: string
            enum:
              - NAME
        - description: Represents the sorting order.
          example: ASCENDING
          in: query
          name: sort-order
          required: false
          schema:
            type: string
            enum:
              - ASCENDING
              - DESCENDING
        - description: Page number.
          example: 1
          in: query
          name: page
          required: false
          schema:
            type: string
            description: Page number.
            example: 1
            default: "1"
        - description: Page size.
          example: 50
          in: query
          name: page-size
          required: false
          schema:
            maximum: 5000
            minimum: 1
            type: string
            description: Page size.
            example: 50
            default: "50"
        - description: Flag to filter results based on whether category is archived or not.
          example: true
          in: query
          name: archived
          required: false
          schema:
            type: string
            description: Flag to filter results based on whether category is archived or not.
            example: true
        - description: If provided, you'll get a filtered list of expense categories that matches the provided string in their name.
          example: procurement
          in: query
          name: name
          required: false
          schema:
            type: string
            description: If provided, you'll get a filtered list of expense categories that matches the provided string in their name.
            example: procurement
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpenseCategoriesWithCountDtoV1'
          description: OK
      summary: Get all expense categories
      tags:
        - Expense
        - backend-app
    post:
      operationId: createExpenseCategory
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExpenseCategoryV1Request'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpenseCategoryDtoV1'
          description: Created
      summary: Add expense category
      tags:
        - Expense
        - backend-app
  /v1/workspaces/{workspaceId}/expenses/categories/{categoryId}:
    delete:
      operationId: deleteCategory_1
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
        - description: Represents category identifier across the system.
          example: 89a687e29ae1f428e7ebe567
          in: path
          name: categoryId
          required: true
          schema:
            type: string
            description: Represents category identifier across the system.
            example: 89a687e29ae1f428e7ebe567
      responses:
        "204":
          description: No Content
      summary: Delete expense category
      tags:
        - Expense
        - backend-app
    put:
      operationId: updateCategory_1
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
        - description: Represents category identifier across the system.
          example: 89a687e29ae1f428e7ebe567
          in: path
          name: categoryId
          required: true
          schema:
            type: string
            description: Represents category identifier across the system.
            example: 89a687e29ae1f428e7ebe567
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExpenseCategoryV1Request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpenseCategoryDtoV1'
          description: OK
      summary: Update expense category
      tags:
        - Expense
        - backend-app
  /v1/workspaces/{workspaceId}/expenses/categories/{categoryId}/status:
    patch:
      operationId: updateExpenseCategoryStatus
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
        - description: Represents category identifier across the system.
          example: 89a687e29ae1f428e7ebe567
          in: path
          name: categoryId
          required: true
          schema:
            type: string
            description: Represents category identifier across the system.
            example: 89a687e29ae1f428e7ebe567
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExpenseCategoryArchiveV1Request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpenseCategoryDtoV1'
          description: OK
      summary: Archive expense category
      tags:
        - Expense
        - backend-app
  /v1/workspaces/{workspaceId}/expenses/{expenseId}:
    delete:
      operationId: deleteExpense_1
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
        - description: Represents expense identifier across the system.
          example: 64c777ddd3fcab07cfbb210c
          in: path
          name: expenseId
          required: true
          schema:
            type: string
            description: Represents expense identifier across the system.
            example: 64c777ddd3fcab07cfbb210c
      responses:
        "200":
          description: OK
      summary: Delete expense
      tags:
        - Expense
        - backend-app
    get:
      operationId: getExpense_1
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
        - description: Represents expense identifier across the system.
          example: 64c777ddd3fcab07cfbb210c
          in: path
          name: expenseId
          required: true
          schema:
            type: string
            description: Represents expense identifier across the system.
            example: 64c777ddd3fcab07cfbb210c
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpenseDtoV1'
          description: OK
      summary: Get expense by ID
      tags:
        - Expense
        - backend-app
    put:
      operationId: updateExpense_1
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
        - description: Represents expense identifier across the system.
          example: 64c777ddd3fcab07cfbb210c
          in: path
          name: expenseId
          required: true
          schema:
            type: string
            description: Represents expense identifier across the system.
            example: 64c777ddd3fcab07cfbb210c
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdateExpenseV1Request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpenseDtoV1'
          description: OK
      summary: Update expense
      tags:
        - Expense
        - backend-app
  /v1/workspaces/{workspaceId}/expenses/{expenseId}/files/{fileId}:
    get:
      operationId: downloadFile_1
      parameters:
        - description: Represents file identifier across the system.
          example: 745687e29ae1f428e7ebe890
          in: path
          name: fileId
          required: true
          schema:
            type: string
            description: Represents file identifier across the system.
            example: 745687e29ae1f428e7ebe890
        - description: Represents expense identifier across the system.
          example: 64c777ddd3fcab07cfbb210c
          in: path
          name: expenseId
          required: true
          schema:
            type: string
            description: Represents expense identifier across the system.
            example: 64c777ddd3fcab07cfbb210c
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: string
                format: byte
          description: OK
      summary: Download receipt
      tags:
        - Expense
        - backend-app
  /v1/workspaces/{workspaceId}/holidays:
    get:
      operationId: getHolidays_2
      parameters:
        - description: Represents workspace identifier across the system.
          example: 60f91b3ffdaf031696ec61a8
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 60f91b3ffdaf031696ec61a8
        - description: If provided, you'll get a filtered list of holidays assigned to user.
          example: 60f924bafdaf031696ec6218
          in: query
          name: assigned-to
          required: false
          schema:
            type: string
            description: If provided, you'll get a filtered list of holidays assigned to user.
            example: 60f924bafdaf031696ec6218
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HolidayDtoV1'
          description: OK
      summary: Get holidays on workspace
      tags:
        - Holiday
        - backend-app
    post:
      operationId: createHoliday
      parameters:
        - description: Represents workspace identifier across the system.
          example: 60f91b3ffdaf031696ec61a8
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 60f91b3ffdaf031696ec61a8
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateHolidayRequestV1'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HolidayDtoV1'
          description: OK
      summary: Create holiday
      tags:
        - Holiday
        - backend-app
  /v1/workspaces/{workspaceId}/holidays/in-period:
    get:
      operationId: getHolidaysInPeriod
      parameters:
        - description: Represents workspace identifier across the system.
          example: 60f91b3ffdaf031696ec61a8
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 60f91b3ffdaf031696ec61a8
        - description: If provided, you'll get a filtered list of holidays assigned to user.
          example: 60f924bafdaf031696ec6218
          in: query
          name: assigned-to
          required: true
          schema:
            type: string
            description: If provided, you'll get a filtered list of holidays assigned to user.
            example: 60f924bafdaf031696ec6218
        - description: If provided, you'll get a filtered list of holidays starting from start date. Expected date format yyyy-mm-dd
          example: "2022-12-03"
          in: query
          name: start
          required: true
          schema:
            type: string
            description: If provided, you'll get a filtered list of holidays starting from start date. Expected date format yyyy-mm-dd
            example: "2022-12-03"
        - description: If provided, you'll get a filtered list of holidays ending by end date. Expected date format yyyy-mm-dd
          example: "2022-12-05"
          in: query
          name: end
          required: true
          schema:
            type: string
            description: If provided, you'll get a filtered list of holidays ending by end date. Expected date format yyyy-mm-dd
            example: "2022-12-05"
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HolidayDtoV1'
          description: OK
      summary: Get holiday in specific period
      tags:
        - Holiday
        - backend-app
  /v1/workspaces/{workspaceId}/holidays/{holidayId}:
    delete:
      operationId: deleteHoliday
      parameters:
        - description: Represents workspace identifier across the system.
          example: 60f91b3ffdaf031696ec61a8
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 60f91b3ffdaf031696ec61a8
        - description: Represents holiday identifier across the system.
          example: 60f927920658241e3cf35e02
          in: path
          name: holidayId
          required: true
          schema:
            type: string
            description: Represents holiday identifier across the system.
            example: 60f927920658241e3cf35e02
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HolidayDto'
          description: OK
      summary: Delete holiday
      tags:
        - Holiday
        - backend-app
    put:
      operationId: updateHoliday
      parameters:
        - description: Represents workspace identifier across the system.
          example: 60f91b3ffdaf031696ec61a8
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 60f91b3ffdaf031696ec61a8
        - description: Represents holiday identifier across the system.
          example: 60f927920658241e3cf35e02
          in: path
          name: holidayId
          required: true
          schema:
            type: string
            description: Represents holiday identifier across the system.
            example: 60f927920658241e3cf35e02
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateHolidayRequestV1'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HolidayDtoV1'
          description: OK
      summary: Update holiday
      tags:
        - Holiday
        - backend-app
  /v1/workspaces/{workspaceId}/hourly-rate:
    put:
      operationId: setWorkspaceHourlyRate
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RateWithCurrencyRequestV1'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceDtoV1'
          description: OK
      summary: Update workspace billable rate
      tags:
        - backend-app
        - Workspace
  /v1/workspaces/{workspaceId}/invoices:
    get:
      operationId: getInvoices_1
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
        - description: Page number.
          example: 1
          in: query
          name: page
          required: false
          schema:
            type: string
            description: Page number.
            example: 1
            default: "1"
        - description: Page size.
          example: 50
          in: query
          name: page-size
          required: false
          schema:
            maximum: 5000
            minimum: 1
            type: string
            description: Page size.
            example: 50
            default: "50"
        - description: If provided, you'll get a filtered result of invoices that matches the provided string in the user ID linked to the expense.
          example:
            - UNSENT
            - PAID
          in: query
          name: statuses
          required: false
          schema:
            type: string
            enum:
              - UNSENT
              - SENT
              - PAID
              - PARTIALLY_PAID
              - VOID
              - OVERDUE
        - description: 'Valid column name as sorting criteria. Default: ID'
          example: CLIENT
          in: query
          name: sort-column
          required: false
          schema:
            type: string
            enum:
              - ID
              - CLIENT
              - DUE_ON
              - ISSUE_DATE
              - AMOUNT
              - BALANCE
        - description: 'Sort order. Default: ASCENDING'
          example: ASCENDING
          in: query
          name: sort-order
          required: false
          schema:
            type: string
            enum:
              - ASCENDING
              - DESCENDING
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoicesListDtoV1'
          description: OK
      summary: Get all invoices on workspace
      tags:
        - Invoice
        - backend-app
    post:
      operationId: createInvoice_1
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateInvoiceRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateInvoiceDtoV1'
          description: Created
      summary: Add invoice
      tags:
        - Invoice
        - backend-app
  /v1/workspaces/{workspaceId}/invoices/info:
    post:
      operationId: getInvoicesInfo_1
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvoiceFilterRequestV1'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceInfoResponseDtoV1'
          description: OK
      summary: Filter out invoices
      tags:
        - Invoice
        - backend-app
  /v1/workspaces/{workspaceId}/invoices/settings:
    get:
      operationId: getInvoiceSettings_1
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceSettingsDtoV1'
          description: OK
      summary: Get invoice in another language
      tags:
        - Invoice
        - backend-app
    put:
      operationId: updateInvoiceSettings_1
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateInvoiceSettingsRequestV1'
        required: true
      responses:
        "200":
          description: OK
      summary: Change invoice language
      tags:
        - Invoice
        - backend-app
  /v1/workspaces/{workspaceId}/invoices/{invoiceId}:
    delete:
      operationId: deleteInvoice_1
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
        - description: Represents invoice identifier across the system.
          example: 78a687e29ae1f428e7ebe303
          in: path
          name: invoiceId
          required: true
          schema:
            type: string
            description: Represents invoice identifier across the system.
            example: 78a687e29ae1f428e7ebe303
      responses:
        "200":
          description: OK
      summary: Delete invoice
      tags:
        - Invoice
        - backend-app
    get:
      operationId: getInvoice_1
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
        - description: Represents invoice identifier across the system.
          example: 83q687e29ae1f428e7ebe195
          in: path
          name: invoiceId
          required: true
          schema:
            type: string
            description: Represents invoice identifier across the system.
            example: 83q687e29ae1f428e7ebe195
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceOverviewDtoV1'
          description: OK
      summary: Get invoice by ID
      tags:
        - Invoice
        - backend-app
    put:
      operationId: updateInvoice_1
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
        - description: Represents invoice identifier across the system.
          example: 78a687e29ae1f428e7ebe303
          in: path
          name: invoiceId
          required: true
          schema:
            type: string
            description: Represents invoice identifier across the system.
            example: 78a687e29ae1f428e7ebe303
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateInvoiceRequestV1'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceOverviewDtoV1'
          description: OK
      summary: Send invoice
      tags:
        - Invoice
        - backend-app
  /v1/workspaces/{workspaceId}/invoices/{invoiceId}/duplicate:
    post:
      operationId: duplicateInvoice_1
      parameters:
        - description: Represents invoice identifier across the system.
          example: 78a687e29ae1f428e7ebe303
          in: path
          name: invoiceId
          required: true
          schema:
            type: string
            description: Represents invoice identifier across the system.
            example: 78a687e29ae1f428e7ebe303
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceOverviewDtoV1'
          description: Created
      summary: Duplicate invoice
      tags:
        - Invoice
        - backend-app
  /v1/workspaces/{workspaceId}/invoices/{invoiceId}/export:
    get:
      operationId: exportInvoice_1
      parameters:
        - description: Represents invoice identifier across the system.
          example: 78a687e29ae1f428e7ebe303
          in: path
          name: invoiceId
          required: true
          schema:
            type: string
            description: Represents invoice identifier across the system.
            example: 78a687e29ae1f428e7ebe303
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
        - description: Represents a locale.
          example: en
          in: query
          name: userLocale
          required: true
          schema:
            type: string
            description: Represents a locale.
            example: en
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: string
                format: byte
          description: OK
      summary: Export invoice
      tags:
        - Invoice
        - backend-app
  /v1/workspaces/{workspaceId}/invoices/{invoiceId}/payments:
    get:
      operationId: getPaymentsForInvoice_1
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
        - description: Represents invoice identifier across the system.
          example: 78a687e29ae1f428e7ebe303
          in: path
          name: invoiceId
          required: true
          schema:
            type: string
            description: Represents invoice identifier across the system.
            example: 78a687e29ae1f428e7ebe303
        - description: Page number.
          example: 1
          in: query
          name: page
          required: false
          schema:
            type: string
            description: Page number.
            example: 1
            default: "1"
        - description: Page size.
          example: 50
          in: query
          name: page-size
          required: false
          schema:
            maximum: 5000
            minimum: 1
            type: string
            description: Page size.
            example: 50
            default: "50"
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InvoicePaymentDtoV1'
          description: OK
      summary: Get payments for invoice
      tags:
        - Invoice
        - backend-app
    post:
      operationId: createInvoicePayment_1
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
        - description: Represents invoice identifier across the system.
          example: 78a687e29ae1f428e7ebe303
          in: path
          name: invoiceId
          required: true
          schema:
            type: string
            description: Represents invoice identifier across the system.
            example: 78a687e29ae1f428e7ebe303
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateInvoicePaymentRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceOverviewDtoV1'
          description: Created
      summary: Add payment to invoice
      tags:
        - Invoice
        - backend-app
  /v1/workspaces/{workspaceId}/invoices/{invoiceId}/payments/{paymentId}:
    delete:
      operationId: deletePaymentById_1
      parameters:
        - description: Represents invoice identifier across the system.
          example: 78a687e29ae1f428e7ebe303
          in: path
          name: invoiceId
          required: true
          schema:
            type: string
            description: Represents invoice identifier across the system.
            example: 78a687e29ae1f428e7ebe303
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
        - description: Represents payment identifier across the system.
          example: 56p687e29ae1f428e7ebe456
          in: path
          name: paymentId
          required: true
          schema:
            type: string
            description: Represents payment identifier across the system.
            example: 56p687e29ae1f428e7ebe456
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceOverviewDtoV1'
          description: OK
      summary: Delete payment from invoice
      tags:
        - Invoice
        - backend-app
  /v1/workspaces/{workspaceId}/invoices/{invoiceId}/status:
    patch:
      operationId: changeInvoiceStatus_1
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
        - description: Represents invoice identifier across the system.
          example: 78a687e29ae1f428e7ebe303
          in: path
          name: invoiceId
          required: true
          schema:
            type: string
            description: Represents invoice identifier across the system.
            example: 78a687e29ae1f428e7ebe303
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeInvoiceStatusRequestV1'
        required: true
      responses:
        "200":
          description: OK
      summary: Change invoice status
      tags:
        - Invoice
        - backend-app
  /v1/workspaces/{workspaceId}/member-profile/{userId}:
    get:
      operationId: getMemberProfile_1
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
        - description: Represents user identifier across the system.
          example: 5a0ab5acb07987125438b60f
          in: path
          name: userId
          required: true
          schema:
            type: string
            description: Represents user identifier across the system.
            example: 5a0ab5acb07987125438b60f
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberProfileDtoV1'
          description: OK
      summary: Get member's profile
      tags:
        - User
        - backend-app
    patch:
      operationId: updateMemberProfileWithAdditionalData_1
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
        - description: Represents user identifier across the system.
          example: 5a0ab5acb07987125438b60f
          in: path
          name: userId
          required: true
          schema:
            type: string
            description: Represents user identifier across the system.
            example: 5a0ab5acb07987125438b60f
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MemberProfileFullRequestV1'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberProfileDtoV1'
          description: OK
      summary: Update member's profile
      tags:
        - User
        - backend-app
  /v1/workspaces/{workspaceId}/member-profile/{userId}/email:
    put:
      operationId: changeUserMemberEmail_1
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
        - description: Represents user identifier across the system.
          example: 5a0ab5acb07987125438b60f
          in: path
          name: userId
          required: true
          schema:
            type: string
            description: Represents user identifier across the system.
            example: 5a0ab5acb07987125438b60f
        - description: Represents a subdomain name.
          example: coolestcompany
          in: header
          name: Sub-Domain-Name
          required: false
          schema:
            type: string
            description: Represents a subdomain name.
            example: coolestcompany
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeEmailRequest'
        required: true
      responses:
        "200":
          description: OK
      summary: Update user's email
      tags:
        - User
        - backend-app
  /v1/workspaces/{workspaceId}/projects:
    get:
      operationId: getProjects_4
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
        - description: If provided, you'll get a filtered list of projects that contains the provided string in the project name.
          example: Software Development
          in: query
          name: name
          required: false
          schema:
            type: string
            description: If provided, you'll get a filtered list of projects that contains the provided string in the project name.
            example: Software Development
        - description: Flag to toggle on/off strict search mode. When set to true, search by name will only return projects whose name exactly matches the string value given for the 'name' parameter. When set to false, results will also include projects whose name contain the string value, but could be longer than the string value itself. For example, if there is a project with the name 'applications', and the search value is 'app', setting strict-name-search to true will not return that project in the results, whereas setting it to false will.
          in: query
          name: strict-name-search
          required: false
          schema:
            type: string
            description: Flag to toggle on/off strict search mode. When set to true, search by name will only return projects whose name exactly matches the string value given for the 'name' parameter. When set to false, results will also include projects whose name contain the string value, but could be longer than the string value itself. For example, if there is a project with the name 'applications', and the search value is 'app', setting strict-name-search to true will not return that project in the results, whereas setting it to false will.
        - description: If provided and set to true, you'll only get archived projects. If omitted, you'll get both archived and non-archived projects.
          in: query
          name: archived
          required: false
          schema:
            type: string
            description: If provided and set to true, you'll only get archived projects. If omitted, you'll get both archived and non-archived projects.
        - description: If provided and set to true, you'll only get billable projects. If omitted, you'll get both billable and non-billable projects.
          in: query
          name: billable
          required: false
          schema:
            type: string
            description: If provided and set to true, you'll only get billable projects. If omitted, you'll get both billable and non-billable projects.
        - description: If provided, you'll get a filtered list of projects that contain clients which match any of the provided ids.
          example:
            - 5a0ab5acb07987125438b60f
            - 64c777ddd3fcab07cfbb210c
          in: query
          name: clients
          required: false
          schema:
            type: string
            description: If provided, you'll get a filtered list of projects that contain clients which match any of the provided ids.
            example:
              - 5a0ab5acb07987125438b60f
              - 64c777ddd3fcab07cfbb210c
        - description: If set to true, you'll get a filtered list of projects that contain clients which match the provided id(s) in 'clients' field. If set to false, you'll get a filtered list of projects which do NOT contain clients that match the provided id(s) in 'clients' field.
          in: query
          name: contains-client
          required: false
          schema:
            type: string
            description: If set to true, you'll get a filtered list of projects that contain clients which match the provided id(s) in 'clients' field. If set to false, you'll get a filtered list of projects which do NOT contain clients that match the provided id(s) in 'clients' field.
        - description: Filters projects based on client status provided.
          example: ACTIVE
          in: query
          name: client-status
          required: false
          schema:
            type: string
            enum:
              - ACTIVE
              - ARCHIVED
              - ALL
        - description: If provided, you'll get a filtered list of projects that contain users which match any of the provided ids.
          example:
            - 5a0ab5acb07987125438b60f
            - 64c777ddd3fcab07cfbb210c
          in: query
          name: users
          required: false
          schema:
            type: string
            description: If provided, you'll get a filtered list of projects that contain users which match any of the provided ids.
            example:
              - 5a0ab5acb07987125438b60f
              - 64c777ddd3fcab07cfbb210c
        - description: If set to true, you'll get a filtered list of projects that contain users which match the provided id(s) in 'users' field. If set to false, you'll get a filtered list of projects which do NOT contain users which match the provided id(s) in 'users' field.
          in: query
          name: contains-user
          required: false
          schema:
            type: string
            description: If set to true, you'll get a filtered list of projects that contain users which match the provided id(s) in 'users' field. If set to false, you'll get a filtered list of projects which do NOT contain users which match the provided id(s) in 'users' field.
        - description: Filters projects based on user status provided.
          example: ALL
          in: query
          name: user-status
          required: false
          schema:
            type: string
            enum:
              - PENDING
              - ACTIVE
              - DECLINED
              - INACTIVE
              - ALL
        - description: Filters projects based on whether they are used as a template or not.
          in: query
          name: is-template
          required: false
          schema:
            type: string
            description: Filters projects based on whether they are used as a template or not.
        - description: Sorts the results by the given column/field.
          example: NAME
          in: query
          name: sort-column
          required: false
          schema:
            type: string
            enum:
              - ID
              - NAME
              - CLIENT_NAME
              - DURATION
              - BUDGET
              - PROGRESS
        - description: Sorting mode.
          example: ASCENDING
          in: query
          name: sort-order
          required: false
          schema:
            type: string
            enum:
              - ASCENDING
              - DESCENDING
        - description: If set to true, results will contain additional information about the project.
          in: query
          name: hydrated
          required: false
          schema:
            type: string
            description: If set to true, results will contain additional information about the project.
        - description: Page number.
          example: 1
          in: query
          name: page
          required: false
          schema:
            type: string
            description: Page number.
            example: 1
            default: "1"
        - description: Page size.
          example: 50
          in: query
          name: page-size
          required: false
          schema:
            maximum: 5000
            minimum: 1
            type: string
            description: Page size.
            example: 50
            default: "50"
        - description: Valid set of string(s). If provided, you'll get a filtered list of projects that matches the provided access.
          example: PUBLIC
          in: query
          name: access
          required: false
          schema:
            type: string
            enum:
              - PUBLIC
              - PRIVATE
        - description: Represents maximum number of expenses to fetch.
          example: 10
          in: query
          name: expense-limit
          required: false
          schema:
            type: string
            description: Represents maximum number of expenses to fetch.
            example: 10
            default: "20"
        - description: If provided, you will get expenses dated before the provided value in yyyy-MM-dd format.
          example: "2024-12-31"
          in: query
          name: expense-date
          required: false
          schema:
            type: string
            description: If provided, you will get expenses dated before the provided value in yyyy-MM-dd format.
            example: "2024-12-31"
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectDtoV1'
          description: OK
      summary: Get all projects on workspace
      tags:
        - Project
        - backend-app
    post:
      operationId: createNewProject
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectDtoImplV1'
          description: Created
      summary: Add a new project
      tags:
        - Project
        - backend-app
  /v1/workspaces/{workspaceId}/projects/{projectId}:
    delete:
      operationId: deleteProject
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
        - description: Represents project identifier across the system.
          example: 5b641568b07987035750505e
          in: path
          name: projectId
          required: true
          schema:
            type: string
            description: Represents project identifier across the system.
            example: 5b641568b07987035750505e
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectDtoImplV1'
          description: OK
      summary: Delete project from workspace
      tags:
        - Project
        - backend-app
    get:
      operationId: getProject_2
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
        - description: Represents project identifier across the system.
          example: 5b641568b07987035750505e
          in: path
          name: projectId
          required: true
          schema:
            type: string
            description: Represents project identifier across the system.
            example: 5b641568b07987035750505e
        - description: If set to true, results will contain additional information about the project
          in: query
          name: hydrated
          required: false
          schema:
            type: string
            description: If set to true, results will contain additional information about the project
        - description: If provided, you'll get a filtered list of custom fields that matches the provided string with the custom field entity type.
          example: TIMEENTRY
          in: query
          name: custom-field-entity-type
          required: false
          schema:
            type: string
            default: TIMEENTRY
        - description: Represents maximum number of expenses to fetch.
          example: 10
          in: query
          name: expense-limit
          required: false
          schema:
            type: string
            description: Represents maximum number of expenses to fetch.
            example: 10
            default: "20"
        - description: If provided, you will get expenses dated before the provided value in yyyy-MM-dd format.
          example: "2024-12-31"
          in: query
          name: expense-date
          required: false
          schema:
            type: string
            description: If provided, you will get expenses dated before the provided value in yyyy-MM-dd format.
            example: "2024-12-31"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectDtoV1'
          description: OK
      summary: Find project by ID
      tags:
        - Project
        - backend-app
    put:
      operationId: updateProject_1
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
        - description: Represents project identifier across the system.
          example: 5b641568b07987035750505e
          in: path
          name: projectId
          required: true
          schema:
            type: string
            description: Represents project identifier across the system.
            example: 5b641568b07987035750505e
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProjectRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectDtoImplV1'
          description: OK
      summary: Update project on workspace
      tags:
        - Project
        - backend-app
  /v1/workspaces/{workspaceId}/projects/{projectId}/custom-fields:
    get:
      operationId: getCustomFieldsOfProject
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
        - description: Represents project identifier across the system.
          example: 5b641568b07987035750505e
          in: path
          name: projectId
          required: true
          schema:
            type: string
            description: Represents project identifier across the system.
            example: 5b641568b07987035750505e
        - description: If provided, you'll get a filtered list of custom fields that matches the provided string with the custom field status.
          example: INACTIVE
          in: query
          name: status
          required: true
          schema:
            type: string
            enum:
              - INACTIVE
              - VISIBLE
              - INVISIBLE
        - description: If provided, you'll get a filtered list of custom fields that matches the provided string with the custom field entity type.
          example: TIMEENTRY
          in: query
          name: entity-type
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomFieldDtoV1'
          description: OK
      summary: Get custom fields on project
      tags:
        - backend-app
        - Custom fields
  /v1/workspaces/{workspaceId}/projects/{projectId}/custom-fields/{customFieldId}:
    delete:
      operationId: removeDefaultValueOfProject_1
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
        - description: Represents project identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: projectId
          required: true
          schema:
            type: string
            description: Represents project identifier across the system.
            example: 64a687e29ae1f428e7ebe303
        - description: Represents custom field identifier across the system.
          example: 26a687e29ae1f428e7ebe101
          in: path
          name: customFieldId
          required: true
          schema:
            type: string
            description: Represents custom field identifier across the system.
            example: 26a687e29ae1f428e7ebe101
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomFieldDtoV1'
          description: OK
      summary: Remove custom field from project
      tags:
        - backend-app
        - Custom fields
    patch:
      operationId: editProjectCustomFieldDefaultValue
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
        - description: Represents project identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: projectId
          required: true
          schema:
            type: string
            description: Represents project identifier across the system.
            example: 64a687e29ae1f428e7ebe303
        - description: Represents custom field identifier across the system.
          example: 26a687e29ae1f428e7ebe101
          in: path
          name: customFieldId
          required: true
          schema:
            type: string
            description: Represents custom field identifier across the system.
            example: 26a687e29ae1f428e7ebe101
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomFieldProjectDefaultValuesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomFieldDtoV1'
          description: OK
      summary: Update custom field on project
      tags:
        - backend-app
        - Custom fields
  /v1/workspaces/{workspaceId}/projects/{projectId}/estimate:
    patch:
      operationId: updateEstimate_1
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
        - description: Represents project identifier across the system.
          example: 5b641568b07987035750505e
          in: path
          name: projectId
          required: true
          schema:
            type: string
            description: Represents project identifier across the system.
            example: 5b641568b07987035750505e
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectEstimateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectDtoImplV1'
          description: OK
      summary: Update project estimate
      tags:
        - Project
        - backend-app
  /v1/workspaces/{workspaceId}/projects/{projectId}/memberships:
    patch:
      operationId: updateMemberships
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
        - description: Represents project identifier across the system.
          example: 5b641568b07987035750505e
          in: path
          name: projectId
          required: true
          schema:
            type: string
            description: Represents project identifier across the system.
            example: 5b641568b07987035750505e
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProjectMembershipsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectDtoImplV1'
          description: OK
      summary: Update project memberships
      tags:
        - Project
        - backend-app
    post:
      operationId: addUsersToProject
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
        - description: Represents project identifier across the system.
          example: 5b641568b07987035750505e
          in: path
          name: projectId
          required: true
          schema:
            type: string
            description: Represents project identifier across the system.
            example: 5b641568b07987035750505e
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddUsersToProjectRequestV1'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProjectDtoImplV1'
          description: OK
      summary: Assign/remove users to/from the project
      tags:
        - Project
        - backend-app
  /v1/workspaces/{workspaceId}/projects/{projectId}/tasks:
    get:
      operationId: getTasks_2
      parameters:
        - description: Represents project identifier across the system.
          example: 25b687e29ae1f428e7ebe123
          in: path
          name: projectId
          required: true
          schema:
            type: string
            description: Represents project identifier across the system.
            example: 25b687e29ae1f428e7ebe123
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
        - description: If provided, you'll get a filtered list of tasks that matches the provided string in their name.
          example: Bugfixing
          in: query
          name: name
          required: false
          schema:
            type: string
            description: If provided, you'll get a filtered list of tasks that matches the provided string in their name.
            example: Bugfixing
        - description: Flag to toggle on/off strict search mode. When set to true, search by name only will return tasks whose name exactly matches the string value given for the 'name' parameter. When set to false, results will also include tasks whose name contain the string value, but could be longer than the string value itself. For example, if there is a task with the name 'applications', and the search value is 'app', setting strict-name-search to true will not return that task in the results, whereas setting it to false will.
          in: query
          name: strict-name-search
          required: false
          schema:
            type: string
            description: Flag to toggle on/off strict search mode. When set to true, search by name only will return tasks whose name exactly matches the string value given for the 'name' parameter. When set to false, results will also include tasks whose name contain the string value, but could be longer than the string value itself. For example, if there is a task with the name 'applications', and the search value is 'app', setting strict-name-search to true will not return that task in the results, whereas setting it to false will.
        - description: Filters search results whether task is active or not.
          in: query
          name: is-active
          required: false
          schema:
            type: string
            description: Filters search results whether task is active or not.
        - description: Page number.
          example: 1
          in: query
          name: page
          required: false
          schema:
            type: string
            description: Page number.
            example: 1
            default: "1"
        - description: Page size.
          example: 50
          in: query
          name: page-size
          required: false
          schema:
            maximum: 5000
            minimum: 1
            type: string
            description: Page size.
            example: 50
            default: "50"
        - description: Represents the column as criteria for sorting tasks.
          example: ID
          in: query
          name: sort-column
          required: false
          schema:
            type: string
            enum:
              - ID
              - NAME
        - description: Sorting mode.
          example: ASCENDING
          in: query
          name: sort-order
          required: false
          schema:
            type: string
            enum:
              - ASCENDING
              - DESCENDING
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaskDtoV1'
          description: OK
      summary: Find tasks on project
      tags:
        - Task
        - backend-app
    post:
      operationId: createTask
      parameters:
        - description: Represents project identifier across the system.
          example: 25b687e29ae1f428e7ebe123
          in: path
          name: projectId
          required: true
          schema:
            type: string
            description: Represents project identifier across the system.
            example: 25b687e29ae1f428e7ebe123
        - description: Flag to set whether task will have assignee or none.
          in: query
          name: contains-assignee
          required: false
          schema:
            type: string
            description: Flag to set whether task will have assignee or none.
            default: "true"
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskRequestV1'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskDtoV1'
          description: Created
      summary: Add a new task on project
      tags:
        - Task
        - backend-app
  /v1/workspaces/{workspaceId}/projects/{projectId}/tasks/{id}/cost-rate:
    put:
      operationId: setTaskCostRate
      parameters:
        - description: Represents project identifier across the system.
          example: 25b687e29ae1f428e7ebe123
          in: path
          name: projectId
          required: true
          schema:
            type: string
            description: Represents project identifier across the system.
            example: 25b687e29ae1f428e7ebe123
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
        - description: Represents task identifier across the system.
          example: 57a687e29ae1f428e7ebe107
          in: path
          name: id
          required: true
          schema:
            type: string
            description: Represents task identifier across the system.
            example: 57a687e29ae1f428e7ebe107
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CostRateRequestV1'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskDtoV1'
          description: OK
      summary: Update task cost rate
      tags:
        - Task
        - backend-app
  /v1/workspaces/{workspaceId}/projects/{projectId}/tasks/{id}/hourly-rate:
    put:
      operationId: setTaskHourlyRate
      parameters:
        - description: Represents project identifier across the system.
          example: 25b687e29ae1f428e7ebe123
          in: path
          name: projectId
          required: true
          schema:
            type: string
            description: Represents project identifier across the system.
            example: 25b687e29ae1f428e7ebe123
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
        - description: Represents task identifier across the system.
          example: 57a687e29ae1f428e7ebe107
          in: path
          name: id
          required: true
          schema:
            type: string
            description: Represents task identifier across the system.
            example: 57a687e29ae1f428e7ebe107
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HourlyRateRequestV1'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskDtoV1'
          description: OK
      summary: Update task billable rate
      tags:
        - Task
        - backend-app
  /v1/workspaces/{workspaceId}/projects/{projectId}/tasks/{taskId}:
    delete:
      operationId: deleteTask
      parameters:
        - description: Represents task identifier across the system.
          example: 57a687e29ae1f428e7ebe107
          in: path
          name: taskId
          required: true
          schema:
            type: string
            description: Represents task identifier across the system.
            example: 57a687e29ae1f428e7ebe107
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
        - description: Represents project identifier across the system.
          example: 25b687e29ae1f428e7ebe123
          in: path
          name: projectId
          required: true
          schema:
            type: string
            description: Represents project identifier across the system.
            example: 25b687e29ae1f428e7ebe123
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskDtoV1'
          description: OK
      summary: Delete task from project
      tags:
        - Task
        - backend-app
    get:
      operationId: getTask
      parameters:
        - description: Represents task identifier across the system.
          example: 57a687e29ae1f428e7ebe107
          in: path
          name: taskId
          required: true
          schema:
            type: string
            description: Represents task identifier across the system.
            example: 57a687e29ae1f428e7ebe107
        - description: Represents project identifier across the system.
          example: 25b687e29ae1f428e7ebe123
          in: path
          name: projectId
          required: true
          schema:
            type: string
            description: Represents project identifier across the system.
            example: 25b687e29ae1f428e7ebe123
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskDtoV1'
          description: OK
      summary: Get task by id
      tags:
        - Task
        - backend-app
    put:
      operationId: updateTask
      parameters:
        - description: Represents task identifier across the system.
          example: 57a687e29ae1f428e7ebe107
          in: path
          name: taskId
          required: true
          schema:
            type: string
            description: Represents task identifier across the system.
            example: 57a687e29ae1f428e7ebe107
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
        - description: Represents project identifier across the system.
          example: 25b687e29ae1f428e7ebe123
          in: path
          name: projectId
          required: true
          schema:
            type: string
            description: Represents project identifier across the system.
            example: 25b687e29ae1f428e7ebe123
        - description: Flag to set whether task will have assignee or none.
          in: query
          name: contains-assignee
          required: false
          schema:
            type: string
            description: Flag to set whether task will have assignee or none.
            default: "true"
        - description: Represents a membership status.
          example: ACTIVE
          in: query
          name: membership-status
          required: false
          schema:
            type: string
            enum:
              - PENDING
              - ACTIVE
              - DECLINED
              - INACTIVE
              - ALL
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTaskRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskDtoV1'
          description: OK
      summary: Update task on project
      tags:
        - Task
        - backend-app
  /v1/workspaces/{workspaceId}/projects/{projectId}/template:
    patch:
      operationId: updateIsProjectTemplate
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
        - description: Represents project identifier across the system.
          example: 5b641568b07987035750505e
          in: path
          name: projectId
          required: true
          schema:
            type: string
            description: Represents project identifier across the system.
            example: 5b641568b07987035750505e
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchProjectTemplateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectDtoImplV1'
          description: OK
      summary: Update project template
      tags:
        - Project
        - backend-app
  /v1/workspaces/{workspaceId}/projects/{projectId}/users/{userId}/cost-rate:
    put:
      operationId: addUsersCostRate
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
        - description: Represents project identifier across the system.
          example: 5b641568b07987035750505e
          in: path
          name: projectId
          required: true
          schema:
            type: string
            description: Represents project identifier across the system.
            example: 5b641568b07987035750505e
        - description: Represents user identifier across the system.
          example: 4a0ab5acb07987125438b60f
          in: path
          name: userId
          required: true
          schema:
            type: string
            description: Represents user identifier across the system.
            example: 4a0ab5acb07987125438b60f
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CostRateRequestV1'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectDtoImplV1'
          description: OK
      summary: Update project user cost rate
      tags:
        - Project
        - backend-app
  /v1/workspaces/{workspaceId}/projects/{projectId}/users/{userId}/hourly-rate:
    put:
      operationId: addUsersHourlyRate
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
        - description: Represents project identifier across the system.
          example: 5b641568b07987035750505e
          in: path
          name: projectId
          required: true
          schema:
            type: string
            description: Represents project identifier across the system.
            example: 5b641568b07987035750505e
        - description: Represents user identifier across the system.
          example: 4a0ab5acb07987125438b60f
          in: path
          name: userId
          required: true
          schema:
            type: string
            description: Represents user identifier across the system.
            example: 4a0ab5acb07987125438b60f
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CostRateRequestV1'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectDtoImplV1'
          description: OK
      summary: Update project user billable rate
      tags:
        - Project
        - backend-app
  /v1/workspaces/{workspaceId}/scheduling/assignments/all:
    get:
      operationId: getAllAssignments
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
        - description: If provided, assignments will be filtered by name
          example: Bugfixing
          in: query
          name: name
          required: false
          schema:
            type: string
            description: If provided, assignments will be filtered by name
            example: Bugfixing
        - description: Represents start date in yyyy-MM-ddThh:mm:ssZ format.
          example: "2020-01-01T00:00:00Z"
          in: query
          name: start
          required: true
          schema:
            type: string
            description: Represents start date in yyyy-MM-ddThh:mm:ssZ format.
            example: "2020-01-01T00:00:00Z"
        - description: Represents start date in yyyy-MM-ddThh:mm:ssZ format.
          example: "2021-01-01T00:00:00Z"
          in: query
          name: end
          required: true
          schema:
            type: string
            description: Represents start date in yyyy-MM-ddThh:mm:ssZ format.
            example: "2021-01-01T00:00:00Z"
        - description: Represents the column as the sorting criteria.
          example: USER
          in: query
          name: sort-column
          required: false
          schema:
            type: string
            enum:
              - PROJECT
              - USER
              - ID
        - description: Represents the sorting mode.
          example: ASCENDING
          in: query
          name: sort-order
          required: false
          schema:
            type: string
            enum:
              - ASCENDING
              - DESCENDING
        - description: Page number.
          example: 1
          in: query
          name: page
          required: false
          schema:
            type: string
            description: Page number.
            example: 1
            default: "1"
        - description: Page size.
          example: 50
          in: query
          name: page-size
          required: false
          schema:
            maximum: 5000
            minimum: 1
            type: string
            description: Page size.
            example: 50
            default: "50"
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssignmentHydratedDtoV1'
          description: OK
      summary: Get all assignments
      tags:
        - Scheduling
        - backend-app
  /v1/workspaces/{workspaceId}/scheduling/assignments/projects/totals:
    get:
      deprecated: true
      operationId: getProjectTotals_1
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
        - description: Represents term for searching projects and clients by name.
          example: Project name
          in: query
          name: search
          required: false
          schema:
            type: string
            description: Represents term for searching projects and clients by name.
            example: Project name
        - description: Represents start date in yyyy-MM-ddThh:mm:ssZ format.
          example: "2020-01-01T00:00:00Z"
          in: query
          name: start
          required: true
          schema:
            type: string
            description: Represents start date in yyyy-MM-ddThh:mm:ssZ format.
            example: "2020-01-01T00:00:00Z"
        - description: Represents end date in yyyy-MM-ddThh:mm:ssZ format.
          example: "2021-01-01T00:00:00Z"
          in: query
          name: end
          required: true
          schema:
            type: string
            description: Represents end date in yyyy-MM-ddThh:mm:ssZ format.
            example: "2021-01-01T00:00:00Z"
        - description: Page number.
          example: 1
          in: query
          name: page
          required: false
          schema:
            type: string
            description: Page number.
            example: 1
            default: "1"
        - description: Page size.
          example: 50
          in: query
          name: page-size
          required: false
          schema:
            maximum: 200
            minimum: 1
            type: string
            description: Page size.
            example: 50
            default: "50"
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SchedulingProjectsTotalsDtoV1'
          description: OK
      summary: Get all scheduled assignments per project
      tags:
        - Scheduling
        - backend-app
    post:
      operationId: getFilteredProjectTotals_1
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectTotalsRequestV1'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SchedulingProjectsTotalsDtoV1'
          description: OK
      summary: Get all scheduled assignments per project
      tags:
        - Scheduling
        - backend-app
  /v1/workspaces/{workspaceId}/scheduling/assignments/projects/totals/{projectId}:
    get:
      operationId: getProjectTotalsForSingleProject_1
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
        - description: Represents project identifier across the system.
          example: 56b687e29ae1f428e7ebe504
          in: path
          name: projectId
          required: true
          schema:
            type: string
            description: Represents project identifier across the system.
            example: 56b687e29ae1f428e7ebe504
        - description: Represents start date in yyyy-MM-ddThh:mm:ssZ format.
          example: "2020-01-01T00:00:00Z"
          in: query
          name: start
          required: true
          schema:
            type: string
            description: Represents start date in yyyy-MM-ddThh:mm:ssZ format.
            example: "2020-01-01T00:00:00Z"
        - description: Represents end date in yyyy-MM-ddThh:mm:ssZ format.
          example: "2021-01-01T00:00:00Z"
          in: query
          name: end
          required: true
          schema:
            type: string
            description: Represents end date in yyyy-MM-ddThh:mm:ssZ format.
            example: "2021-01-01T00:00:00Z"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchedulingProjectsTotalsDtoV1'
          description: OK
      summary: Get all scheduled assignments on project
      tags:
        - Scheduling
        - backend-app
  /v1/workspaces/{workspaceId}/scheduling/assignments/publish:
    put:
      operationId: publishAssignments_1
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublishAssignmentsRequestV1'
        required: true
      responses:
        "200":
          description: OK
      summary: Publish assignments
      tags:
        - Scheduling
        - backend-app
  /v1/workspaces/{workspaceId}/scheduling/assignments/recurring:
    post:
      operationId: createRecurring_1
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignmentCreateRequestV1'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssignmentDtoV1'
          description: Created
      summary: Create recurring assignment
      tags:
        - Scheduling
        - backend-app
  /v1/workspaces/{workspaceId}/scheduling/assignments/recurring/{assignmentId}:
    delete:
      operationId: deleteRRecurringAssignment
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
        - description: Represents assignment identifier across the system.
          example: 5b641568b07987035750505e
          in: path
          name: assignmentId
          required: true
          schema:
            type: string
            description: Represents assignment identifier across the system.
            example: 5b641568b07987035750505e
        - description: Represents a series option.
          example: ALL
          in: query
          name: seriesUpdateOption
          required: false
          schema:
            type: string
            enum:
              - THIS_ONE
              - THIS_AND_FOLLOWING
              - ALL
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssignmentDtoV1'
          description: OK
      summary: Delete recurring assignment
      tags:
        - Scheduling
        - backend-app
    patch:
      operationId: editRecurring_1
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
        - description: Represents assignment identifier across the system.
          example: 5b641568b07987035750505e
          in: path
          name: assignmentId
          required: true
          schema:
            type: string
            description: Represents assignment identifier across the system.
            example: 5b641568b07987035750505e
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignmentUpdateRequestV1'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssignmentDtoV1'
          description: OK
      summary: Update recurring assignment
      tags:
        - Scheduling
        - backend-app
  /v1/workspaces/{workspaceId}/scheduling/assignments/series/{assignmentId}:
    put:
      operationId: editRecurringPeriod_1
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
        - description: Represents assignment identifier across the system.
          example: 5b641568b07987035750505e
          in: path
          name: assignmentId
          required: true
          schema:
            type: string
            description: Represents assignment identifier across the system.
            example: 5b641568b07987035750505e
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecurringAssignmentRequestV1'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssignmentDtoV1'
          description: OK
      summary: Change recurring period
      tags:
        - Scheduling
        - backend-app
  /v1/workspaces/{workspaceId}/scheduling/assignments/user-filter/totals:
    post:
      operationId: getUserTotals_1
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetUserTotalsRequestV1'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SchedulingUsersTotalsDtoV1'
          description: OK
      summary: Get total of users' capacity on workspace
      tags:
        - Scheduling
        - backend-app
  /v1/workspaces/{workspaceId}/scheduling/assignments/users/{userId}/totals:
    get:
      operationId: getUserTotalsForSingleUser_1
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
        - description: Represents user identifier across the system.
          example: 5a0ab5acb07987125438b60f
          in: path
          name: userId
          required: true
          schema:
            type: string
            description: Represents user identifier across the system.
            example: 5a0ab5acb07987125438b60f
        - description: Page number.
          example: 1
          in: query
          name: page
          required: false
          schema:
            type: string
            description: Page number.
            example: 1
            default: "1"
        - description: Page size.
          example: 50
          in: query
          name: page-size
          required: false
          schema:
            maximum: 200
            minimum: 1
            type: string
            description: Page size.
            example: 50
            default: "50"
        - description: Represents start date in yyyy-MM-ddThh:mm:ssZ format.
          example: "2020-01-01T00:00:00Z"
          in: query
          name: start
          required: true
          schema:
            type: string
            description: Represents start date in yyyy-MM-ddThh:mm:ssZ format.
            example: "2020-01-01T00:00:00Z"
        - description: Represents end date in yyyy-MM-ddThh:mm:ssZ format.
          example: "2021-01-01T00:00:00Z"
          in: query
          name: end
          required: true
          schema:
            type: string
            description: Represents end date in yyyy-MM-ddThh:mm:ssZ format.
            example: "2021-01-01T00:00:00Z"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchedulingUsersTotalsDtoV1'
          description: OK
      summary: Get total capacity of a user
      tags:
        - Scheduling
        - backend-app
  /v1/workspaces/{workspaceId}/scheduling/assignments/{assignmentId}/copy:
    post:
      operationId: copyAssignment_1
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
        - description: Represents assignment identifier across the system.
          example: 5b641568b07987035750505e
          in: path
          name: assignmentId
          required: true
          schema:
            type: string
            description: Represents assignment identifier across the system.
            example: 5b641568b07987035750505e
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CopyAssignmentRequestV1'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssignmentDtoV1'
          description: OK
      summary: Copy scheduled assignment
      tags:
        - Scheduling
        - backend-app
  /v1/workspaces/{workspaceId}/tags:
    get:
      operationId: getTags_1
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
        - description: If provided, you'll get a filtered list of tags that matches the provided string in their name.
          example: feature_X
          in: query
          name: name
          required: false
          schema:
            type: string
            description: If provided, you'll get a filtered list of tags that matches the provided string in their name.
            example: feature_X
        - description: Flag to toggle on/off strict search mode. When set to true, search by name will only return tags whose name exactly matches the string value given for the 'name' parameter. When set to false, results will also include tags whose name contain the string value, but could be longer than the string value itself. For example, if there is a tag with the name 'applications', and the search value is 'app', setting strict-name-search to true will not return that tag in the results, whereas setting it to false will.
          in: query
          name: strict-name-search
          required: false
          schema:
            type: string
            description: Flag to toggle on/off strict search mode. When set to true, search by name will only return tags whose name exactly matches the string value given for the 'name' parameter. When set to false, results will also include tags whose name contain the string value, but could be longer than the string value itself. For example, if there is a tag with the name 'applications', and the search value is 'app', setting strict-name-search to true will not return that tag in the results, whereas setting it to false will.
        - description: Represents a list of excluded ids
          example:
            - 90p687e29ae1f428e7ebe657
            - 3r8687e29ae1f428e7eg567y
          in: query
          name: excluded-ids
          required: false
          schema:
            type: string
        - description: Represents column to be used as sorting criteria.
          example: NAME
          in: query
          name: sort-column
          required: false
          schema:
            type: string
            enum:
              - ID
              - NAME
        - description: Represents sorting mode.
          example: ASCENDING
          in: query
          name: sort-order
          required: false
          schema:
            type: string
            enum:
              - ASCENDING
              - DESCENDING
        - description: Page number.
          example: 1
          in: query
          name: page
          required: false
          schema:
            type: string
            description: Page number.
            example: 1
            default: "1"
        - description: Page size.
          example: 50
          in: query
          name: page-size
          required: false
          schema:
            maximum: 5000
            minimum: 1
            type: string
            description: Page size.
            example: 50
            default: "50"
        - description: Filters the result whether tags are archived or not.
          example: false
          in: query
          name: archived
          required: false
          schema:
            type: string
            description: Filters the result whether tags are archived or not.
            example: false
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TagDtoV1'
          description: OK
      summary: Find tags on workspace
      tags:
        - Tag
        - backend-app
    post:
      operationId: createNewTag
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagDtoV1'
          description: Created
      summary: Add a new tag
      tags:
        - Tag
        - backend-app
  /v1/workspaces/{workspaceId}/tags/{id}:
    delete:
      operationId: deleteTag
      parameters:
        - description: Represents tag identifier across the system.
          example: 21s687e29ae1f428e7ebe404
          in: path
          name: id
          required: true
          schema:
            type: string
            description: Represents tag identifier across the system.
            example: 21s687e29ae1f428e7ebe404
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagDtoV1'
          description: OK
      summary: Delete tag
      tags:
        - Tag
        - backend-app
    get:
      operationId: getTag
      parameters:
        - description: Represents tag identifier across the system.
          example: 21s687e29ae1f428e7ebe404
          in: path
          name: id
          required: true
          schema:
            type: string
            description: Represents tag identifier across the system.
            example: 21s687e29ae1f428e7ebe404
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagDtoV1'
          description: OK
      summary: Get tag by ID
      tags:
        - Tag
        - backend-app
    put:
      operationId: updateTag
      parameters:
        - description: Represents tag identifier across the system.
          example: 21s687e29ae1f428e7ebe404
          in: path
          name: id
          required: true
          schema:
            type: string
            description: Represents tag identifier across the system.
            example: 21s687e29ae1f428e7ebe404
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTagRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagDtoV1'
          description: OK
      summary: Update tag
      tags:
        - Tag
        - backend-app
  /v1/workspaces/{workspaceId}/time-entries:
    post:
      operationId: createTimeEntry
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTimeEntryRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeEntryDtoImplV1'
          description: Created
      summary: Add a new time entry
      tags:
        - Time entry
        - backend-app
  /v1/workspaces/{workspaceId}/time-entries/invoiced:
    patch:
      operationId: updateInvoicedStatus_2
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateInvoicedStatusRequest'
        required: true
      responses:
        "200":
          description: OK
      summary: Mark time entries as invoiced
      tags:
        - Time entry
        - backend-app
  /v1/workspaces/{workspaceId}/time-entries/status/in-progress:
    get:
      operationId: getInProgressTimeEntries
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: query
          name: page
          required: false
          schema:
            minimum: 1
            type: integer
            format: int32
            default: 1
        - in: query
          name: page-size
          required: false
          schema:
            maximum: 1000
            minimum: 1
            type: integer
            format: int32
            default: 10
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TimeEntryWithRatesDtoV1'
          description: OK
      summary: Get all in progress time entries on workspace
      tags:
        - Time entry
        - backend-app
  /v1/workspaces/{workspaceId}/time-entries/{id}:
    delete:
      operationId: deleteTimeEntry
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
        - description: Represents time entry identifier across the system.
          example: 64c777ddd3fcab07cfbb210c
          in: path
          name: id
          required: true
          schema:
            type: string
            description: Represents time entry identifier across the system.
            example: 64c777ddd3fcab07cfbb210c
      responses:
        "204":
          description: No Content
      summary: Delete time entry from workspace
      tags:
        - Time entry
        - backend-app
    get:
      operationId: getTimeEntry
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
        - description: Represents time entry identifier across the system.
          example: 64c777ddd3fcab07cfbb210c
          in: path
          name: id
          required: true
          schema:
            type: string
            description: Represents time entry identifier across the system.
            example: 64c777ddd3fcab07cfbb210c
        - description: Flag to set whether to include additional information of a time entry or not.
          in: query
          name: hydrated
          required: false
          schema:
            type: string
            description: Flag to set whether to include additional information of a time entry or not.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeEntryWithRatesDtoV1'
          description: OK
      summary: Get a specific time entry on workspace
      tags:
        - Time entry
        - backend-app
    put:
      operationId: updateTimeEntry
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
        - description: Represents time entry identifier across the system.
          example: 64c777ddd3fcab07cfbb210c
          in: path
          name: id
          required: true
          schema:
            type: string
            description: Represents time entry identifier across the system.
            example: 64c777ddd3fcab07cfbb210c
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTimeEntryRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeEntryDtoImplV1'
          description: OK
      summary: Update time entry on workspace
      tags:
        - Time entry
        - backend-app
  /v1/workspaces/{workspaceId}/time-off/balance/policy/{policyId}:
    get:
      operationId: getBalancesForPolicy_1
      parameters:
        - description: Represents workspace identifier across the system.
          example: 60f91b3ffdaf031696ec61a8
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 60f91b3ffdaf031696ec61a8
        - description: Represents policy identifier across the system.
          example: 63034cd0cb0fb876a57e93ad
          in: path
          name: policyId
          required: true
          schema:
            type: string
            description: Represents policy identifier across the system.
            example: 63034cd0cb0fb876a57e93ad
        - example: 1
          in: query
          name: page
          required: false
          schema:
            maximum: 1000
            type: string
            example: 1
            default: "1"
        - example: 50
          in: query
          name: page-size
          required: false
          schema:
            maximum: 200
            minimum: 1
            type: string
            example: 50
            default: "50"
        - description: If provided, you'll get result sorted by sort column.
          example: USER
          in: query
          name: sort
          required: false
          schema:
            type: string
            enum:
              - USER
              - POLICY
              - USED
              - BALANCE
              - TOTAL
        - description: Sort results in ascending or descending order.
          example: ASCENDING
          in: query
          name: sort-order
          required: false
          schema:
            type: string
            enum:
              - ASCENDING
              - DESCENDING
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BalancesWithCountDtoV1'
          description: OK
      summary: Get balance by policy
      tags:
        - Balance
        - backend-app
    patch:
      operationId: updateBalance_1
      parameters:
        - description: Represents workspace identifier across the system.
          example: 60f91b3ffdaf031696ec61a8
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 60f91b3ffdaf031696ec61a8
        - description: Represents policy identifier across the system.
          example: 63034cd0cb0fb876a57e93ad
          in: path
          name: policyId
          required: true
          schema:
            type: string
            description: Represents policy identifier across the system.
            example: 63034cd0cb0fb876a57e93ad
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeBalanceRequestV1'
        required: true
      responses:
        "204":
          description: No Content
      summary: Update balance
      tags:
        - Balance
        - backend-app
  /v1/workspaces/{workspaceId}/time-off/balance/user/{userId}:
    get:
      operationId: getBalancesForUser_1
      parameters:
        - description: Represents workspace identifier across the system.
          example: 60f91b3ffdaf031696ec61a8
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 60f91b3ffdaf031696ec61a8
        - description: Represents user identifier across the system.
          example: 60f924bafdaf031696ec6218
          in: path
          name: userId
          required: true
          schema:
            type: string
            description: Represents user identifier across the system.
            example: 60f924bafdaf031696ec6218
        - description: Page number.
          in: query
          name: page
          required: false
          schema:
            maximum: 1000
            type: integer
            format: int32
            example: 1
            default: 1
        - description: Page size.
          in: query
          name: page-size
          required: false
          schema:
            maximum: 200
            minimum: 1
            type: integer
            format: int32
            example: 50
            default: 50
        - description: Sort result based on given criteria
          example: POLICY
          in: query
          name: sort
          required: false
          schema:
            type: string
            enum:
              - USER
              - POLICY
              - USED
              - BALANCE
              - TOTAL
        - description: Sort result by providing sort order.
          example: ASCENDING
          in: query
          name: sort-order
          required: false
          schema:
            type: string
            enum:
              - ASCENDING
              - DESCENDING
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BalancesWithCountDtoV1'
          description: OK
      summary: Get balance by user
      tags:
        - Balance
        - backend-app
  /v1/workspaces/{workspaceId}/time-off/policies:
    get:
      operationId: findPoliciesForWorkspace_1
      parameters:
        - description: Represents workspace identifier across the system.
          example: 60f91b3ffdaf031696ec61a8
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 60f91b3ffdaf031696ec61a8
        - description: Page number.
          in: query
          name: page
          required: false
          schema:
            maximum: 1000
            type: integer
            format: int32
            example: 1
            default: 1
        - description: Page size.
          example: 50
          in: query
          name: page-size
          required: false
          schema:
            maximum: 200
            minimum: 1
            type: string
            description: Page size.
            example: 50
        - description: If provided, you'll get a filtered list of policies that contain the provided string in their name.
          example: Holidays
          in: query
          name: name
          required: false
          schema:
            type: string
            description: If provided, you'll get a filtered list of policies that contain the provided string in their name.
            example: Holidays
        - description: If provided, you'll get a filtered list of policies with the corresponding status.
          example: ACTIVE
          in: query
          name: status
          required: false
          schema:
            type: string
            enum:
              - ACTIVE
              - ARCHIVED
              - ALL
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PolicyDtoV1'
          description: OK
      summary: Get policies on workspace
      tags:
        - Policy
        - backend-app
    post:
      operationId: createPolicy_1
      parameters:
        - description: Represents workspace identifier across the system.
          example: 60f91b3ffdaf031696ec61a8
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 60f91b3ffdaf031696ec61a8
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePolicyRequestV1'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyDtoV1'
          description: Created
      summary: Create time off policy
      tags:
        - Policy
        - backend-app
  /v1/workspaces/{workspaceId}/time-off/policies/{id}:
    delete:
      operationId: deletePolicy_1
      parameters:
        - description: Represents workspace identifier across the system.
          example: 60f91b3ffdaf031696ec61a8
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 60f91b3ffdaf031696ec61a8
        - description: Represents policy identifier across the system.
          example: 63034cd0cb0fb876a57e93ad
          in: path
          name: id
          required: true
          schema:
            type: string
            description: Represents policy identifier across the system.
            example: 63034cd0cb0fb876a57e93ad
      responses:
        "200":
          description: OK
      summary: Delete policy
      tags:
        - Policy
        - backend-app
    get:
      operationId: getPolicy_1
      parameters:
        - description: Represents workspace identifier across the system.
          example: 60f91b3ffdaf031696ec61a8
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 60f91b3ffdaf031696ec61a8
        - description: Represents policy identifier across the system.
          example: 63034cd0cb0fb876a57e93ad
          in: path
          name: id
          required: true
          schema:
            type: string
            description: Represents policy identifier across the system.
            example: 63034cd0cb0fb876a57e93ad
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyDtoV1'
          description: OK
      summary: Get time off policy
      tags:
        - Policy
        - backend-app
    patch:
      operationId: updatePolicyStatus
      parameters:
        - description: Represents workspace identifier across the system.
          example: 60f91b3ffdaf031696ec61a8
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 60f91b3ffdaf031696ec61a8
        - description: Represents policy identifier across the system.
          example: 63034cd0cb0fb876a57e93ad
          in: path
          name: id
          required: true
          schema:
            type: string
            description: Represents policy identifier across the system.
            example: 63034cd0cb0fb876a57e93ad
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePolicyStatusRequestV1'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyDtoV1'
          description: OK
      summary: Change policy status
      tags:
        - Policy
        - backend-app
    put:
      operationId: updatePolicy_1
      parameters:
        - description: Represents workspace identifier across the system.
          example: 60f91b3ffdaf031696ec61a8
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 60f91b3ffdaf031696ec61a8
        - description: Represents policy identifier across the system.
          example: 63034cd0cb0fb876a57e93ad
          in: path
          name: id
          required: true
          schema:
            type: string
            description: Represents policy identifier across the system.
            example: 63034cd0cb0fb876a57e93ad
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePolicyRequestV1'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyDtoV1'
          description: OK
      summary: Update policy
      tags:
        - Policy
        - backend-app
  /v1/workspaces/{workspaceId}/time-off/policies/{policyId}/requests:
    post:
      operationId: createTimeOffRequest
      parameters:
        - description: Represents workspace identifier across the system.
          example: 60f91b3ffdaf031696ec61a8
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 60f91b3ffdaf031696ec61a8
        - description: Represents policy identifier across the system.
          example: 63034cd0cb0fb876a57e93ad
          in: path
          name: policyId
          required: true
          schema:
            type: string
            description: Represents policy identifier across the system.
            example: 63034cd0cb0fb876a57e93ad
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTimeOffRequestV1Request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeOffRequestFullV1Dto'
          description: OK
      summary: Create time off request
      tags:
        - Time Off
        - backend-app
  /v1/workspaces/{workspaceId}/time-off/policies/{policyId}/requests/{requestId}:
    delete:
      operationId: deleteTimeOffRequest
      parameters:
        - description: Represents workspace identifier across the system.
          example: 60f91b3ffdaf031696ec61a8
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 60f91b3ffdaf031696ec61a8
        - description: Represents policy identifier across the system.
          example: 63034cd0cb0fb876a57e93ad
          in: path
          name: policyId
          required: true
          schema:
            type: string
            description: Represents policy identifier across the system.
            example: 63034cd0cb0fb876a57e93ad
        - description: Represents time off request identifier across the system.
          example: 6308850156b7d75ea8fd3fbd
          in: path
          name: requestId
          required: true
          schema:
            type: string
            description: Represents time off request identifier across the system.
            example: 6308850156b7d75ea8fd3fbd
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeOffRequestV1Dto'
          description: OK
      summary: Delete request
      tags:
        - Time Off
        - backend-app
    patch:
      operationId: changeTimeOffRequestStatus
      parameters:
        - description: Represents workspace identifier across the system.
          example: 60f91b3ffdaf031696ec61a8
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 60f91b3ffdaf031696ec61a8
        - description: Represents policy identifier across the system.
          example: 63034cd0cb0fb876a57e93ad
          in: path
          name: policyId
          required: true
          schema:
            type: string
            description: Represents policy identifier across the system.
            example: 63034cd0cb0fb876a57e93ad
        - description: Represents time off request identifier across the system.
          example: 6308850156b7d75ea8fd3fbd
          in: path
          name: requestId
          required: true
          schema:
            type: string
            description: Represents time off request identifier across the system.
            example: 6308850156b7d75ea8fd3fbd
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StatusTimeOffRequestV1Request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeOffRequestV1Dto'
          description: OK
      summary: Change time off request status
      tags:
        - Time Off
        - backend-app
  /v1/workspaces/{workspaceId}/time-off/policies/{policyId}/users/{userId}/requests:
    post:
      operationId: createTimeOffRequestForOther
      parameters:
        - description: Represents workspace identifier across the system.
          example: 60f91b3ffdaf031696ec61a8
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 60f91b3ffdaf031696ec61a8
        - description: Represents policy identifier across the system.
          example: 63034cd0cb0fb876a57e93ad
          in: path
          name: policyId
          required: true
          schema:
            type: string
            description: Represents policy identifier across the system.
            example: 63034cd0cb0fb876a57e93ad
        - description: Represents user identifier across the system.
          example: 60f924bafdaf031696ec6218
          in: path
          name: userId
          required: true
          schema:
            type: string
            description: Represents user identifier across the system.
            example: 60f924bafdaf031696ec6218
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTimeOffRequestV1Request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeOffRequestFullV1Dto'
          description: OK
      summary: Create time off request for user
      tags:
        - Time Off
        - backend-app
  /v1/workspaces/{workspaceId}/time-off/requests:
    post:
      operationId: getTimeOffRequest
      parameters:
        - description: Represents workspace identifier across the system.
          example: 60f91b3ffdaf031696ec61a8
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 60f91b3ffdaf031696ec61a8
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetTimeOffRequestsV1Request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeOffRequestsWithCountV1Dto'
          description: OK
      summary: Get all time off requests on workspace
      tags:
        - Time Off
        - backend-app
  /v1/workspaces/{workspaceId}/user-groups:
    get:
      operationId: getUserGroups_3
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
        - description: If provided, you'll get a filtered list of groups that matches the string provided in their project id.
          example: 5a0ab5acb07987125438b60f
          in: query
          name: project-id
          required: false
          schema:
            type: string
        - description: If provided, you'll get a filtered list of groups that matches the string provided in their name.
          example: development_team
          in: query
          name: name
          required: false
          schema:
            type: string
            description: If provided, you'll get a filtered list of groups that matches the string provided in their name.
            example: development_team
        - description: Column to be used as the sorting criteria.
          example: NAME
          in: query
          name: sort-column
          required: false
          schema:
            type: string
            enum:
              - ID
              - NAME
        - description: Sorting mode.
          example: ASCENDING
          in: query
          name: sort-order
          required: false
          schema:
            type: string
            enum:
              - ASCENDING
              - DESCENDING
        - description: Page number.
          example: 1
          in: query
          name: page
          required: false
          schema:
            type: string
            description: Page number.
            example: 1
            default: "1"
        - description: Page size.
          example: 50
          in: query
          name: page-size
          required: false
          schema:
            maximum: 5000
            minimum: 1
            type: string
            description: Page size.
            example: 50
            default: "50"
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserGroupDtoV1'
          description: OK
      summary: Find all groups on workspace
      tags:
        - Group
        - backend-app
    post:
      operationId: createUserGroup
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserGroupRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroupDtoV1'
          description: Created
      summary: Add a new group
      tags:
        - Group
        - backend-app
  /v1/workspaces/{workspaceId}/user-groups/{id}:
    delete:
      operationId: deleteUserGroup
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
        - description: Represents user group identifier across the system.
          example: 76a687e29ae1f428e7ebe101
          in: path
          name: id
          required: true
          schema:
            type: string
            description: Represents user group identifier across the system.
            example: 76a687e29ae1f428e7ebe101
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroupDtoV1'
          description: OK
      summary: Delete group
      tags:
        - Group
        - backend-app
    put:
      operationId: updateUserGroup
      parameters:
        - description: Represents user group identifier across the system.
          example: 76a687e29ae1f428e7ebe101
          in: path
          name: id
          required: true
          schema:
            type: string
            description: Represents user group identifier across the system.
            example: 76a687e29ae1f428e7ebe101
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserGroupRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroupDtoV1'
          description: OK
      summary: Update group
      tags:
        - Group
        - backend-app
  /v1/workspaces/{workspaceId}/user-groups/{userGroupId}/users:
    post:
      operationId: addUser
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
        - description: Represents user group identifier across the system.
          example: 76a687e29ae1f428e7ebe101
          in: path
          name: userGroupId
          required: true
          schema:
            type: string
            description: Represents user group identifier across the system.
            example: 76a687e29ae1f428e7ebe101
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserGroupUserRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroupDtoV1'
          description: OK
      summary: Add users to group
      tags:
        - Group
        - backend-app
  /v1/workspaces/{workspaceId}/user-groups/{userGroupId}/users/{userId}:
    delete:
      operationId: deleteUser_1
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
        - description: Represents user group identifier across the system.
          example: 76a687e29ae1f428e7ebe101
          in: path
          name: userGroupId
          required: true
          schema:
            type: string
            description: Represents user group identifier across the system.
            example: 76a687e29ae1f428e7ebe101
        - description: Represents user identifier across the system.
          example: 5a0ab5acb07987125438b60f
          in: path
          name: userId
          required: true
          schema:
            type: string
            description: Represents user identifier across the system.
            example: 5a0ab5acb07987125438b60f
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroupDtoV1'
          description: OK
      summary: Remove user from group
      tags:
        - Group
        - backend-app
  /v1/workspaces/{workspaceId}/user/{userId}/time-entries:
    delete:
      operationId: deleteMany_4
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
        - description: Represents user identifier across the system.
          example: 5a0ab5acb07987125438b60f
          in: path
          name: userId
          required: true
          schema:
            type: string
            description: Represents user identifier across the system.
            example: 5a0ab5acb07987125438b60f
        - description: Represents a list of time entry ids to delete.
          example: 5a0ab5acb07987125438b60f
          in: query
          name: time-entry-ids
          required: true
          schema:
            type: string
            description: Represents a list of time entry ids to delete.
            example: 5a0ab5acb07987125438b60f
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TimeEntryDtoImplV1'
          description: OK
      summary: Delete all time entries for user on workspace
      tags:
        - Time entry
        - backend-app
    get:
      operationId: getTimeEntries_1
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
        - description: Represents user identifier across the system.
          example: 5a0ab5acb07987125438b60f
          in: path
          name: userId
          required: true
          schema:
            type: string
            description: Represents user identifier across the system.
            example: 5a0ab5acb07987125438b60f
        - description: Represents term for searching time entries by description.
          example: Description keywords
          in: query
          name: description
          required: false
          schema:
            type: string
            description: Represents term for searching time entries by description.
            example: Description keywords
        - description: Represents start date in yyyy-MM-ddThh:mm:ssZ format.
          example: "2020-01-01T00:00:00Z"
          in: query
          name: start
          required: false
          schema:
            type: string
            description: Represents start date in yyyy-MM-ddThh:mm:ssZ format.
            example: "2020-01-01T00:00:00Z"
        - description: Represents end date in yyyy-MM-ddThh:mm:ssZ format.
          example: "2021-01-01T00:00:00Z"
          in: query
          name: end
          required: false
          schema:
            type: string
            description: Represents end date in yyyy-MM-ddThh:mm:ssZ format.
            example: "2021-01-01T00:00:00Z"
        - description: If provided, you'll get a filtered list of time entries that matches the provided string in their project id.
          example: 5b641568b07987035750505e
          in: query
          name: project
          required: false
          schema:
            type: string
            description: If provided, you'll get a filtered list of time entries that matches the provided string in their project id.
            example: 5b641568b07987035750505e
        - description: If provided, you'll get a filtered list of time entries that matches the provided string in their task id.
          example: 64c777ddd3fcab07cfbb210c
          in: query
          name: task
          required: false
          schema:
            type: string
            description: If provided, you'll get a filtered list of time entries that matches the provided string in their task id.
            example: 64c777ddd3fcab07cfbb210c
        - description: If provided, you'll get a filtered list of time entries that matches the provided string(s) in their tag id(s).
          example:
            - 5e4117fe8c625f38930d57b7
            - 7e4117fe8c625f38930d57b8
          in: query
          name: tags
          required: false
          schema:
            type: string
            description: If provided, you'll get a filtered list of time entries that matches the provided string(s) in their tag id(s).
            example:
              - 5e4117fe8c625f38930d57b7
              - 7e4117fe8c625f38930d57b8
        - description: Flag to set whether to only get time entries which have a project.
          in: query
          name: project-required
          required: false
          schema:
            type: string
            description: Flag to set whether to only get time entries which have a project.
        - description: Flag to set whether to only get time entries which have tasks.
          in: query
          name: task-required
          required: false
          schema:
            type: string
            description: Flag to set whether to only get time entries which have tasks.
        - description: Flag to set whether to include additional information on time entries or not.
          in: query
          name: hydrated
          required: false
          schema:
            type: string
            description: Flag to set whether to include additional information on time entries or not.
        - description: Page number.
          example: 1
          in: query
          name: page
          required: false
          schema:
            type: string
            description: Page number.
            example: 1
            default: "1"
        - description: Page size.
          example: 50
          in: query
          name: page-size
          required: false
          schema:
            maximum: 5000
            minimum: 1
            type: string
            description: Page size.
            example: 50
            default: "50"
        - description: Flag to set whether to filter only in progress time entries.
          in: query
          name: in-progress
          required: false
          schema:
            type: boolean
        - description: Valid yyyy-MM-ddThh:mm:ssZ format date. If provided, filters results within the week before the datetime provided and only those entries with assigned project or task.
          example: "2020-01-01T00:00:00Z"
          in: query
          name: get-week-before
          required: false
          schema:
            type: string
            description: Valid yyyy-MM-ddThh:mm:ssZ format date. If provided, filters results within the week before the datetime provided and only those entries with assigned project or task.
            example: "2020-01-01T00:00:00Z"
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TimeEntryWithRatesDtoV1'
          description: OK
      summary: Get time entries for a user on workspace
      tags:
        - Time entry
        - backend-app
    patch:
      operationId: stopRunningTimeEntry
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
        - description: Represents user identifier across the system.
          example: 5a0ab5acb07987125438b60f
          in: path
          name: userId
          required: true
          schema:
            type: string
            description: Represents user identifier across the system.
            example: 5a0ab5acb07987125438b60f
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopTimeEntryRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeEntryDtoImplV1'
          description: OK
      summary: Stop currently running timer on workspace for user
      tags:
        - Time entry
        - backend-app
    post:
      operationId: createForOthers_1
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
        - description: Represents user identifier across the system.
          example: 5a0ab5acb07987125438b60f
          in: path
          name: userId
          required: true
          schema:
            type: string
            description: Represents user identifier across the system.
            example: 5a0ab5acb07987125438b60f
        - description: Represents time entry identifier across the system.
          example: 64c777ddd3fcab07cfbb210c
          in: query
          name: from-entry
          required: false
          schema:
            type: string
            description: Represents time entry identifier across the system.
            example: 64c777ddd3fcab07cfbb210c
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTimeEntryRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeEntryDtoImplV1'
          description: Created
      summary: Add a new time entry for another user on workspace
      tags:
        - Time entry
        - backend-app
    put:
      operationId: replaceMany
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
        - description: Represents user identifier across the system.
          example: 5a0ab5acb07987125438b60f
          in: path
          name: userId
          required: true
          schema:
            type: string
            description: Represents user identifier across the system.
            example: 5a0ab5acb07987125438b60f
        - description: If set to true, results will contain additional information about the time entry.
          in: query
          name: hydrated
          required: false
          schema:
            type: string
            description: If set to true, results will contain additional information about the time entry.
      requestBody:
        content:
          application/json:
            schema:
              minItems: 1
              type: array
              items:
                $ref: '#/components/schemas/UpdateTimeEntryBulkRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TimeEntryDtoV1'
          description: OK
      summary: Bulk edit time entries
      tags:
        - Time entry
        - backend-app
  /v1/workspaces/{workspaceId}/user/{userId}/time-entries/{id}/duplicate:
    post:
      operationId: duplicateTimeEntry_1
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
        - description: Represents user identifier across the system.
          example: 5a0ab5acb07987125438b60f
          in: path
          name: userId
          required: true
          schema:
            type: string
            description: Represents user identifier across the system.
            example: 5a0ab5acb07987125438b60f
        - description: Represents time entry identifier across the system.
          example: 8j39fn9307hh5125439g2ast
          in: path
          name: id
          required: true
          schema:
            type: string
            description: Represents time entry identifier across the system.
            example: 8j39fn9307hh5125439g2ast
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeEntryDtoImplV1'
          description: Created
      summary: Duplicate time entry
      tags:
        - Time entry
        - backend-app
  /v1/workspaces/{workspaceId}/users:
    get:
      operationId: getUsersOfWorkspace_1
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
        - description: If provided, you'll get a filtered list of users that contain the provided string in their email address.
          example: mail@example.com
          in: query
          name: email
          required: false
          schema:
            type: string
            description: If provided, you'll get a filtered list of users that contain the provided string in their email address.
            example: mail@example.com
        - description: If provided, you'll get a list of users that have access to the project.
          example: 21a687e29ae1f428e7ebe606
          in: query
          name: project-id
          required: false
          schema:
            type: string
        - description: If provided, you'll get a filtered list of users with the corresponding status.
          example: ACTIVE
          in: query
          name: status
          required: false
          schema:
            type: string
            enum:
              - PENDING
              - ACTIVE
              - DECLINED
              - INACTIVE
              - ALL
        - description: If provided, you'll get a filtered list of users with the corresponding account status filter. If not, this will only filter ACTIVE, PENDING_EMAIL_VERIFICATION, and NOT_REGISTERED Users.
          example: LIMITED
          in: query
          name: account-statuses
          required: false
          schema:
            type: string
        - description: If provided, you'll get a filtered list of users that contain the provided string in their name
          example: John
          in: query
          name: name
          required: false
          schema:
            type: string
            description: If provided, you'll get a filtered list of users that contain the provided string in their name
            example: John
        - description: 'Sorting column criteria. Default value: EMAIL'
          example: ID
          in: query
          name: sort-column
          required: false
          schema:
            type: string
            enum:
              - ID
              - EMAIL
              - NAME
              - NAME_LOWERCASE
              - ACCESS
              - HOURLYRATE
              - COSTRATE
        - description: 'Sorting mode. Default value: ASCENDING'
          example: ASCENDING
          in: query
          name: sort-order
          required: false
          schema:
            type: string
            enum:
              - ASCENDING
              - DESCENDING
        - description: Page number.
          example: 1
          in: query
          name: page
          required: false
          schema:
            type: string
            description: Page number.
            example: 1
            default: "1"
        - description: Page size.
          example: 50
          in: query
          name: page-size
          required: false
          schema:
            maximum: 5000
            minimum: 1
            type: string
            description: Page size.
            example: 50
            default: "50"
        - description: If provided, you'll get all users along with workspaces, groups, or projects they have access to. Default value is NONE.
          example: WORKSPACE
          in: query
          name: memberships
          required: false
          schema:
            type: string
            enum:
              - ALL
              - NONE
              - WORKSPACE
              - PROJECT
              - USERGROUP
        - description: If you pass along includeRoles=true, you'll get each user's detailed manager role (including projects and members which they manage)
          in: query
          name: include-roles
          required: true
          schema:
            type: string
            default: "false"
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDtoV1'
          description: OK
      summary: Find all users on workspace
      tags:
        - User
        - backend-app
    post:
      description: You can add users to a workspace via API only if that workspace has a paid subscription. If the workspace has a paid subscription, you can add as many users as you want but you are limited by the number of paid user seats on that workspace.
      operationId: addUsers_2
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
        - description: Indicates whether to send an email when user is added to the workspace.
          in: query
          name: send-email
          required: true
          schema:
            type: string
            default: "true"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddUserToWorkspaceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceDtoV1'
          description: OK
      summary: Add user
      tags:
        - backend-app
        - Workspace
  /v1/workspaces/{workspaceId}/users/info:
    post:
      operationId: filterUsersOfWorkspace
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetUsersRequestV1'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDtoV1'
          description: OK
      security:
        - MarketplaceKeyAuth: []
        - ApiKeyAuth: []
        - AddonKeyAuth: []
      summary: ' Filter workspace users'
      tags:
        - User
        - backend-app
  /v1/workspaces/{workspaceId}/users/{userId}:
    delete:
      operationId: removeMember_1
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
        - description: Represents user identifier across the system.
          example: 89b687e29ae1f428e7ebe912
          in: path
          name: userId
          required: true
          schema:
            type: string
            description: Represents user identifier across the system.
            example: 89b687e29ae1f428e7ebe912
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceDtoV1'
          description: OK
      summary: Remove user from workspace
      tags:
        - backend-app
        - Workspace
    put:
      operationId: updateUserStatus
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
        - description: Represents user identifier across the system.
          example: 89b687e29ae1f428e7ebe912
          in: path
          name: userId
          required: true
          schema:
            type: string
            description: Represents user identifier across the system.
            example: 89b687e29ae1f428e7ebe912
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserStatusRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceDtoV1'
          description: OK
      summary: Update user's status
      tags:
        - backend-app
        - Workspace
  /v1/workspaces/{workspaceId}/users/{userId}/cost-rate:
    put:
      operationId: setCostRateForUser
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
        - description: Represents user identifier across the system.
          example: 89b687e29ae1f428e7ebe912
          in: path
          name: userId
          required: true
          schema:
            type: string
            description: Represents user identifier across the system.
            example: 89b687e29ae1f428e7ebe912
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CostRateRequestV1'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceDtoV1'
          description: OK
      summary: Update user's cost rate
      tags:
        - backend-app
        - Workspace
  /v1/workspaces/{workspaceId}/users/{userId}/custom-field/{customFieldId}/value:
    put:
      operationId: upsertUserCustomFieldValue_1
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
        - description: Represents user identifier across the system.
          example: 5a0ab5acb07987125438b60f
          in: path
          name: userId
          required: true
          schema:
            type: string
            description: Represents user identifier across the system.
            example: 5a0ab5acb07987125438b60f
        - description: Represents custom field identifier across the system.
          example: 5e4117fe8c625f38930d57b7
          in: path
          name: customFieldId
          required: true
          schema:
            type: string
            description: Represents custom field identifier across the system.
            example: 5e4117fe8c625f38930d57b7
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertUserCustomFieldRequestV1'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCustomFieldValueDtoV1'
          description: Created
      summary: Update user's custom field
      tags:
        - User
        - backend-app
  /v1/workspaces/{workspaceId}/users/{userId}/hourly-rate:
    put:
      operationId: setHourlyRateForUser
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
        - description: Represents user identifier across the system.
          example: 89b687e29ae1f428e7ebe912
          in: path
          name: userId
          required: true
          schema:
            type: string
            description: Represents user identifier across the system.
            example: 89b687e29ae1f428e7ebe912
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HourlyRateRequestV1'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceDtoV1'
          description: OK
      summary: Update user's hourly rate
      tags:
        - backend-app
        - Workspace
  /v1/workspaces/{workspaceId}/users/{userId}/managers:
    get:
      operationId: getManagersOfUser
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
        - description: Represents user identifier across the system.
          example: 5a0ab5acb07987125438b60f
          in: path
          name: userId
          required: true
          schema:
            type: string
            description: Represents user identifier across the system.
            example: 5a0ab5acb07987125438b60f
        - description: Sorting column criteria
          example: ID
          in: query
          name: sort-column
          required: false
          schema:
            type: string
            enum:
              - ID
              - EMAIL
              - NAME
              - NAME_LOWERCASE
              - ACCESS
              - HOURLYRATE
              - COSTRATE
        - description: Sorting mode
          example: ASCENDING
          in: query
          name: sort-order
          required: false
          schema:
            type: string
            enum:
              - ASCENDING
              - DESCENDING
        - description: Page number.
          example: 1
          in: query
          name: page
          required: false
          schema:
            type: string
            description: Page number.
            example: 1
            default: "1"
        - description: Page size.
          example: 50
          in: query
          name: page-size
          required: false
          schema:
            maximum: 5000
            minimum: 1
            type: string
            description: Page size.
            example: 50
            default: "50"
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDtoV1'
          description: OK
      summary: Find user's team manager
      tags:
        - User
        - backend-app
  /v1/workspaces/{workspaceId}/users/{userId}/roles:
    delete:
      operationId: deleteUserRole
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
        - description: Represents user identifier across the system.
          example: 5a0ab5acb07987125438b60f
          in: path
          name: userId
          required: true
          schema:
            type: string
            description: Represents user identifier across the system.
            example: 5a0ab5acb07987125438b60f
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleRequestV1'
        required: true
      responses:
        "204":
          description: No Content
      summary: Remove user's manager role
      tags:
        - User
        - backend-app
    post:
      operationId: createUserRole
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
        - description: Represents user identifier across the system.
          example: 5a0ab5acb07987125438b60f
          in: path
          name: userId
          required: true
          schema:
            type: string
            description: Represents user identifier across the system.
            example: 5a0ab5acb07987125438b60f
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleRequestV1'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RoleDetailsDtoV1'
          description: Created
      summary: Give user manager role
      tags:
        - User
        - backend-app
  /v1/workspaces/{workspaceId}/webhooks:
    get:
      operationId: getWebhooks_1
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
        - description: Represents webhook type.
          example: USER_CREATED
          in: query
          name: type
          required: false
          schema:
            type: string
            enum:
              - USER_CREATED
              - SYSTEM
              - ADDON
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhooksDtoV1'
          description: OK
      summary: Get all webhooks on workspace
      tags:
        - Webhooks
        - backend-app
    post:
      description: Creating a webhook generates a new token which can be used to verify that the webhook being sent was sent by Clockify, as it will always be present in the header.
      operationId: createWebhook
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWebhookRequestV1'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookDtoV1'
          description: Created
      summary: Create webhooks
      tags:
        - Webhooks
        - backend-app
  /v1/workspaces/{workspaceId}/webhooks/{webhookId}:
    delete:
      operationId: deleteWebhook
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
        - description: Represents webhook identifier across the system.
          example: 5b715448b0798751107918ab
          in: path
          name: webhookId
          required: true
          schema:
            type: string
            description: Represents webhook identifier across the system.
            example: 5b715448b0798751107918ab
      responses:
        "200":
          description: OK
      summary: Delete webhook
      tags:
        - Webhooks
        - backend-app
    get:
      operationId: getWebhook_1
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
        - description: Represents webhook identifier across the system.
          example: 5b715448b0798751107918ab
          in: path
          name: webhookId
          required: true
          schema:
            type: string
            description: Represents webhook identifier across the system.
            example: 5b715448b0798751107918ab
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookDtoV1'
          description: OK
      summary: Get a specific webhook by id
      tags:
        - Webhooks
        - backend-app
    put:
      operationId: updateWebhook
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
        - description: Represents webhook identifier across the system.
          example: 5b715448b0798751107918ab
          in: path
          name: webhookId
          required: true
          schema:
            type: string
            description: Represents webhook identifier across the system.
            example: 5b715448b0798751107918ab
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateWebhookRequestV1'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookDtoV1'
          description: OK
      summary: Update a webhook
      tags:
        - Webhooks
        - backend-app
  /v1/workspaces/{workspaceId}/webhooks/{webhookId}/logs:
    post:
      operationId: getLogsForWebhook
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
        - description: Represents webhook identifier across the system.
          in: path
          name: webhookId
          required: true
          schema:
            type: string
            description: Represents webhook identifier across the system.
        - description: Page number.
          example: 1
          in: query
          name: page
          required: false
          schema:
            type: string
            description: Page number.
            example: 1
            default: "1"
        - description: Page size.
          example: 50
          in: query
          name: size
          required: false
          schema:
            maximum: 5000
            minimum: 1
            type: string
            description: Page size.
            example: 50
            default: "50"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookLogSearchRequestV1'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebhookLogDtoV1'
          description: OK
      summary: Get logs for a webhook
      tags:
        - Webhooks
        - backend-app
  /v1/workspaces/{workspaceId}/webhooks/{webhookId}/token:
    patch:
      description: Generates a new webhook token and invalidates previous one
      operationId: generateNewToken_1
      parameters:
        - description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
            description: Represents workspace identifier across the system.
            example: 64a687e29ae1f428e7ebe303
        - description: Represents webhook identifier across the system.
          example: 5b715448b0798751107918ab
          in: path
          name: webhookId
          required: true
          schema:
            type: string
            description: Represents webhook identifier across the system.
            example: 5b715448b0798751107918ab
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookDtoV1'
          description: OK
      summary: Generate new token
      tags:
        - Webhooks
        - backend-app
  /walkthrough/{userId}:
    get:
      operationId: getAllUnfinishedWalkthroughTypes
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/WalkthroughDto'
          description: OK
      tags:
        - Walkthrough
    post:
      operationId: finishWalkthrough
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WalkthroughCreationRequest'
        required: true
      responses:
        "200":
          description: OK
      tags:
        - Walkthrough
  /workspace/{workspaceId}/owner:
    get:
      operationId: getOwnerEmailByWorkspaceId
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: string
          description: OK
      tags:
        - support-http-adapter
  /workspaces:
    get:
      operationId: getWorkspacesOfUser
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WorkspaceOverviewDto'
          description: OK
      tags:
        - Workspace
    post:
      operationId: create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWorkspaceRequest'
        required: true
      responses:
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/WorkspaceDto'
          description: Created
      tags:
        - Workspace
  /workspaces/info:
    get:
      operationId: getWorkspaceInfo
      parameters:
        - in: query
          name: workspaceId
          required: false
          schema:
            type: string
        - in: query
          name: email
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WorkspaceSubscriptionInfoDto'
          description: OK
      tags:
        - Workspace
  /workspaces/users/{userId}/permissions:
    post:
      operationId: getPermissionsToUserForWorkspaces
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetWorkspacesAuthorizationsForUserRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuthorizationDto'
          description: OK
      tags:
        - Workspace
  /workspaces/{workspaceId}:
    delete:
      operationId: leaveWorkspace
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
      tags:
        - Workspace
    get:
      operationId: getWorkspaceById
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/WorkspaceDto'
          description: OK
      tags:
        - Workspace
    put:
      operationId: updateWorkspace
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: header
          name: Sub-Domain-Name
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateWorkspaceRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/WorkspaceDto'
          description: OK
      tags:
        - Workspace
  /workspaces/{workspaceId}/ab-testing:
    get:
      operationId: getABTesting
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: query
          name: type
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ABTestingDto'
          description: OK
      tags:
        - ab-testing-http-adapter
  /workspaces/{workspaceId}/active-members-count:
    get:
      operationId: getActiveMembers
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ActiveMembersDto'
          description: OK
      tags:
        - Workspace
  /workspaces/{workspaceId}/addons:
    delete:
      operationId: uninstall
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddonUninstallRequest'
        required: true
      responses:
        "200":
          description: OK
      tags:
        - addon-http-adapter
    get:
      operationId: getInstalledAddons
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: query
          name: statuses
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: search-term
          required: false
          schema:
            type: string
            default: ""
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - in: query
          name: page-size
          required: false
          schema:
            type: integer
            format: int32
            default: 10
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AddonDto'
          description: OK
      tags:
        - addon-http-adapter
    post:
      operationId: install
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddonInstallRequest'
        required: true
      responses:
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AddonDto'
          description: Created
      tags:
        - addon-http-adapter
  /workspaces/{workspaceId}/addons/id-name-pair:
    get:
      operationId: getInstalledAddonsIdNamePair
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: query
          name: statuses
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: search-term
          required: false
          schema:
            type: string
            default: ""
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
            default: 1
        - in: query
          name: page-size
          required: false
          schema:
            type: integer
            format: int32
            default: 10
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IdNamePairDto'
          description: OK
      tags:
        - addon-http-adapter
  /workspaces/{workspaceId}/addons/keys:
    post:
      operationId: getInstalledAddonsByKeys
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddonKeysRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IdNamePairDto'
          description: OK
      tags:
        - addon-http-adapter
  /workspaces/{workspaceId}/addons/{addonId}:
    delete:
      operationId: uninstall_1
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: addonId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
      tags:
        - addon-http-adapter
    get:
      operationId: getAddonById
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: addonId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AddonDto'
          description: OK
      tags:
        - addon-http-adapter
  /workspaces/{workspaceId}/addons/{addonId}/settings:
    patch:
      operationId: updateSettings_1
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: addonId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddonUpdateSettingsRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AddonDto'
          description: OK
      tags:
        - addon-http-adapter
  /workspaces/{workspaceId}/addons/{addonId}/status:
    patch:
      operationId: updateStatus_3
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: addonId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddonUpdateStatusRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AddonDto'
          description: OK
      tags:
        - addon-http-adapter
  /workspaces/{workspaceId}/addons/{addonId}/token:
    get:
      operationId: getAddonUserJWT
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: addonId
          required: true
          schema:
            type: string
        - in: query
          name: type
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: string
          description: OK
      tags:
        - addon-http-adapter
  /workspaces/{workspaceId}/addons/{addonId}/webhooks:
    get:
      operationId: getAddonWebhooks
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: addonId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/WebhooksDto'
          description: OK
      summary: Get all webhooks for addon on workspace
      tags:
        - webhook-http-adapter
  /workspaces/{workspaceId}/addons/{addonKey}/remove-uninstalled:
    post:
      operationId: removeUninstalledAddon
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: addonKey
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
      tags:
        - addon-http-adapter
  /workspaces/{workspaceId}/alerts:
    get:
      operationId: listOfWorkspace_1
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AlertDto'
          description: OK
      tags:
        - alert-http-adapter
    post:
      operationId: create_20
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAlertRequest'
        required: true
      responses:
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AlertDto'
          description: Created
      tags:
        - alert-http-adapter
  /workspaces/{workspaceId}/alerts/{alertId}:
    delete:
      operationId: delete_18
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: alertId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AlertDto'
          description: OK
      tags:
        - alert-http-adapter
    put:
      operationId: update_11
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: alertId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAlertRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AlertDto'
          description: OK
      tags:
        - alert-http-adapter
  /workspaces/{workspaceId}/allowed-updates:
    get:
      operationId: getAllowedUpdates
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AllowedUpdates'
          description: OK
      tags:
        - Workspace
  /workspaces/{workspaceId}/approval-requests:
    patch:
      operationId: approveRequests
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApproveRequestsRequest'
        required: true
      responses:
        "200":
          description: OK
      tags:
        - Approval
  /workspaces/{workspaceId}/approval-requests/count:
    post:
      operationId: count
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetCountRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: integer
                format: int64
          description: OK
      tags:
        - Approval
  /workspaces/{workspaceId}/approval-requests/has-pending:
    get:
      operationId: hasPending
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: boolean
          description: OK
      tags:
        - Approval
  /workspaces/{workspaceId}/approval-requests/remind/approve:
    patch:
      operationId: remindManagersToApprove
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemindToApproveRequest'
        required: true
      responses:
        "200":
          description: OK
      tags:
        - Approval
  /workspaces/{workspaceId}/approval-requests/remind/submit:
    patch:
      operationId: remindUsersToSubmit
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemindToSubmitAndTrackRequest'
        required: true
      responses:
        "200":
          description: OK
      tags:
        - Approval
  /workspaces/{workspaceId}/approval-requests/stats:
    post:
      operationId: getApprovalGroups
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetApprovalsRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApprovalGroupDto'
          description: OK
      tags:
        - Approval
  /workspaces/{workspaceId}/approval-requests/stats/unsubmitted:
    post:
      operationId: getUnsubmittedSummaries
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetUnsubmittedEntriesDurationRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UnsubmittedSummaryGroupDto'
          description: OK
      tags:
        - Approval
  /workspaces/{workspaceId}/approval-requests/withdraw-on-workspace:
    patch:
      operationId: withdrawAllOfWorkspace
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
      tags:
        - Approval
  /workspaces/{workspaceId}/approval-requests/workspace-pending:
    get:
      operationId: getRequestsByWorkspace
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApprovalInfoDto'
          description: OK
      tags:
        - Approval
  /workspaces/{workspaceId}/approval-requests/{approvalRequestId}:
    get:
      operationId: getApprovalRequest
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: approvalRequestId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApprovalRequestDto'
          description: OK
      tags:
        - Approval
    patch:
      operationId: updateStatus_2
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: approvalRequestId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateApprovalRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApprovalRequestDto'
          description: OK
      tags:
        - Approval
  /workspaces/{workspaceId}/approval-requests/{approvalRequestId}/dashboard:
    get:
      operationId: getApprovalDashboard
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: approvalRequestId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApprovalDashboardDto'
          description: OK
      tags:
        - Approval
  /workspaces/{workspaceId}/approval-requests/{approvalRequestId}/details:
    get:
      operationId: getApprovalDetails
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: approvalRequestId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApprovalDetailsDto'
          description: OK
      tags:
        - Approval
  /workspaces/{workspaceId}/attributes/fetch:
    post:
      operationId: fetchCustomAttributes
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FetchCustomAttributesRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomAttributeDto'
          description: OK
      tags:
        - custom-attribute-http-adapter
  /workspaces/{workspaceId}/check-transfer-possibility:
    get:
      operationId: checkWorkspaceTransferPossibility
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: query
          name: region
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/WorkspaceTransferPossibleDto'
          description: OK
      tags:
        - Workspace
  /workspaces/{workspaceId}/clients:
    delete:
      operationId: deleteMany_3
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientIdsRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClientDto'
          description: OK
      tags:
        - Client
    get:
      operationId: getClients_1
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: query
          name: archived
          required: false
          schema:
            type: boolean
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClientDto'
          description: OK
      tags:
        - Client
    patch:
      operationId: updateMany_2
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateManyClientsRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClientWithCurrencyDto'
          description: OK
      tags:
        - Client
    post:
      operationId: create_19
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateClientRequest'
        required: true
      responses:
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClientDto'
          description: Created
      tags:
        - Client
  /workspaces/{workspaceId}/clients/archive-permissions:
    post:
      operationId: getArchivePermissions
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientIdsRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ArchivePermissionDto'
          description: OK
      tags:
        - Client
  /workspaces/{workspaceId}/clients/have-related-tasks:
    post:
      operationId: haveRelatedTasks
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientIdsRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: boolean
          description: OK
      tags:
        - Client
  /workspaces/{workspaceId}/clients/ids:
    post:
      operationId: getClientsOfIds
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: query
          name: searchValue
          required: false
          schema:
            type: string
        - in: query
          name: archived
          required: false
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientIdsRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClientDto'
          description: OK
      tags:
        - Client
  /workspaces/{workspaceId}/clients/invoices-filter:
    get:
      operationId: getClientsForInvoiceFilter_1
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: query
          name: name
          required: false
          schema:
            type: string
        - in: query
          name: excludedIds
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - in: query
          name: sort-column
          required: false
          schema:
            type: string
            default: NAME
        - in: query
          name: sort-order
          required: false
          schema:
            type: string
            default: ASCENDING
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
            default: 1
        - in: query
          name: page-size
          required: false
          schema:
            type: integer
            format: int32
            default: 50
        - in: query
          name: archived
          required: false
          schema:
            type: boolean
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClientDto'
          description: OK
      tags:
        - Client
  /workspaces/{workspaceId}/clients/projects-filter:
    get:
      operationId: getClients_2
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: query
          name: name
          required: false
          schema:
            type: string
        - in: query
          name: excludedIds
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - in: query
          name: sort-column
          required: false
          schema:
            type: string
            default: NAME
        - in: query
          name: sort-order
          required: false
          schema:
            type: string
            default: ASCENDING
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
            default: 1
        - in: query
          name: page-size
          required: false
          schema:
            type: integer
            format: int32
            default: 50
        - in: query
          name: archived
          required: false
          schema:
            type: boolean
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClientDto'
          description: OK
      tags:
        - Client
  /workspaces/{workspaceId}/clients/report-filters:
    get:
      operationId: getClientsForReportFilter
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: query
          name: name
          required: false
          schema:
            type: string
        - in: query
          name: status
          required: false
          schema:
            type: string
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
            default: 1
        - in: query
          name: page-size
          required: false
          schema:
            type: integer
            format: int32
            default: 50
        - in: query
          name: excludedIds
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClientDto'
          description: OK
      tags:
        - Client
  /workspaces/{workspaceId}/clients/report-filters/ids:
    get:
      operationId: getClientIdsForReportFilter
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: query
          name: name
          required: false
          schema:
            type: string
        - in: query
          name: status
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
          description: OK
      tags:
        - Client
  /workspaces/{workspaceId}/clients/time-off-policies-holidays:
    post:
      operationId: getTimeOffPoliciesAndHolidaysFroClient
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientIdsRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TimeOffPolicyHolidayForClients'
          description: OK
      tags:
        - Client
  /workspaces/{workspaceId}/clients/{clientId}:
    delete:
      operationId: delete_17
      parameters:
        - in: path
          name: clientId
          required: true
          schema:
            type: string
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClientDto'
          description: OK
      tags:
        - Client
    get:
      operationId: getClient
      parameters:
        - in: path
          name: clientId
          required: true
          schema:
            type: string
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClientDto'
          description: OK
      tags:
        - Client
  /workspaces/{workspaceId}/clients/{clientId}/can-archive-projects:
    get:
      operationId: getProjectsArchivePermissions
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: clientId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: boolean
          description: OK
      tags:
        - Client
  /workspaces/{workspaceId}/clients/{id}:
    put:
      operationId: update_10
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: query
          name: archive-projects
          required: false
          schema:
            type: boolean
        - in: query
          name: mark-tasks-as-done
          required: false
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateClientRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClientWithCurrencyDto'
          description: OK
      tags:
        - Client
  /workspaces/{workspaceId}/cost-rate:
    post:
      operationId: setCostRate_2
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CostRateRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/WorkspaceDto'
          description: OK
      tags:
        - Workspace
  /workspaces/{workspaceId}/coupons:
    get:
      operationId: getCoupon
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: query
          name: type
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SubscriptionCouponDto'
          description: OK
      tags:
        - subscription-coupon-http-adapter
  /workspaces/{workspaceId}/currencies:
    get:
      operationId: getWorkspaceCurrencies
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CurrencyDto'
          description: OK
      tags:
        - currency-http-adapter
    post:
      operationId: createCurrency
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCurrencyRequest'
        required: true
      responses:
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CurrencyDto'
          description: Created
      tags:
        - currency-http-adapter
  /workspaces/{workspaceId}/currencies/{currencyId}:
    delete:
      operationId: removeCurrency
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: currencyId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
      tags:
        - currency-http-adapter
    get:
      operationId: getCurrency
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: currencyId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: string
          description: OK
      tags:
        - currency-http-adapter
  /workspaces/{workspaceId}/currencies/{currencyId}/code:
    patch:
      operationId: updateCurrencyCode
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: currencyId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCurrencyCodeRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CurrencyDto'
          description: OK
      tags:
        - currency-http-adapter
  /workspaces/{workspaceId}/currency:
    patch:
      operationId: setCurrency
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDefaultWorkspaceCurrencyRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/WorkspaceDto'
          description: OK
      tags:
        - Workspace
  /workspaces/{workspaceId}/custom-field:
    get:
      operationId: ofWorkspace
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: query
          name: name
          required: false
          schema:
            type: string
        - in: query
          name: status
          required: false
          schema:
            type: string
        - in: query
          name: entityType
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomFieldDto'
          description: OK
      tags:
        - Custom fields
    post:
      operationId: create_18
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomFieldRequest'
        required: true
      responses:
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomFieldDto'
          description: Created
      tags:
        - Custom fields
  /workspaces/{workspaceId}/custom-field/required-availability:
    get:
      operationId: ofWorkspaceWithRequiredAvailability
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: query
          name: entityType
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomFieldRequiredAvailabilityDto'
          description: OK
      tags:
        - Custom fields
  /workspaces/{workspaceId}/custom-field/{customFieldId}:
    delete:
      operationId: delete_16
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: customFieldId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
      tags:
        - Custom fields
    put:
      operationId: edit
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: customFieldId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCustomFieldRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomFieldDto'
          description: OK
      tags:
        - Custom fields
  /workspaces/{workspaceId}/custom-field/{customFieldId}/default/{projectId}:
    delete:
      operationId: removeDefaultValueOfProject
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: customFieldId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomFieldDto'
          description: OK
      tags:
        - Custom fields
    put:
      operationId: editDefaultValues
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: customFieldId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomFieldProjectDefaultValuesRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomFieldDto'
          description: OK
      tags:
        - Custom fields
  /workspaces/{workspaceId}/custom-field/{projectId}:
    get:
      operationId: getOfProject
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: query
          name: status
          required: true
          schema:
            type: string
        - in: query
          name: entityType
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomFieldDto'
          description: OK
      tags:
        - Custom fields
  /workspaces/{workspaceId}/custom-labels:
    patch:
      operationId: updateCustomLabels
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomLabelsRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/WorkspaceDto'
          description: OK
      tags:
        - Workspace
  /workspaces/{workspaceId}/email/{userId}/add:
    put:
      operationId: addEmail
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: query
          name: sendEmail
          required: false
          schema:
            type: boolean
            default: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddEmailRequest'
        required: true
      responses:
        "200":
          description: OK
      tags:
        - Workspace
  /workspaces/{workspaceId}/expenses:
    delete:
      operationId: deleteManyExpenses
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExpensesIdsRequest'
        required: true
      responses:
        "200":
          description: OK
      tags:
        - Expense
    get:
      operationId: getExpenses
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
            default: 1
        - in: query
          name: page-size
          required: false
          schema:
            type: integer
            format: int32
            default: 50
        - in: query
          name: userId
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExpensesAndTotalsDto'
          description: OK
      tags:
        - Expense
    post:
      operationId: createExpense
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateExpenseRequest'
      responses:
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExpenseDto'
          description: Created
      tags:
        - Expense
  /workspaces/{workspaceId}/expenses/categories:
    get:
      operationId: getCategories
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: query
          name: excludedIds
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - in: query
          name: sort-column
          required: false
          schema:
            type: string
            default: NAME
        - in: query
          name: sort-order
          required: false
          schema:
            type: string
            default: ASCENDING
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
            default: 1
        - in: query
          name: page-size
          required: false
          schema:
            type: integer
            format: int32
            default: 50
        - in: query
          name: archived
          required: false
          schema:
            type: boolean
        - in: query
          name: name
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExpenseCategoriesWithCountDto'
          description: OK
      tags:
        - Expense
    post:
      operationId: create_17
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExpenseCategoryRequest'
        required: true
      responses:
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExpenseCategoryDto'
          description: Created
      tags:
        - Expense
  /workspaces/{workspaceId}/expenses/categories/filter-ids:
    get:
      operationId: getCategoriesByIds
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: query
          name: ids
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - in: query
          name: archived
          required: false
          schema:
            type: boolean
        - in: query
          name: name
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExpenseCategoryDto'
          description: OK
      tags:
        - Expense
  /workspaces/{workspaceId}/expenses/categories/{categoryId}:
    delete:
      operationId: deleteCategory
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: categoryId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
      tags:
        - Expense
    put:
      operationId: updateCategory
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: categoryId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExpenseCategoryRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExpenseCategoryDto'
          description: OK
      tags:
        - Expense
  /workspaces/{workspaceId}/expenses/categories/{categoryId}/archived:
    patch:
      operationId: updateStatus_1
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: categoryId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExpenseCategoryArchiveRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExpenseCategoryDto'
          description: OK
      tags:
        - Expense
  /workspaces/{workspaceId}/expenses/filter:
    get:
      operationId: getExpensesInDateRange
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: query
          name: userId
          required: true
          schema:
            type: string
        - in: query
          name: start
          required: true
          schema:
            type: string
        - in: query
          name: end
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExpenseHydratedDto'
          description: OK
      tags:
        - Expense
  /workspaces/{workspaceId}/expenses/invoiced:
    patch:
      operationId: updateInvoicedStatus_1
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateInvoicedStatusRequest'
        required: true
      responses:
        "200":
          description: OK
      tags:
        - Expense
  /workspaces/{workspaceId}/expenses/{expenseId}:
    delete:
      operationId: deleteExpense
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: expenseId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExpenseDeletedDto'
          description: OK
      tags:
        - Expense
    get:
      operationId: getExpense
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: expenseId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExpenseDto'
          description: OK
      tags:
        - Expense
    put:
      operationId: updateExpense
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: expenseId
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdateExpenseRequest'
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExpenseWithApprovalRequestUpdatedDto'
          description: OK
      tags:
        - Expense
  /workspaces/{workspaceId}/expenses/{expenseId}/files/{fileId}:
    get:
      operationId: downloadFile
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
        - in: path
          name: expenseId
          required: true
          schema:
            type: string
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: string
                format: byte
          description: OK
      tags:
        - Expense
  /workspaces/{workspaceId}/file-import:
    post:
      operationId: importFileData
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileImportRequest'
        required: true
      responses:
        "200":
          description: OK
      tags:
        - file-import-adapter
  /workspaces/{workspaceId}/file-import/{fileImportId}/check-users:
    get:
      operationId: checkUsersForImport
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: fileImportId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CheckUsersResponse'
          description: OK
      tags:
        - file-import-adapter
  /workspaces/{workspaceId}/google-analytics:
    post:
      operationId: send
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendGoogleAnalyticsRequest'
        required: true
      responses:
        "200":
          description: OK
      tags:
        - google-analytics-adapter
  /workspaces/{workspaceId}/holidays:
    get:
      operationId: getHolidays
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HolidayDto'
          description: OK
      tags:
        - Holiday
    post:
      operationId: create_16
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HolidayRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/HolidayDto'
          description: OK
      tags:
        - Holiday
  /workspaces/{workspaceId}/holidays/{holidayId}:
    delete:
      operationId: delete_15
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: holidayId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/HolidayDto'
          description: OK
      tags:
        - Holiday
    put:
      operationId: update_9
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: holidayId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HolidayRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/HolidayDto'
          description: OK
      tags:
        - Holiday
  /workspaces/{workspaceId}/hourly-rate:
    post:
      operationId: setHourlyRate_2
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HourlyRateRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/WorkspaceDto'
          description: OK
      tags:
        - Workspace
  /workspaces/{workspaceId}/invoice-email-templates:
    get:
      operationId: getInvoiceEmailTemplates
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: query
          name: invoiceEmailTemplateType
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InvoiceEmailTemplateDto'
          description: OK
      tags:
        - invoice-email-template-http-adapter
    put:
      operationId: upsertInvoiceEmailTemplate
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateInvoiceEmailTemplateRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvoiceEmailTemplateDto'
          description: OK
      tags:
        - invoice-email-template-http-adapter
  /workspaces/{workspaceId}/invoice/{invoiceId}/email-type/{invoiceEmailTemplateType}/email-data:
    get:
      operationId: getInvoiceEmailData
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: invoiceId
          required: true
          schema:
            type: string
        - in: path
          name: invoiceEmailTemplateType
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvoiceEmailDataDto'
          description: OK
      tags:
        - invoice-email-template-http-adapter
  /workspaces/{workspaceId}/invoice/{invoiceId}/email-type/{invoiceEmailTemplateType}/send-email:
    post:
      operationId: sendInvoiceEmail
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: invoiceId
          required: true
          schema:
            type: string
        - in: path
          name: invoiceEmailTemplateType
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendInvoiceEmailRequest'
        required: true
      responses:
        "200":
          description: OK
      tags:
        - invoice-email-template-http-adapter
  /workspaces/{workspaceId}/invoices:
    post:
      operationId: createInvoice
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateInvoiceRequest'
        required: true
      responses:
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CreateInvoiceDto'
          description: Created
      tags:
        - Invoice
  /workspaces/{workspaceId}/invoices/companies:
    get:
      operationId: getAllCompanies
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyDto'
          description: OK
      tags:
        - company-http-adapter
    post:
      operationId: createCompany
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyRequest'
        required: true
      responses:
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CompanyDto'
          description: Created
      tags:
        - company-http-adapter
  /workspaces/{workspaceId}/invoices/companies/bulk:
    put:
      operationId: updateCompaniesInWorkspace
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkUpdateCompaniesRequest'
        required: true
      responses:
        "200":
          description: OK
      tags:
        - company-http-adapter
  /workspaces/{workspaceId}/invoices/companies/count:
    get:
      operationId: countAllCompanies
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: integer
                format: int64
          description: OK
      tags:
        - company-http-adapter
  /workspaces/{workspaceId}/invoices/companies/invoices-filter:
    get:
      operationId: getClientsForInvoiceFilter
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: query
          name: name
          required: false
          schema:
            type: string
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
            default: 1
        - in: query
          name: page-size
          required: false
          schema:
            type: integer
            format: int32
            default: 50
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyDto'
          description: OK
      tags:
        - company-http-adapter
  /workspaces/{workspaceId}/invoices/companies/{companyId}:
    delete:
      operationId: deleteCompany
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: companyId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
      tags:
        - company-http-adapter
    get:
      operationId: getCompanyById
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: companyId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CompanyDto'
          description: OK
      tags:
        - company-http-adapter
    put:
      operationId: updateCompany
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: companyId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CompanyDto'
          description: OK
      tags:
        - company-http-adapter
  /workspaces/{workspaceId}/invoices/info:
    post:
      operationId: getInvoicesInfo
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvoiceFilterRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvoiceInfoResponseDto'
          description: OK
      tags:
        - Invoice
  /workspaces/{workspaceId}/invoices/itemType:
    get:
      operationId: getInvoiceItemTypes
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InvoiceItemTypeDto'
          description: OK
      tags:
        - Invoice
    post:
      operationId: createInvoiceItemType
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateInvoiceItemTypeRequest'
        required: true
      responses:
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CreateInvoiceItemTypeDto'
          description: Created
      tags:
        - Invoice
  /workspaces/{workspaceId}/invoices/itemType/{id}:
    delete:
      operationId: deleteInvoiceItemType
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
      tags:
        - Invoice
    put:
      operationId: updateInvoiceItemType
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateInvoiceItemTypeRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvoiceItemTypeDto'
          description: OK
      tags:
        - Invoice
  /workspaces/{workspaceId}/invoices/next-number:
    get:
      operationId: getNextInvoiceNumber
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/NextInvoiceNumberDto'
          description: OK
      tags:
        - Invoice
  /workspaces/{workspaceId}/invoices/permissions:
    get:
      operationId: getInvoicePermissions
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvoicePermissionsDto'
          description: OK
      tags:
        - Invoice
    put:
      operationId: updateInvoicePermissions
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvoicePermissionsRequest'
        required: true
      responses:
        "200":
          description: OK
      tags:
        - Invoice
  /workspaces/{workspaceId}/invoices/permissions/current:
    get:
      operationId: canUserManageInvoices
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: boolean
          description: OK
      tags:
        - Invoice
  /workspaces/{workspaceId}/invoices/settings:
    get:
      operationId: getInvoiceSettings
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvoiceSettingsDto'
          description: OK
      tags:
        - Invoice
    put:
      operationId: updateInvoiceSettings
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateInvoiceSettingsRequest'
        required: true
      responses:
        "200":
          description: OK
      tags:
        - Invoice
  /workspaces/{workspaceId}/invoices/{invoiceId}:
    delete:
      operationId: deleteInvoice
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: invoiceId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
      tags:
        - Invoice
    get:
      operationId: getInvoice
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: invoiceId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvoiceOverviewDto'
          description: OK
      tags:
        - Invoice
    put:
      operationId: updateInvoice
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: invoiceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateInvoiceRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvoiceOverviewDto'
          description: OK
      tags:
        - Invoice
  /workspaces/{workspaceId}/invoices/{invoiceId}/duplicate:
    post:
      operationId: duplicateInvoice
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: invoiceId
          required: true
          schema:
            type: string
      responses:
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvoiceOverviewDto'
          description: Created
      tags:
        - Invoice
  /workspaces/{workspaceId}/invoices/{invoiceId}/export:
    get:
      operationId: exportInvoice
      parameters:
        - in: path
          name: invoiceId
          required: true
          schema:
            type: string
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: query
          name: userLocale
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: string
                format: byte
          description: OK
      tags:
        - Invoice
  /workspaces/{workspaceId}/invoices/{invoiceId}/import:
    put:
      operationId: importTimeAndExpenses
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: invoiceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportTimeEntriesAndExpensesRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvoiceOverviewDto'
          description: OK
      tags:
        - Invoice
  /workspaces/{workspaceId}/invoices/{invoiceId}/invoiceItem:
    post:
      operationId: addInvoiceItem
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: invoiceId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvoiceItemDto'
          description: OK
      tags:
        - Invoice
  /workspaces/{workspaceId}/invoices/{invoiceId}/invoiceItem/order:
    patch:
      operationId: reorderInvoiceItem_1
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: invoiceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReorderInvoiceItemRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InvoiceItemDto'
          description: OK
      tags:
        - Invoice
  /workspaces/{workspaceId}/invoices/{invoiceId}/invoiceItem/{invoiceItemOrder}:
    put:
      operationId: editInvoiceItem
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: invoiceId
          required: true
          schema:
            type: string
        - in: path
          name: invoiceItemOrder
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateInvoiceItemRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvoiceOverviewDto'
          description: OK
      tags:
        - Invoice
  /workspaces/{workspaceId}/invoices/{invoiceId}/invoiceItems:
    delete:
      operationId: deleteInvoiceItems
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: invoiceId
          required: true
          schema:
            type: string
        - in: query
          name: invoiceItemsOrder
          required: true
          schema:
            uniqueItems: true
            type: array
            items:
              type: integer
              format: int32
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvoiceOverviewDto'
          description: OK
      tags:
        - Invoice
  /workspaces/{workspaceId}/invoices/{invoiceId}/payments:
    get:
      operationId: getPaymentsForInvoice
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: invoiceId
          required: true
          schema:
            type: string
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
            default: 1
        - in: query
          name: page-size
          required: false
          schema:
            type: integer
            format: int32
            default: 50
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InvoicePaymentDto'
          description: OK
      tags:
        - Invoice
    post:
      operationId: createInvoicePayment
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: invoiceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateInvoicePaymentRequest'
        required: true
      responses:
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvoiceOverviewDto'
          description: Created
      tags:
        - Invoice
  /workspaces/{workspaceId}/invoices/{invoiceId}/payments/{paymentId}:
    delete:
      operationId: deletePaymentById
      parameters:
        - in: path
          name: invoiceId
          required: true
          schema:
            type: string
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: paymentId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvoiceOverviewDto'
          description: OK
      tags:
        - Invoice
  /workspaces/{workspaceId}/invoices/{invoiceId}/status:
    patch:
      operationId: changeInvoiceStatus
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: invoiceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeInvoiceStatusRequest'
        required: true
      responses:
        "200":
          description: OK
      tags:
        - Invoice
  /workspaces/{workspaceId}/is-admin:
    get:
      operationId: authorizationCheck
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
      tags:
        - Workspace
  /workspaces/{workspaceId}/kiosk/pin/available:
    get:
      operationId: isAvailable
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: query
          name: pinContext
          required: true
          schema:
            type: string
            enum:
              - ADMIN
              - UNIVERSAL
              - USER
              - INITIAL
        - in: query
          name: pinCode
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: boolean
          description: OK
      tags:
        - pin-code-http-adapter
  /workspaces/{workspaceId}/kiosk/pin/available/{userId}:
    get:
      operationId: isAvailable_1
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: query
          name: pinCode
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: boolean
          description: OK
      tags:
        - pin-code-http-adapter
  /workspaces/{workspaceId}/kiosk/pin/generate:
    get:
      operationId: generatePinCode
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: query
          name: context
          required: true
          schema:
            type: string
            enum:
              - ADMIN
              - UNIVERSAL
              - USER
              - INITIAL
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PinCodeDto'
          description: OK
      tags:
        - pin-code-http-adapter
  /workspaces/{workspaceId}/kiosk/pin/generate/{userId}:
    get:
      operationId: generatePinCodeForUser
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PinCodeDto'
          description: OK
      tags:
        - pin-code-http-adapter
  /workspaces/{workspaceId}/kiosk/pin/{userId}:
    get:
      operationId: getUserPinCode
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/KioskUserPinCodeDto'
          description: OK
      tags:
        - pin-code-http-adapter
    put:
      operationId: updatePinCode
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: userId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePinCodeRequest'
        required: true
      responses:
        "200":
          description: OK
      tags:
        - pin-code-http-adapter
  /workspaces/{workspaceId}/kiosks:
    get:
      operationId: getKiosksOfWorkspace
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: query
          name: name
          required: false
          schema:
            type: string
        - in: query
          name: statuses
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
            default: 1
        - in: query
          name: page-size
          required: false
          schema:
            type: integer
            format: int32
            default: 50
        - in: query
          name: sort-column
          required: false
          schema:
            type: string
            default: NAME
        - in: query
          name: sort-order
          required: false
          schema:
            type: string
            default: ASCENDING
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/KioskHydratedWithCountDto'
          description: OK
      tags:
        - kiosk-http-adapter
    post:
      operationId: create_15
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateKioskRequest'
        required: true
      responses:
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/KioskDto'
          description: Created
      tags:
        - kiosk-http-adapter
  /workspaces/{workspaceId}/kiosks/break-defaults:
    patch:
      operationId: updateBreakDefaults
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkUpdateKioskDefaultsRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/KioskDto'
          description: OK
      tags:
        - kiosk-http-adapter
  /workspaces/{workspaceId}/kiosks/count:
    get:
      operationId: getTotalCountOfKiosksOnWorkspace
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: integer
                format: int64
          description: OK
      tags:
        - kiosk-http-adapter
  /workspaces/{workspaceId}/kiosks/defaults:
    patch:
      operationId: updateDefaults
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkUpdateKioskDefaultsRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/KioskDto'
          description: OK
      tags:
        - kiosk-http-adapter
  /workspaces/{workspaceId}/kiosks/has-active:
    get:
      operationId: hasActiveKiosks
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: boolean
          description: OK
      tags:
        - kiosk-http-adapter
  /workspaces/{workspaceId}/kiosks/project:
    post:
      operationId: getWithProject
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectIdsRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EntityIdNameDto'
          description: OK
      tags:
        - kiosk-http-adapter
  /workspaces/{workspaceId}/kiosks/project/{projectId}/task:
    post:
      operationId: getWithTask
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: projectId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskIdsRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EntityIdNameDto'
          description: OK
      tags:
        - kiosk-http-adapter
  /workspaces/{workspaceId}/kiosks/report-filter:
    get:
      operationId: getForReportFilter
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EntityIdNameDto'
          description: OK
      tags:
        - kiosk-http-adapter
  /workspaces/{workspaceId}/kiosks/without-defaults:
    get:
      operationId: getWithoutDefaults
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: query
          name: type
          required: false
          schema:
            type: string
        - in: query
          name: isBreak
          required: false
          schema:
            type: boolean
            default: false
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/KioskDto'
          description: OK
      tags:
        - kiosk-http-adapter
  /workspaces/{workspaceId}/kiosks/{kioskId}:
    delete:
      operationId: deleteKiosk
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: kioskId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
      tags:
        - kiosk-http-adapter
    get:
      operationId: getKioskById
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: kioskId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/KioskHydratedDto'
          description: OK
      tags:
        - kiosk-http-adapter
    put:
      operationId: update_8
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: kioskId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateKioskRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/KioskDto'
          description: OK
      tags:
        - kiosk-http-adapter
  /workspaces/{workspaceId}/kiosks/{kioskId}/assignees/export:
    get:
      operationId: exportAssignees
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: kioskId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: string
                format: byte
          description: OK
      tags:
        - kiosk-http-adapter
  /workspaces/{workspaceId}/kiosks/{kioskId}/has-entry-in-progress:
    get:
      operationId: hasEntryInProgress
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: kioskId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: boolean
          description: OK
      tags:
        - kiosk-entries-http-adapter
  /workspaces/{workspaceId}/kiosks/{kioskId}/status:
    put:
      operationId: updateStatus
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: kioskId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateKioskStatusRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/KioskDto'
          description: OK
      tags:
        - kiosk-http-adapter
  /workspaces/{workspaceId}/legacy-plan-acknowledge:
    post:
      operationId: acknowledgeLegacyPlanNotifications
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      responses:
        "201":
          description: Created
      tags:
        - legacy-plan-notification-adapter
  /workspaces/{workspaceId}/legacy-plan-upgrade-data:
    get:
      operationId: getLegacyPlanUpgradeData
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LegacyPlanUpgradeDataDto'
          description: OK
      tags:
        - legacy-plan-notification-adapter
  /workspaces/{workspaceId}/limited-users:
    post:
      operationId: addLimitedUsers
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddLimitedUserToWorkspaceRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/WorkspaceDto'
          description: OK
      tags:
        - Workspace
  /workspaces/{workspaceId}/limited-users/count:
    get:
      operationId: getLimitedUsersCount
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: integer
                format: int32
          description: OK
      tags:
        - Workspace
  /workspaces/{workspaceId}/member-profile/{userId}:
    get:
      operationId: getMemberProfile
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MemberProfileDto'
          description: OK
      tags:
        - Workspace
    patch:
      operationId: updateMemberProfile
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: userId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MemberProfileRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MemberProfileDto'
          description: OK
      tags:
        - Workspace
  /workspaces/{workspaceId}/member-profile/{userId}/email:
    put:
      operationId: changeUserMemberEmail
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: header
          name: Sub-Domain-Name
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeEmailRequest'
        required: true
      responses:
        "200":
          description: OK
      tags:
        - Workspace
  /workspaces/{workspaceId}/member-profile/{userId}/full:
    patch:
      operationId: updateMemberProfileWithAdditionalData
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: userId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MemberProfileFullRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MemberProfileDto'
          description: OK
      tags:
        - Workspace
  /workspaces/{workspaceId}/member-profile/{userId}/settings:
    patch:
      operationId: updateMemberSettings
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: userId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MemberSettingsRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MemberProfileDto'
          description: OK
      tags:
        - Workspace
  /workspaces/{workspaceId}/member-profile/{userId}/week-start:
    get:
      operationId: getWeekStart
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: string
                enum:
                  - MONDAY
                  - TUESDAY
                  - WEDNESDAY
                  - THURSDAY
                  - FRIDAY
                  - SATURDAY
                  - SUNDAY
          description: OK
      tags:
        - Workspace
  /workspaces/{workspaceId}/member-profile/{userId}/working-days-capacity:
    patch:
      operationId: updateMemberWorkingDaysAndCapacity
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: userId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MemberSettingsRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MemberProfileDto'
          description: OK
      tags:
        - Workspace
  /workspaces/{workspaceId}/members-count:
    get:
      operationId: getMembersCount
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MembersCountDto'
          description: OK
      tags:
        - Workspace
  /workspaces/{workspaceId}/not-invited-users:
    post:
      operationId: findNotInvitedEmailsIn
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserEmailsRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
          description: OK
      tags:
        - Workspace
  /workspaces/{workspaceId}/organization:
    get:
      operationId: getOrganization
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OrganizationDto'
          description: OK
      tags:
        - Organization
    post:
      operationId: create_14
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrganizationRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OrganizationDto'
          description: OK
      tags:
        - Organization
  /workspaces/{workspaceId}/organization/name:
    get:
      operationId: getOrganizationName
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OrganizationNameDto'
          description: OK
      tags:
        - Organization
  /workspaces/{workspaceId}/organization/subdomain-name:
    get:
      operationId: checkAvailabilityOfDomainName
      parameters:
        - in: query
          name: domain-name
          required: true
          schema:
            type: string
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: boolean
          description: OK
      tags:
        - Organization
  /workspaces/{workspaceId}/organization/{organizationId}:
    delete:
      operationId: deleteOrganization
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OrganizationDto'
          description: OK
      tags:
        - Organization
    patch:
      operationId: updateOrganization
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OrganizationDto'
          description: OK
      tags:
        - Organization
  /workspaces/{workspaceId}/organization/{organizationId}/login-settings:
    get:
      operationId: getLoginSettings
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LoginSettingsDto'
          description: OK
      tags:
        - Organization
  /workspaces/{workspaceId}/organization/{organizationId}/o-auth2-configuration:
    delete:
      operationId: deleteOAuth2Configuration
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
      tags:
        - Organization
    get:
      operationId: getOrganizationOAuth2Configuration
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OAuth2ConfigurationDto'
          description: OK
      tags:
        - Organization
    patch:
      operationId: updateOAuth2Configuration_1
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OAuthConfigurationRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OAuth2ConfigurationDto'
          description: OK
      tags:
        - Organization
  /workspaces/{workspaceId}/organization/{organizationId}/oauth-configuration-test:
    post:
      operationId: testOAuth2Configuration
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OAuthConfigurationRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: boolean
          description: OK
      tags:
        - Organization
  /workspaces/{workspaceId}/organization/{organizationId}/saml2-configuration:
    delete:
      operationId: deleteSAML2Configuration
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
      tags:
        - Organization
    get:
      operationId: getOrganizationSAML2Configuration
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SAML2ConfigurationDto'
          description: OK
      tags:
        - Organization
    patch:
      operationId: updateSAML2Configuration
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SAML2ConfigurationRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SAML2ConfigurationDto'
          description: OK
      tags:
        - Organization
  /workspaces/{workspaceId}/organization/{organizationId}/saml2-configuration-test:
    post:
      operationId: testSAML2Configuration
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SAML2ConfigurationRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: boolean
          description: OK
      tags:
        - Organization
  /workspaces/{workspaceId}/organization/{userId}/subdomain-names:
    get:
      operationId: getAllOrganizationsOfUser
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: query
          name: membership-status
          required: false
          schema:
            type: string
            default: ALL
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
          description: OK
      tags:
        - Organization
  /workspaces/{workspaceId}/owner:
    get:
      operationId: getWorkspaceOwner
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OwnerIdResponse'
          description: OK
      tags:
        - Workspace
    put:
      operationId: transferOwnership
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransferOwnerRequest'
        required: true
      responses:
        "200":
          description: OK
      tags:
        - Workspace
  /workspaces/{workspaceId}/owner/timeZone:
    get:
      operationId: getWorkspaceOwnerTimeZone
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OwnerTimeZoneResponse'
          description: OK
      tags:
        - Workspace
  /workspaces/{workspaceId}/payments/cancel-subscription:
    post:
      operationId: cancelSubscription
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancellationReasonDto'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BillingInformationDto'
          description: OK
      tags:
        - payment-http-adapter
  /workspaces/{workspaceId}/payments/confirm-payment:
    patch:
      operationId: confirmPayment
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BillingInformationDto'
          description: OK
      tags:
        - payment-http-adapter
  /workspaces/{workspaceId}/payments/customer-information:
    get:
      operationId: getCustomerInfo
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: query
          name: countryCode
          required: false
          schema:
            type: string
            default: ""
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomerInformationDto'
          description: OK
      tags:
        - payment-http-adapter
  /workspaces/{workspaceId}/payments/customer/create:
    post:
      operationId: createCustomer
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomerDto'
          description: OK
      tags:
        - payment-http-adapter
  /workspaces/{workspaceId}/payments/customer/update:
    post:
      operationId: updateCustomer
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                customerBillingRequest:
                  $ref: '#/components/schemas/CustomerBillingRequest'
                customerRequest:
                  $ref: '#/components/schemas/CustomerRequest'
        required: true
      responses:
        "200":
          description: OK
      tags:
        - payment-http-adapter
  /workspaces/{workspaceId}/payments/edit-invoice:
    post:
      operationId: editInvoiceInformation
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerBillingRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomerBillingInformationDto'
          description: OK
      tags:
        - payment-http-adapter
  /workspaces/{workspaceId}/payments/edit-payment:
    post:
      operationId: editPaymentInformation
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomerPaymentInformationDto'
          description: OK
      tags:
        - payment-http-adapter
  /workspaces/{workspaceId}/payments/extend-trial:
    patch:
      operationId: extendTrial
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: query
          name: days
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
      tags:
        - payment-http-adapter
  /workspaces/{workspaceId}/payments/feature-subscriptions:
    get:
      operationId: getFeatureSubscriptions
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: query
          name: type
          required: false
          schema:
            type: string
            default: ""
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FeatureSubscriptionsDto'
          description: OK
      tags:
        - payment-http-adapter
  /workspaces/{workspaceId}/payments/initial-price:
    post:
      operationId: initialUpgrade
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InitialPriceRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UpgradePriceDto'
          description: OK
      tags:
        - payment-http-adapter
  /workspaces/{workspaceId}/payments/invoice-information:
    get:
      operationId: getInvoiceInfo
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomerBillingInformationDto'
          description: OK
      tags:
        - payment-http-adapter
  /workspaces/{workspaceId}/payments/invoices:
    get:
      operationId: getInvoices
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: query
          name: status
          required: false
          schema:
            type: array
            items:
              type: string
            default:
              - PAID
              - OPEN
        - in: query
          name: startingAfter
          required: false
          schema:
            type: string
        - in: query
          name: limit
          required: false
          schema:
            type: integer
            format: int32
            default: 100
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StripeInvoiceDto'
          description: OK
      tags:
        - payment-http-adapter
  /workspaces/{workspaceId}/payments/invoices-count:
    get:
      operationId: getInvoicesCount
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: query
          name: status
          required: false
          schema:
            type: array
            items:
              type: string
            default:
              - PAID
              - OPEN
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: integer
                  format: int64
          description: OK
      tags:
        - payment-http-adapter
  /workspaces/{workspaceId}/payments/payment-date:
    get:
      operationId: getPaymentDate
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BillingInformationDto'
          description: OK
      tags:
        - payment-http-adapter
  /workspaces/{workspaceId}/payments/payment-information:
    get:
      operationId: getPaymentInfo
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomerPaymentInformationDto'
          description: OK
      tags:
        - payment-http-adapter
  /workspaces/{workspaceId}/payments/payment-method/setup-intent:
    post:
      operationId: createSetupIntentForPaymentMethod
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                customerBillingRequest:
                  $ref: '#/components/schemas/CustomerBillingRequest'
                invisibleReCaptchaRequest:
                  $ref: '#/components/schemas/InvisibleReCaptchaRequest'
                paymentMethodAddressRequest:
                  $ref: '#/components/schemas/PaymentMethodAddressRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SetupIntentDto'
          description: OK
      tags:
        - payment-http-adapter
  /workspaces/{workspaceId}/payments/preview-price:
    get:
      operationId: previewUpgrade
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: query
          name: type
          required: false
          schema:
            type: string
        - in: query
          name: quantity
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: limitedQuantity
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UpgradePriceDto'
          description: OK
      tags:
        - payment-http-adapter
  /workspaces/{workspaceId}/payments/reactivate-subscription:
    get:
      operationId: reactivateSubscription
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
      tags:
        - payment-http-adapter
  /workspaces/{workspaceId}/payments/scheduled-invoice-information:
    get:
      operationId: getScheduledInvoiceInfo
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/NextCustomerInformationDto'
          description: OK
      tags:
        - payment-http-adapter
  /workspaces/{workspaceId}/payments/seats:
    put:
      operationId: updateUserSeats
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateQuantityRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BillingInformationDto'
          description: OK
      tags:
        - payment-http-adapter
  /workspaces/{workspaceId}/payments/setup-intent:
    post:
      operationId: createSetupIntentForInitialSubscription
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                customerBillingRequest:
                  $ref: '#/components/schemas/CustomerBillingRequest'
                customerRequest:
                  $ref: '#/components/schemas/CustomerRequest'
                invisibleReCaptchaRequest:
                  $ref: '#/components/schemas/InvisibleReCaptchaRequest'
                paymentMethodAddressRequest:
                  $ref: '#/components/schemas/PaymentMethodAddressRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SetupIntentDto'
          description: OK
      tags:
        - payment-http-adapter
  /workspaces/{workspaceId}/payments/subscription/create:
    post:
      operationId: createSubscription
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                customerRequest:
                  $ref: '#/components/schemas/CustomerRequest'
                paymentRequest:
                  $ref: '#/components/schemas/PaymentRequest'
                quantityRequest:
                  $ref: '#/components/schemas/CreateSubscriptionQuantityRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BillingInformationDto'
          description: OK
      tags:
        - payment-http-adapter
  /workspaces/{workspaceId}/payments/subscription/update:
    post:
      operationId: updateSubscription
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BillingInformationDto'
          description: OK
      tags:
        - payment-http-adapter
  /workspaces/{workspaceId}/payments/terminate-subscription:
    put:
      operationId: deleteSubscription
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TerminateSubscriptionRequest'
        required: true
      responses:
        "200":
          description: OK
      tags:
        - payment-http-adapter
  /workspaces/{workspaceId}/payments/terminate-trial:
    put:
      operationId: terminateTrial
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
      tags:
        - payment-http-adapter
  /workspaces/{workspaceId}/payments/trial:
    post:
      operationId: startTrial
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
      tags:
        - payment-http-adapter
  /workspaces/{workspaceId}/payments/was-regional-ever-allowed:
    get:
      operationId: wasRegionalEverAllowed
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: boolean
          description: OK
      tags:
        - payment-http-adapter
  /workspaces/{workspaceId}/policies/{policyId}/users/{userId}:
    get:
      operationId: findForUserAndPolicy
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: policyId
          required: true
          schema:
            type: string
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
            default: 1
        - in: query
          name: page-size
          required: false
          schema:
            type: integer
            format: int32
            default: 50
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BalanceHistoryDto'
          description: OK
      tags:
        - balance-history-http-adapter
  /workspaces/{workspaceId}/project-picker/clients:
    get:
      operationId: getClients
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: query
          name: search
          required: false
          schema:
            type: string
            default: ""
        - in: query
          name: page
          required: false
          schema:
            type: string
            default: "1"
        - in: query
          name: page-size
          required: false
          schema:
            type: string
            default: "50"
        - in: query
          name: excludedProjects
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - in: query
          name: excludedTasks
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - in: query
          name: userId
          required: false
          schema:
            type: string
        - in: query
          name: pickerOptions
          required: true
          schema:
            $ref: '#/components/schemas/PickerOptions'
        - in: query
          name: archived
          required: false
          schema:
            type: boolean
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectsByClientDto'
          description: OK
      tags:
        - project-picker-http-adapter
  /workspaces/{workspaceId}/project-picker/projects:
    get:
      operationId: getProjects_3
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: query
          name: clientId
          required: false
          schema:
            type: string
        - in: query
          name: search
          required: false
          schema:
            type: string
            default: ""
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
            default: 1
        - in: query
          name: page-size
          required: false
          schema:
            type: integer
            format: int32
            default: 50
        - in: query
          name: excludedTasks
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - in: query
          name: excludedProjects
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - in: query
          name: userId
          required: false
          schema:
            type: string
        - in: query
          name: favorites
          required: false
          schema:
            type: boolean
            default: false
        - in: query
          name: archived
          required: false
          schema:
            type: boolean
            default: false
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectFullDto'
          description: OK
      tags:
        - project-picker-http-adapter
  /workspaces/{workspaceId}/project-picker/projects/favorites:
    get:
      operationId: getProjectFavorites
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: query
          name: search
          required: false
          schema:
            type: string
            default: ""
        - in: query
          name: excludedTasks
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - in: query
          name: userId
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectFullDto'
          description: OK
      tags:
        - project-picker-http-adapter
  /workspaces/{workspaceId}/project-picker/projects/{projectId}/tasks:
    get:
      operationId: getTasks_2_1
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: query
          name: search
          required: false
          schema:
            type: string
            default: ""
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
            default: 1
        - in: query
          name: page-size
          required: false
          schema:
            type: integer
            format: int32
            default: 50
        - in: query
          name: excludedTasks
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - in: query
          name: userId
          required: false
          schema:
            type: string
        - in: query
          name: taskFilterEnabled
          required: false
          schema:
            type: boolean
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaskFullDto'
          description: OK
      tags:
        - project-picker-http-adapter
  /workspaces/{workspaceId}/project-status:
    put:
      operationId: recalculateProjectStatus_1
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
      tags:
        - Workspace
  /workspaces/{workspaceId}/project-task:
    post:
      operationId: getProjectAndTask
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectTaskRequest'
        required: true
      responses:
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TaskWithProjectDto'
          description: Created
      tags:
        - project-picker-http-adapter
  /workspaces/{workspaceId}/projects:
    delete:
      operationId: deleteMany_2
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectIdsRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectDtoImpl'
          description: OK
      tags:
        - Project
    get:
      operationId: getProjects_2
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: query
          name: name
          required: false
          schema:
            type: string
        - in: query
          name: strict-name-search
          required: false
          schema:
            type: boolean
        - in: query
          name: archived
          required: false
          schema:
            type: boolean
        - in: query
          name: billable
          required: false
          schema:
            type: boolean
        - in: query
          name: clients
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - in: query
          name: contains-client
          required: false
          schema:
            type: boolean
            default: true
        - in: query
          name: client-status
          required: false
          schema:
            type: string
            default: ALL
        - in: query
          name: users
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - in: query
          name: contains-user
          required: false
          schema:
            type: boolean
            default: true
        - in: query
          name: user-status
          required: false
          schema:
            type: string
        - in: query
          name: is-template
          required: false
          schema:
            type: boolean
        - in: query
          name: sort-column
          required: false
          schema:
            type: string
            default: NAME
        - in: query
          name: sort-order
          required: false
          schema:
            type: string
            default: ASCENDING
        - in: query
          name: hydrated
          required: false
          schema:
            type: boolean
            default: false
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
            default: 1
        - in: query
          name: page-size
          required: false
          schema:
            type: integer
            format: int32
            default: 50
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageProjectDto'
          description: OK
      summary: Get all projects on workspace with count
      tags:
        - Project
    patch:
      operationId: updateMany_1
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: query
          name: tasks-status
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchProjectRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BulkProjectEditDto'
          description: OK
      tags:
        - Project
    post:
      operationId: create_12
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProjectRequest'
        required: true
      responses:
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProjectFullDto'
          description: Created
      tags:
        - Project
  /workspaces/{workspaceId}/projects/count:
    get:
      operationId: getFilteredProjectsCount
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: query
          name: name
          required: false
          schema:
            type: string
        - in: query
          name: archived
          required: false
          schema:
            type: boolean
        - in: query
          name: billable
          required: false
          schema:
            type: boolean
        - in: query
          name: clients
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - in: query
          name: contains-client
          required: false
          schema:
            type: boolean
            default: true
        - in: query
          name: client-status
          required: false
          schema:
            type: string
            default: ALL
        - in: query
          name: users
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - in: query
          name: contains-user
          required: false
          schema:
            type: boolean
            default: true
        - in: query
          name: user-status
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: integer
                format: int32
          description: OK
      tags:
        - Project
  /workspaces/{workspaceId}/projects/filtered:
    post:
      operationId: getFiltered
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectFilterRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProjectFilteredAndCountDto'
          description: OK
      tags:
        - Project
  /workspaces/{workspaceId}/projects/from-template:
    post:
      operationId: createFromTemplate
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreteFromTemplateRequest'
        required: true
      responses:
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProjectFullDto'
          description: Created
      tags:
        - Project
  /workspaces/{workspaceId}/projects/ids:
    post:
      operationId: getProject
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectIdsRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectDtoImpl'
          description: OK
      tags:
        - Project
  /workspaces/{workspaceId}/projects/last-used:
    get:
      deprecated: true
      operationId: getLastUsedProject
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectDtoImpl'
          description: OK
      tags:
        - Project
  /workspaces/{workspaceId}/projects/lastUsed:
    get:
      operationId: lastUsedProject_1
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: query
          name: type
          required: false
          schema:
            type: string
            default: PROJECT
      responses:
        "200":
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ProjectTaskTupleFullDto'
                  - $ref: '#/components/schemas/ProjectDtoImpl'
          description: OK
      tags:
        - Project
  /workspaces/{workspaceId}/projects/list:
    get:
      operationId: getProjectsList
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: query
          name: name
          required: false
          schema:
            type: string
        - in: query
          name: strict-name-search
          required: false
          schema:
            type: boolean
        - in: query
          name: archived
          required: false
          schema:
            type: boolean
        - in: query
          name: billable
          required: false
          schema:
            type: boolean
        - in: query
          name: clients
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - in: query
          name: contains-client
          required: false
          schema:
            type: boolean
            default: true
        - in: query
          name: client-status
          required: false
          schema:
            type: string
            default: ALL
        - in: query
          name: users
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - in: query
          name: contains-user
          required: false
          schema:
            type: boolean
            default: true
        - in: query
          name: user-status
          required: false
          schema:
            type: string
        - in: query
          name: is-template
          required: false
          schema:
            type: boolean
        - in: query
          name: sort-column
          required: false
          schema:
            type: string
            default: NAME
        - in: query
          name: sort-order
          required: false
          schema:
            type: string
            default: ASCENDING
        - in: query
          name: hydrated
          required: false
          schema:
            type: boolean
            default: false
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
            default: 1
        - in: query
          name: page-size
          required: false
          schema:
            type: integer
            format: int32
            default: 50
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectDto'
          description: OK
      tags:
        - Project
  /workspaces/{workspaceId}/projects/manager:
    get:
      operationId: hasManagerRole_1
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: boolean
          description: OK
      tags:
        - Project
  /workspaces/{workspaceId}/projects/report-filters:
    post:
      operationId: getProjectsForReportFilter
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectReportFilterRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectDto'
          description: OK
      tags:
        - Project
  /workspaces/{workspaceId}/projects/report-filters/ids:
    post:
      operationId: getProjectIdsForReportFilter
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectReportFilterRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
          description: OK
      tags:
        - Project
  /workspaces/{workspaceId}/projects/taskIds:
    post:
      operationId: getTasksByIds
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskIdsRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaskDtoImpl'
          description: OK
      tags:
        - Task
  /workspaces/{workspaceId}/projects/tasks:
    post:
      operationId: getAllTasks
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaskDtoImpl'
          description: OK
      tags:
        - Task
  /workspaces/{workspaceId}/projects/tasks-pagination:
    post:
      operationId: getTasks
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: query
          name: page
          required: false
          schema:
            type: string
            default: "1"
        - in: query
          name: pageSize
          required: false
          schema:
            type: string
            default: "100"
        - in: query
          name: sortOrder
          required: false
          schema:
            type: string
            default: ASCENDING
        - in: query
          name: sortColumn
          required: false
          schema:
            type: string
            default: name
        - in: query
          name: search
          required: false
          schema:
            type: string
            default: ""
      requestBody:
        content:
          application/json:
            schema:
              uniqueItems: true
              type: array
              items:
                type: string
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaskDtoImpl'
          description: OK
      tags:
        - Task
  /workspaces/{workspaceId}/projects/tasks/report-filters:
    post:
      operationId: getTasksForReportFilter
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskReportFilterRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TasksGroupedByProjectIdDto'
          description: OK
      tags:
        - Task
  /workspaces/{workspaceId}/projects/tasks/report-filters/ids:
    post:
      operationId: getTaskIdsForReportFilter
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskReportFilterRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
          description: OK
      tags:
        - Task
  /workspaces/{workspaceId}/projects/time-off-policies-holidays:
    post:
      operationId: getTimeOffPoliciesAndHolidaysWithProjects
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectIdsRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TimeOffPolicyHolidayForProjects'
          description: OK
      tags:
        - Project
  /workspaces/{workspaceId}/projects/users/{userId}/last-used:
    get:
      deprecated: true
      operationId: getLastUsedOfUser
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProjectDtoImpl'
          description: OK
      tags:
        - Project
  /workspaces/{workspaceId}/projects/users/{userId}/permissions:
    post:
      operationId: getPermissionsToUserForProjects
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: userId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetProjectsAuthorizationsForUserRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuthorizationDto'
          description: OK
      tags:
        - Project
  /workspaces/{workspaceId}/projects/{projectId}:
    delete:
      operationId: delete_13
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: projectId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProjectDtoImpl'
          description: OK
      tags:
        - Project
    get:
      operationId: getProject_1
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: query
          name: hydrated
          required: false
          schema:
            type: boolean
            default: false
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProjectDto'
          description: OK
      tags:
        - Project
    patch:
      operationId: update_14
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: query
          name: tasks-status
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectPatchRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProjectDtoImpl'
          description: OK
      tags:
        - Project
    put:
      operationId: update_6
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: query
          name: tasks-status
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProjectRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProjectDtoImpl'
          description: OK
      tags:
        - Project
  /workspaces/{workspaceId}/projects/{projectId}/cost-rate:
    put:
      operationId: setCostRate_1
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CostRateRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProjectDtoImpl'
          description: OK
      tags:
        - Project
  /workspaces/{workspaceId}/projects/{projectId}/estimate:
    patch:
      operationId: updateEstimate
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: projectId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectEstimateRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProjectDtoImpl'
          description: OK
      tags:
        - Project
  /workspaces/{workspaceId}/projects/{projectId}/hourly-rate:
    put:
      operationId: setHourlyRate_1
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HourlyRateRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProjectDtoImpl'
          description: OK
      tags:
        - Project
  /workspaces/{workspaceId}/projects/{projectId}/manager:
    get:
      operationId: hasManagerRole
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: projectId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: boolean
          description: OK
      tags:
        - Project
  /workspaces/{workspaceId}/projects/{projectId}/permissions:
    get:
      operationId: getAuthsForProject
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuthorizationDto'
          description: OK
      tags:
        - Project
  /workspaces/{workspaceId}/projects/{projectId}/project-status:
    put:
      operationId: recalculateProjectStatus
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: projectId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
      tags:
        - Project
  /workspaces/{workspaceId}/projects/{projectId}/tasks:
    get:
      deprecated: true
      operationId: getTasks_1
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaskDtoImpl'
          description: OK
      tags:
        - Task
    post:
      operationId: create_13
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: query
          name: contains-assignee
          required: false
          schema:
            type: boolean
            default: true
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskRequest'
        required: true
      responses:
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TaskDtoImpl'
          description: Created
      tags:
        - Task
  /workspaces/{workspaceId}/projects/{projectId}/tasks/assigned:
    get:
      operationId: getTasksAssignedToUser
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaskDtoImpl'
          description: OK
      tags:
        - Task
  /workspaces/{workspaceId}/projects/{projectId}/tasks/time-off-policies-holidays:
    post:
      operationId: getTimeOffPoliciesAndHolidaysWithTasks
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: projectId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskIdsRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TimeOffPolicyHolidayForTasks'
          description: OK
      tags:
        - Task
  /workspaces/{workspaceId}/projects/{projectId}/tasks/{id}:
    put:
      operationId: update_7
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: query
          name: contains-assignee
          required: false
          schema:
            type: boolean
            default: true
        - in: query
          name: membership-status
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTaskRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TaskDtoImpl'
          description: OK
      tags:
        - Task
  /workspaces/{workspaceId}/projects/{projectId}/tasks/{id}/cost-rate:
    put:
      operationId: setCostRate
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CostRateRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TaskDtoImpl'
          description: OK
      tags:
        - Task
  /workspaces/{workspaceId}/projects/{projectId}/tasks/{id}/hourly-rate:
    put:
      operationId: setHourlyRate
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HourlyRateRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TaskDtoImpl'
          description: OK
      tags:
        - Task
  /workspaces/{workspaceId}/projects/{projectId}/tasks/{taskId}:
    delete:
      operationId: delete_14
      parameters:
        - in: path
          name: taskId
          required: true
          schema:
            type: string
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: projectId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TaskDtoImpl'
          description: OK
      tags:
        - Task
  /workspaces/{workspaceId}/projects/{projectId}/tasks/{taskId}/assigned:
    get:
      operationId: getTaskAssignedToUser
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: taskId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TaskDtoImpl'
          description: OK
      tags:
        - Task
  /workspaces/{workspaceId}/projects/{projectId}/team:
    post:
      operationId: addUsers_1
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: projectId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddUsersToProjectRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProjectDtoImpl'
          description: OK
      tags:
        - Project
  /workspaces/{workspaceId}/projects/{projectId}/tracked:
    get:
      operationId: getStatus
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: projectId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProjectStatus'
          description: OK
      tags:
        - Project
  /workspaces/{workspaceId}/projects/{projectId}/userGroups/{usergroupId}/membership:
    delete:
      operationId: removeUserGroupMembership
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: usergroupId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProjectDtoImpl'
          description: OK
      tags:
        - Project
  /workspaces/{workspaceId}/projects/{projectId}/users:
    get:
      operationId: getUsers_4
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: query
          name: memberships
          required: false
          schema:
            type: string
            default: NONE
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDto'
          description: OK
      tags:
        - Project
  /workspaces/{workspaceId}/projects/{projectId}/users/{userId}/cost-rate:
    post:
      operationId: addUsersCostRate_1
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: userId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CostRateRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProjectDtoImpl'
          description: OK
      tags:
        - Project
  /workspaces/{workspaceId}/projects/{projectId}/users/{userId}/hourly-rate:
    post:
      operationId: addUsersHourlyRate_1
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: userId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HourlyRateRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProjectDtoImpl'
          description: OK
      tags:
        - Project
  /workspaces/{workspaceId}/projects/{projectId}/users/{userId}/membership:
    delete:
      operationId: removeUserMembership
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProjectDtoImpl'
          description: OK
      tags:
        - Project
  /workspaces/{workspaceId}/projects/{projectId}/users/{userId}/permissions:
    delete:
      operationId: removePermissionsToUser
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: userId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddAndRemoveProjectPermissionsRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuthorizationDto'
          description: OK
      tags:
        - Project
    get:
      operationId: getPermissionsToUser_1
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuthorizationDto'
          description: OK
      tags:
        - Project
    post:
      operationId: addPermissionsToUser
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: userId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddAndRemoveProjectPermissionsRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuthorizationDto'
          description: OK
      tags:
        - Project
  /workspaces/{workspaceId}/pumble-integration:
    delete:
      operationId: disconnect
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
      tags:
        - pumble-integration-http-adapter
    post:
      operationId: connect
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PumbleIntegrationRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PumbleInitialConnectionDto'
          description: OK
      tags:
        - pumble-integration-http-adapter
  /workspaces/{workspaceId}/pumble-integration/connected:
    get:
      operationId: connect_1
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PumbleConnectedDto'
          description: OK
      tags:
        - pumble-integration-http-adapter
  /workspaces/{workspaceId}/quickbooks-sync/clients:
    post:
      operationId: syncClients
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyncClientsRequest'
        required: true
      responses:
        "201":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClientDto'
          description: Created
      tags:
        - quickbooks-sync-http-adapter
  /workspaces/{workspaceId}/quickbooks-sync/projects:
    post:
      operationId: syncProjects
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyncProjectsRequest'
        required: true
      responses:
        "201":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectDtoImpl'
          description: Created
      tags:
        - quickbooks-sync-http-adapter
    put:
      operationId: updateProjects
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProjectsRequest'
        required: true
      responses:
        "200":
          description: OK
      tags:
        - quickbooks-sync-http-adapter
  /workspaces/{workspaceId}/regions:
    get:
      operationId: getAllRegionsForUserAccount
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RegionDto'
          description: OK
      tags:
        - Workspace
  /workspaces/{workspaceId}/reminders:
    get:
      operationId: listOfWorkspace
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReminderDto'
          description: OK
      tags:
        - reminder-http-adapter
    post:
      operationId: create_11
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateReminderRequest'
        required: true
      responses:
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ReminderDto'
          description: Created
      tags:
        - reminder-http-adapter
  /workspaces/{workspaceId}/reminders/targets:
    get:
      operationId: ofWorkspaceIdAndUserId
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: query
          name: hydrated
          required: false
          schema:
            type: boolean
            default: false
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReminderDto'
          description: OK
      tags:
        - reminder-http-adapter
  /workspaces/{workspaceId}/reminders/{reminderId}:
    delete:
      operationId: delete_12
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: reminderId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
      tags:
        - reminder-http-adapter
    put:
      operationId: update_5
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: reminderId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateReminderRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ReminderDto'
          description: OK
      tags:
        - reminder-http-adapter
  /workspaces/{workspaceId}/reports/dashboard-info:
    post:
      operationId: getDashboardInfo
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetMainReportRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MainReportDto'
          description: OK
      tags:
        - dashboard-http-adapter
  /workspaces/{workspaceId}/reports/mostTracked:
    get:
      operationId: getMyMostTracked
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: query
          name: count
          required: false
          schema:
            type: string
            default: TOP_10
        - in: query
          name: start
          required: false
          schema:
            type: string
            default: ""
        - in: query
          name: end
          required: false
          schema:
            type: string
            default: ""
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MostTrackedDto'
          description: OK
      tags:
        - dashboard-http-adapter
  /workspaces/{workspaceId}/reports/team-activities:
    get:
      operationId: getTeamActivities
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: query
          name: start
          required: false
          schema:
            type: string
            default: ""
        - in: query
          name: end
          required: false
          schema:
            type: string
            default: ""
        - in: query
          name: type
          required: false
          schema:
            type: string
            default: BILLABILITY
        - in: query
          name: sort-order
          required: false
          schema:
            type: string
            default: DESCENDING
        - in: query
          name: sort-column
          required: false
          schema:
            type: string
            default: LATEST_ACTIVITY
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
            default: 1
        - in: query
          name: page-size
          required: false
          schema:
            type: integer
            format: int32
            default: 50
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TeamActivityDto'
          description: OK
      tags:
        - dashboard-http-adapter
  /workspaces/{workspaceId}/scheduling/assignments/amount-preview:
    get:
      operationId: getAmountPreview
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: query
          name: userId
          required: true
          schema:
            type: string
        - in: query
          name: projectId
          required: true
          schema:
            type: string
        - in: query
          name: taskId
          required: true
          schema:
            type: string
        - in: query
          name: totalHours
          required: true
          schema:
            type: number
            format: double
        - in: query
          name: billable
          required: true
          schema:
            type: boolean
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BillableAndCostAmountDto'
          description: OK
      tags:
        - Scheduling
  /workspaces/{workspaceId}/scheduling/assignments/draft-filter/count:
    post:
      operationId: getDraftAssignmentsCount
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetDraftCountRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DraftAssignmentsCountDto'
          description: OK
      tags:
        - Scheduling
  /workspaces/{workspaceId}/scheduling/assignments/projects/totals:
    get:
      deprecated: true
      operationId: getProjectTotals
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: query
          name: search
          required: false
          schema:
            type: string
            default: ""
        - in: query
          name: start
          required: true
          schema:
            type: string
        - in: query
          name: end
          required: true
          schema:
            type: string
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
            default: 1
        - in: query
          name: page-size
          required: false
          schema:
            type: integer
            format: int32
            default: 50
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SchedulingProjectsTotalsWithoutBillableDto'
          description: OK
      tags:
        - Scheduling
    post:
      operationId: getFilteredProjectTotals
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectTotalsRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SchedulingProjectsTotalsWithoutBillableDto'
          description: OK
      tags:
        - Scheduling
  /workspaces/{workspaceId}/scheduling/assignments/projects/totals/{projectId}:
    get:
      operationId: getProjectTotalsForSingleProject
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: query
          name: start
          required: true
          schema:
            type: string
        - in: query
          name: end
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SchedulingProjectsTotalsWithoutBillableDto'
          description: OK
      tags:
        - Scheduling
  /workspaces/{workspaceId}/scheduling/assignments/projects/{projectId}/users/{userId}:
    get:
      operationId: getProjectsForUser
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: query
          name: start
          required: true
          schema:
            type: string
        - in: query
          name: end
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SchedulingProjectsDto'
          description: OK
      tags:
        - Scheduling
  /workspaces/{workspaceId}/scheduling/assignments/publish:
    put:
      operationId: publishAssignments
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublishAssignmentsRequest'
        required: true
      responses:
        "200":
          description: OK
      tags:
        - Scheduling
  /workspaces/{workspaceId}/scheduling/assignments/recurring:
    post:
      operationId: createRecurring
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignmentCreateRequest'
        required: true
      responses:
        "201":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssignmentDto'
          description: Created
      tags:
        - Scheduling
  /workspaces/{workspaceId}/scheduling/assignments/recurring/{assignmentId}:
    delete:
      operationId: delete_11
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: assignmentId
          required: true
          schema:
            type: string
        - in: query
          name: seriesUpdateOption
          required: false
          schema:
            type: string
            default: THIS_ONE
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssignmentDto'
          description: OK
      tags:
        - Scheduling
    patch:
      operationId: editRecurring
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: assignmentId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignmentUpdateRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssignmentDto'
          description: OK
      tags:
        - Scheduling
  /workspaces/{workspaceId}/scheduling/assignments/recurring/{assignmentId}/period:
    patch:
      operationId: editPeriodForRecurring
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: assignmentId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignmentPeriodRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssignmentDto'
          description: OK
      tags:
        - Scheduling
  /workspaces/{workspaceId}/scheduling/assignments/series/{assignmentId}:
    put:
      operationId: editRecurringPeriod
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: assignmentId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecurringAssignmentRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssignmentDto'
          description: OK
      tags:
        - Scheduling
  /workspaces/{workspaceId}/scheduling/assignments/user-filter/totals:
    post:
      operationId: getUserTotals
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetUserTotalsRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SchedulingUsersTotalsWithoutBillableDto'
          description: OK
      tags:
        - Scheduling
  /workspaces/{workspaceId}/scheduling/assignments/user/{userId}:
    get:
      deprecated: true
      operationId: getAssignmentsForUser
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: query
          name: start
          required: true
          schema:
            type: string
        - in: query
          name: end
          required: true
          schema:
            type: string
        - in: query
          name: published
          required: true
          schema:
            type: boolean
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssignmentHydratedDto'
          description: OK
      tags:
        - Scheduling
    post:
      operationId: getFilteredAssignmentsForUser
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: userId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAssignmentsRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssignmentHydratedDto'
          description: OK
      tags:
        - Scheduling
  /workspaces/{workspaceId}/scheduling/assignments/users/{projectId}:
    get:
      operationId: getUsers_3
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: query
          name: exclude
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          required: true
          schema:
            type: string
        - in: query
          name: end
          required: true
          schema:
            type: string
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
            default: 1
        - in: query
          name: page-size
          required: false
          schema:
            type: integer
            format: int32
            default: 50
        - in: query
          name: statusFilter
          required: false
          schema:
            type: string
            enum:
              - PUBLISHED
              - UNPUBLISHED
              - ALL
            default: ALL
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SchedulingUsersBaseDto'
          description: OK
      tags:
        - Scheduling
  /workspaces/{workspaceId}/scheduling/assignments/users/{userId}/projects:
    get:
      operationId: getProjects_1
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: query
          name: exclude
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          required: true
          schema:
            type: string
        - in: query
          name: end
          required: true
          schema:
            type: string
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
            default: 1
        - in: query
          name: page-size
          required: false
          schema:
            type: integer
            format: int32
            default: 50
        - in: query
          name: statusFilter
          required: false
          schema:
            type: string
            enum:
              - PUBLISHED
              - UNPUBLISHED
              - ALL
            default: ALL
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SchedulingProjectsBaseDto'
          description: OK
      tags:
        - Scheduling
  /workspaces/{workspaceId}/scheduling/assignments/users/{userId}/remind-to-publish:
    post:
      operationId: remindToPublish
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: query
          name: startDate
          required: true
          schema:
            type: string
        - in: query
          name: endDate
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
      tags:
        - Scheduling
  /workspaces/{workspaceId}/scheduling/assignments/users/{userId}/totals:
    get:
      operationId: getUserTotalsForSingleUser
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
            default: 1
        - in: query
          name: page-size
          required: false
          schema:
            type: integer
            format: int32
            default: 50
        - in: query
          name: start
          required: true
          schema:
            type: string
        - in: query
          name: end
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SchedulingUsersBaseDto'
          description: OK
      tags:
        - Scheduling
  /workspaces/{workspaceId}/scheduling/assignments/{assignmentId}:
    get:
      operationId: get_3
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: assignmentId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AssignmentDto'
          description: OK
      tags:
        - Scheduling
  /workspaces/{workspaceId}/scheduling/assignments/{assignmentId}/copy:
    post:
      operationId: copyAssignment
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: assignmentId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CopyAssignmentRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssignmentDto'
          description: OK
      tags:
        - Scheduling
  /workspaces/{workspaceId}/scheduling/assignments/{assignmentId}/split:
    post:
      operationId: splitAssignment
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: assignmentId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SplitAssignmentRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssignmentDto'
          description: OK
      tags:
        - Scheduling
  /workspaces/{workspaceId}/scheduling/assignments/{projectId}/shift:
    patch:
      operationId: shiftSchedule
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: projectId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShiftScheduleRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssignmentDto'
          description: OK
      tags:
        - Scheduling
  /workspaces/{workspaceId}/scheduling/excluding/projects/{projectId}:
    delete:
      operationId: hideProject
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: projectId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
      tags:
        - hidden-scheduling-entities-http-adapter
    put:
      operationId: showProject
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: projectId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
      tags:
        - hidden-scheduling-entities-http-adapter
  /workspaces/{workspaceId}/scheduling/excluding/users/{userId}:
    delete:
      operationId: hideUser
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
      tags:
        - hidden-scheduling-entities-http-adapter
    put:
      operationId: showUser
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
      tags:
        - hidden-scheduling-entities-http-adapter
  /workspaces/{workspaceId}/scheduling/milestones:
    post:
      operationId: create_10
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MilestoneCreateRequest'
        required: true
      responses:
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MilestoneDto'
          description: Created
      tags:
        - milestone-http-adapter
  /workspaces/{workspaceId}/scheduling/milestones/{milestoneId}:
    delete:
      operationId: delete_10
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: milestoneId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MilestoneDto'
          description: OK
      tags:
        - milestone-http-adapter
    get:
      operationId: get_2
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: milestoneId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MilestoneDto'
          description: OK
      tags:
        - milestone-http-adapter
    patch:
      operationId: edit_1
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: milestoneId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MilestoneUpdateRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MilestoneDto'
          description: OK
      tags:
        - milestone-http-adapter
  /workspaces/{workspaceId}/scheduling/milestones/{milestoneId}/date:
    patch:
      operationId: editDate
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: milestoneId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MilestoneDateRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MilestoneDto'
          description: OK
      tags:
        - milestone-http-adapter
  /workspaces/{workspaceId}/scheduling/projects:
    get:
      operationId: getProjects
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: query
          name: userId
          required: true
          schema:
            type: string
        - in: query
          name: search
          required: false
          schema:
            type: string
            default: ""
        - in: query
          name: includeHidden
          required: false
          schema:
            type: boolean
            default: false
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
            default: 1
        - in: query
          name: page-size
          required: false
          schema:
            type: integer
            format: int32
            default: 50
        - in: query
          name: start
          required: true
          schema:
            type: string
        - in: query
          name: end
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectFullDto'
          description: OK
      tags:
        - unassigned-entities-http-adapter
  /workspaces/{workspaceId}/scheduling/users:
    get:
      operationId: getUsers_2
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: query
          name: projectId
          required: true
          schema:
            type: string
        - in: query
          name: taskId
          required: false
          schema:
            type: string
        - in: query
          name: search
          required: false
          schema:
            type: string
            default: ""
        - in: query
          name: includeHidden
          required: false
          schema:
            type: boolean
            default: false
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
            default: 1
        - in: query
          name: page-size
          required: false
          schema:
            type: integer
            format: int32
            default: 50
        - in: query
          name: start
          required: true
          schema:
            type: string
        - in: query
          name: end
          required: true
          schema:
            type: string
        - in: query
          name: statuses
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ReportFilterUsersWithCountDto'
          description: OK
      tags:
        - unassigned-entities-http-adapter
  /workspaces/{workspaceId}/scheduling/users/project/{projectId}:
    get:
      operationId: getUsersAssignedToProject
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: query
          name: taskId
          required: true
          schema:
            type: string
        - in: query
          name: search
          required: false
          schema:
            type: string
            default: ""
        - in: query
          name: includeHidden
          required: false
          schema:
            type: boolean
            default: false
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
            default: 1
        - in: query
          name: page-size
          required: false
          schema:
            type: integer
            format: int32
            default: 50
        - in: query
          name: start
          required: true
          schema:
            type: string
        - in: query
          name: end
          required: true
          schema:
            type: string
        - in: query
          name: statuses
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: memberships
          required: false
          schema:
            type: string
            default: NONE
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDto'
          description: OK
      tags:
        - unassigned-entities-http-adapter
  /workspaces/{workspaceId}/sidebar/users/{userId}:
    get:
      operationId: getSidebarConfig
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SidebarResponseDto'
          description: OK
      tags:
        - sidebar-adapter
    put:
      operationId: updateSidebar
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: userId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSidebarRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SidebarResponseDto'
          description: OK
      tags:
        - sidebar-adapter
  /workspaces/{workspaceId}/specific-member/users/status:
    post:
      operationId: filterUsersByStatus
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: query
          name: status
          required: false
          schema:
            type: string
            default: ALL
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/TeamMemberRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PtoTeamMemberDto'
          description: OK
      tags:
        - team-adapter
  /workspaces/{workspaceId}/stopwatch:
    delete:
      operationId: delete_9
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiscardStopwatchRequest'
        required: true
      responses:
        "200":
          description: OK
      tags:
        - stopwatch-http-adapter
    patch:
      operationId: stop
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopStopwatchRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TimeEntryFullDto'
          description: OK
      tags:
        - stopwatch-http-adapter
    post:
      operationId: start
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: query
          name: timeEntryId
          required: false
          schema:
            type: string
        - in: query
          name: assignmentId
          required: false
          schema:
            type: string
        - in: header
          name: App-Name
          required: false
          schema:
            type: string
        - in: header
          name: Request-Id
          required: false
          schema:
            type: string
        - in: header
          name: Signature
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartStopwatchRequest'
        required: true
      responses:
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TimeEntryFullDto'
          description: Created
      tags:
        - stopwatch-http-adapter
  /workspaces/{workspaceId}/tags:
    delete:
      operationId: deleteMany_1
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagIdsRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TagDto'
          description: OK
      tags:
        - Tag
    get:
      operationId: getTags
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: query
          name: name
          required: false
          schema:
            type: string
        - in: query
          name: strict-name-search
          required: false
          schema:
            type: boolean
        - in: query
          name: excludedIds
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - in: query
          name: sort-column
          required: false
          schema:
            type: string
            default: NAME
        - in: query
          name: sort-order
          required: false
          schema:
            type: string
            default: ASCENDING
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
            default: 1
        - in: query
          name: page-size
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - in: query
          name: archived
          required: false
          schema:
            type: boolean
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TagDto'
          description: OK
      tags:
        - Tag
    patch:
      operationId: updateMany
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateManyTagsRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TagDto'
          description: OK
      tags:
        - Tag
    post:
      operationId: create_9
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagRequest'
        required: true
      responses:
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TagDto'
          description: Created
      tags:
        - Tag
  /workspaces/{workspaceId}/tags/connected-to-approved-entries:
    post:
      operationId: connectedToApprovedEntries
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagIdsRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: boolean
          description: OK
      tags:
        - Tag
  /workspaces/{workspaceId}/tags/ids:
    post:
      operationId: getTagsOfIds
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagIdsRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TagDto'
          description: OK
      tags:
        - Tag
  /workspaces/{workspaceId}/tags/report-filters/ids:
    get:
      operationId: getTagIdsByNameAndStatus
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: query
          name: name
          required: false
          schema:
            type: string
        - in: query
          name: status
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
          description: OK
      tags:
        - Tag
  /workspaces/{workspaceId}/tags/{tagId}:
    delete:
      operationId: delete_8
      parameters:
        - in: path
          name: tagId
          required: true
          schema:
            type: string
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TagDto'
          description: OK
      tags:
        - Tag
    put:
      operationId: update_4
      parameters:
        - in: path
          name: tagId
          required: true
          schema:
            type: string
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TagDto'
          description: OK
      tags:
        - Tag
  /workspaces/{workspaceId}/templates:
    get:
      operationId: getTemplates
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: query
          name: name
          required: false
          schema:
            type: string
        - in: query
          name: remove-inactive-pairs
          required: false
          schema:
            type: boolean
            default: true
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
            default: 1
        - in: query
          name: page-size
          required: false
          schema:
            type: integer
            format: int32
            default: 50
        - in: query
          name: week-start
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TemplateFullWithEntitiesFullDto'
          description: OK
      tags:
        - timesheet-template-http-adapter
    post:
      operationId: create_8
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemplateRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TemplateDtoImpl'
          description: OK
      tags:
        - timesheet-template-http-adapter
  /workspaces/{workspaceId}/templates/{templateId}:
    delete:
      operationId: delete_7
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: templateId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TemplateDtoImpl'
          description: OK
      tags:
        - timesheet-template-http-adapter
    get:
      operationId: getTemplate
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: templateId
          required: true
          schema:
            type: string
        - in: query
          name: remove-inactive-pairs
          required: false
          schema:
            type: boolean
            default: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TemplateDto'
          description: OK
      tags:
        - timesheet-template-http-adapter
    patch:
      operationId: update_13
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: templateId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemplatePatchRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TemplateDtoImpl'
          description: OK
      tags:
        - timesheet-template-http-adapter
  /workspaces/{workspaceId}/templates/{templateId}/activate:
    post:
      operationId: activate
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: templateId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivateTemplateRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CopiedEntriesDto'
          description: OK
      tags:
        - timesheet-template-http-adapter
  /workspaces/{workspaceId}/templates/{templateId}/deactivate:
    post:
      operationId: deactivate
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: templateId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivateTemplateRequest'
        required: true
      responses:
        "200":
          description: OK
      tags:
        - timesheet-template-http-adapter
  /workspaces/{workspaceId}/time-entries/users/{userId}:
    post:
      operationId: copyTimeEntries
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: userId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CopyEntriesRequest'
        required: true
      responses:
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CopiedEntriesDto'
          description: Created
      tags:
        - copy-time-entry-http-adapter
  /workspaces/{workspaceId}/time-entries/{timeEntryId}/continue:
    post:
      operationId: continueTimeEntry
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: timeEntryId
          required: true
          schema:
            type: string
      responses:
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TimeEntryFullDto'
          description: Created
      tags:
        - Time entry
  /workspaces/{workspaceId}/time-off/admin/users:
    get:
      operationId: getTeamMembersOfAdmin
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
            default: 1
        - in: query
          name: page-size
          required: false
          schema:
            maximum: 200
            minimum: 1
            type: integer
            format: int32
            default: 50
        - in: query
          name: search
          required: false
          schema:
            type: string
            default: ""
        - in: query
          name: status
          required: false
          schema:
            type: string
            default: ALL
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PtoTeamMembersAndCountDto'
          description: OK
      tags:
        - team-adapter
  /workspaces/{workspaceId}/time-off/balance/policy/{policyId}:
    get:
      operationId: getBalancesForPolicy
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: policyId
          required: true
          schema:
            type: string
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
            default: 1
        - in: query
          name: page-size
          required: false
          schema:
            maximum: 200
            type: integer
            format: int32
            default: 50
        - in: query
          name: sort
          required: false
          schema:
            type: string
            default: USER
        - in: query
          name: sort-order
          required: false
          schema:
            type: string
            default: ASCENDING
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BalancesWithCount'
          description: OK
      tags:
        - Balance
    patch:
      operationId: updateBalance
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: policyId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeBalanceRequest'
        required: true
      responses:
        "204":
          description: No Content
      tags:
        - Balance
  /workspaces/{workspaceId}/time-off/balance/user/{userId}:
    get:
      operationId: getBalancesForUser
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
            default: 1
        - in: query
          name: page-size
          required: false
          schema:
            maximum: 200
            type: integer
            format: int32
            default: 50
        - in: query
          name: sort
          required: false
          schema:
            type: string
            default: POLICY
        - in: query
          name: sort-order
          required: false
          schema:
            type: string
            default: ASCENDING
        - in: query
          name: with-archived
          required: false
          schema:
            type: boolean
            default: false
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BalancesWithCount'
          description: OK
      tags:
        - Balance
  /workspaces/{workspaceId}/time-off/manager/users:
    get:
      operationId: getTeamMembersOfManager
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
            default: 1
        - in: query
          name: page-size
          required: false
          schema:
            maximum: 200
            minimum: 1
            type: integer
            format: int32
            default: 50
        - in: query
          name: search
          required: false
          schema:
            type: string
            default: ""
        - in: query
          name: status
          required: false
          schema:
            type: string
            default: ALL
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PtoTeamMembersAndCountDto'
          description: OK
      tags:
        - team-adapter
  /workspaces/{workspaceId}/time-off/policies:
    get:
      operationId: findPoliciesForWorkspace
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
            default: 1
        - in: query
          name: page-size
          required: false
          schema:
            type: integer
            format: int32
            default: 50
        - in: query
          name: name
          required: false
          schema:
            type: string
        - in: query
          name: status
          required: false
          schema:
            type: string
            default: ACTIVE
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PolicyDto'
          description: OK
      tags:
        - Policy
    post:
      operationId: createPolicy
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePolicyRequest'
        required: true
      responses:
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PolicyDto'
          description: Created
      tags:
        - Policy
  /workspaces/{workspaceId}/time-off/policies/assignments:
    get:
      operationId: getPolicyAssignmentForCurrentUser
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PolicyAssignmentFullDto'
          description: OK
      tags:
        - policy-assignment-http-adapter
  /workspaces/{workspaceId}/time-off/policies/assignments/team:
    get:
      operationId: getTeamAssignmentsDistribution
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TeamPolicyAssignmentsDistribution'
          description: OK
      tags:
        - policy-assignment-http-adapter
  /workspaces/{workspaceId}/time-off/policies/assignments/users/{userId}:
    get:
      operationId: getPolicyAssignmentsForUser
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PolicyAssignmentFullDto'
          description: OK
      tags:
        - policy-assignment-http-adapter
  /workspaces/{workspaceId}/time-off/policies/users/{userId}:
    get:
      operationId: findPoliciesForUser
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
            default: 1
        - in: query
          name: page-size
          required: false
          schema:
            type: integer
            format: int32
            default: 50
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PolicyDto'
          description: OK
      tags:
        - Policy
  /workspaces/{workspaceId}/time-off/policies/{id}:
    delete:
      operationId: deletePolicy
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
      tags:
        - Policy
    put:
      operationId: updatePolicy
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePolicyRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PolicyDto'
          description: OK
      tags:
        - Policy
  /workspaces/{workspaceId}/time-off/policies/{id}/archive:
    patch:
      operationId: archive
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PolicyDto'
          description: OK
      tags:
        - Policy
  /workspaces/{workspaceId}/time-off/policies/{id}/restore:
    patch:
      operationId: restore
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PolicyDto'
          description: OK
      tags:
        - Policy
  /workspaces/{workspaceId}/time-off/policies/{policyId}:
    get:
      operationId: getPolicy
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: policyId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PolicyDto'
          description: OK
      tags:
        - Policy
  /workspaces/{workspaceId}/time-off/policies/{policyId}/requests:
    post:
      operationId: create_7
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: policyId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTimeOffRequestRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TimeOffRequestFullDto'
          description: OK
      tags:
        - Time Off
  /workspaces/{workspaceId}/time-off/policies/{policyId}/requests/{requestId}:
    delete:
      operationId: delete_6
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: policyId
          required: true
          schema:
            type: string
        - in: path
          name: requestId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TimeOffRequestDto'
          description: OK
      tags:
        - Time Off
  /workspaces/{workspaceId}/time-off/policies/{policyId}/requests/{requestId}/approve:
    patch:
      operationId: approve
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: policyId
          required: true
          schema:
            type: string
        - in: path
          name: requestId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TimeOffRequestDto'
          description: OK
      tags:
        - Time Off
  /workspaces/{workspaceId}/time-off/policies/{policyId}/requests/{requestId}/reject:
    patch:
      operationId: reject
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: policyId
          required: true
          schema:
            type: string
        - in: path
          name: requestId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RejectTimeOffRequestRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TimeOffRequestDto'
          description: OK
      tags:
        - Time Off
  /workspaces/{workspaceId}/time-off/policies/{policyId}/users/{userId}/requests:
    post:
      operationId: createForOther_1
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: policyId
          required: true
          schema:
            type: string
        - in: path
          name: userId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTimeOffRequestRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TimeOffRequestFullDto'
          description: OK
      tags:
        - Time Off
  /workspaces/{workspaceId}/time-off/requests:
    post:
      operationId: get_1
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: query
          name: fetch-scope
          required: false
          schema:
            type: string
            default: OWN
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetTimeOffRequestsRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TimeOffRequestsWithCountDto'
          description: OK
      tags:
        - Time Off
  /workspaces/{workspaceId}/time-off/requests/{requestId}:
    get:
      operationId: getTimeOffRequestById
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: requestId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TimeOffRequestFullDto'
          description: OK
      tags:
        - Time Off
  /workspaces/{workspaceId}/time-off/specific-member/all-users:
    get:
      operationId: getAllUsersOfWorkspace
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
            default: 1
        - in: query
          name: page-size
          required: false
          schema:
            maximum: 200
            minimum: 1
            type: integer
            format: int32
            default: 50
        - in: query
          name: search
          required: false
          schema:
            type: string
            default: ""
        - in: query
          name: status
          required: false
          schema:
            type: string
            default: ALL
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PtoTeamMembersAndCountDto'
          description: OK
      tags:
        - team-adapter
  /workspaces/{workspaceId}/time-off/specific-member/user-groups:
    get:
      operationId: getUserGroupsOfWorkspace
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
            default: 1
        - in: query
          name: page-size
          required: false
          schema:
            maximum: 200
            minimum: 1
            type: integer
            format: int32
            default: 50
        - in: query
          name: search
          required: false
          schema:
            type: string
            default: ""
        - in: query
          name: filter-team
          required: false
          schema:
            type: boolean
            default: false
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PtoTeamMembersAndCountDto'
          description: OK
      tags:
        - team-adapter
  /workspaces/{workspaceId}/time-off/specific-member/users:
    get:
      operationId: getUsersOfWorkspace
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
            default: 1
        - in: query
          name: page-size
          required: false
          schema:
            maximum: 200
            minimum: 1
            type: integer
            format: int32
            default: 50
        - in: query
          name: search
          required: false
          schema:
            type: string
            default: ""
        - in: query
          name: status
          required: false
          schema:
            type: string
            default: ALL
        - in: query
          name: filter-team
          required: false
          schema:
            type: boolean
            default: false
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PtoTeamMembersAndCountDto'
          description: OK
      tags:
        - team-adapter
  /workspaces/{workspaceId}/time-off/timeline:
    post:
      operationId: get
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: query
          name: hydrated
          required: false
          schema:
            type: boolean
            default: false
        - in: query
          name: fetch-scope
          required: false
          schema:
            type: string
            default: OWN
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetTimelineRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TimelineUsersDto'
          description: OK
      tags:
        - Timeline
  /workspaces/{workspaceId}/time-off/timeline-for-reports:
    post:
      operationId: getTimelineForReports
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: query
          name: hydrated
          required: false
          schema:
            type: boolean
            default: false
        - in: query
          name: fetch-scope
          required: false
          schema:
            type: string
            default: OWN
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetTimelineRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TimelineUsersDto'
          description: OK
      tags:
        - Timeline
  /workspaces/{workspaceId}/timeEntries:
    delete:
      operationId: deleteMany
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeEntryIdsRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TimeEntryUpdatedDto'
          description: OK
      tags:
        - Time entry
    get:
      operationId: getTimeEntriesBySearchValue
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: query
          name: searchValue
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TimeEntryRecentlyUsedDto'
          description: OK
      tags:
        - Time entry
    post:
      operationId: create_6
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: query
          name: from-entry
          required: false
          schema:
            type: string
        - in: header
          name: App-Name
          required: false
          schema:
            type: string
        - in: header
          name: Request-Id
          required: false
          schema:
            type: string
        - in: header
          name: Signature
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTimeEntryRequest'
        required: true
      responses:
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TimeEntryDtoImpl'
          description: Created
      tags:
        - Time entry
  /workspaces/{workspaceId}/timeEntries/bulk:
    patch:
      operationId: patchTimeEntries
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeEntriesPatchRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TimeEntryDtoImpl'
          description: OK
      tags:
        - Time entry
  /workspaces/{workspaceId}/timeEntries/endStarted:
    put:
      operationId: endStarted
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTimeEntryEndRequest'
        required: true
      responses:
        "200":
          description: OK
      tags:
        - Time entry
  /workspaces/{workspaceId}/timeEntries/fetch:
    get:
      operationId: getMultipleTimeEntriesById
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: query
          name: id
          required: true
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TimeEntryDtoImpl'
          description: OK
      tags:
        - Time entry
  /workspaces/{workspaceId}/timeEntries/full:
    post:
      operationId: createFull_1
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: header
          name: App-Name
          required: false
          schema:
            type: string
        - in: header
          name: Request-Id
          required: false
          schema:
            type: string
        - in: header
          name: Signature
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTimeEntryRequest'
        required: true
      responses:
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TimeEntryFullDto'
          description: Created
      tags:
        - Time entry
  /workspaces/{workspaceId}/timeEntries/inProgress:
    get:
      operationId: getTimeEntryInProgress
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TimeEntryDtoImpl'
          description: OK
      tags:
        - Time entry
  /workspaces/{workspaceId}/timeEntries/invoiced:
    patch:
      operationId: updateInvoicedStatus
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateInvoicedStatusRequest'
        required: true
      responses:
        "200":
          description: OK
      tags:
        - Time entry
  /workspaces/{workspaceId}/timeEntries/project/{projectId}:
    get:
      operationId: listOfProject
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: projectId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TimeEntryFullDto'
          description: OK
      tags:
        - Time entry
  /workspaces/{workspaceId}/timeEntries/recent:
    get:
      operationId: getTimeEntriesRecentlyUsed
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: query
          name: limit
          required: false
          schema:
            maximum: 10
            minimum: 1
            type: integer
            format: int32
            default: 10
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TimeEntryRecentlyUsedDto'
          description: OK
      tags:
        - Time entry
  /workspaces/{workspaceId}/timeEntries/time-entries:
    post:
      operationId: createForMany
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTimeEntryForManyRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TimeEntryWithUsernameDto'
          description: OK
      tags:
        - Time entry
  /workspaces/{workspaceId}/timeEntries/user/{userId}:
    get:
      operationId: list
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: query
          name: page
          required: false
          schema:
            type: string
            default: "0"
        - in: query
          name: limit
          required: false
          schema:
            type: string
            default: "50"
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TimeEntriesListDto'
          description: OK
      tags:
        - Time entry
    post:
      operationId: createForOthers
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: userId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTimeEntryRequest'
        required: true
      responses:
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TimeEntrySummaryDto'
          description: Created
      tags:
        - Time entry
  /workspaces/{workspaceId}/timeEntries/user/{userId}/full:
    get:
      operationId: listOfFull
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: query
          name: page
          required: false
          schema:
            type: string
            default: "0"
        - in: query
          name: limit
          required: false
          schema:
            type: string
            default: "50"
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TeamMemberInfoDto'
          description: OK
      tags:
        - Time entry
  /workspaces/{workspaceId}/timeEntries/users/{userId}:
    get:
      operationId: getTimeEntries
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: query
          name: description
          required: false
          schema:
            type: string
        - in: query
          name: start
          required: false
          schema:
            type: string
        - in: query
          name: end
          required: false
          schema:
            type: string
        - in: query
          name: project
          required: false
          schema:
            type: string
        - in: query
          name: task
          required: false
          schema:
            type: string
        - in: query
          name: tags
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - in: query
          name: project-required
          required: false
          schema:
            type: boolean
        - in: query
          name: task-required
          required: false
          schema:
            type: boolean
        - in: query
          name: hydrated
          required: false
          schema:
            type: boolean
            default: false
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
            default: 1
        - in: query
          name: page-size
          required: false
          schema:
            type: integer
            format: int32
            default: 50
        - in: query
          name: in-progress
          required: false
          schema:
            type: boolean
        - in: query
          name: get-week-before
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TimeEntryDto'
          description: OK
      tags:
        - Time entry
    head:
      operationId: assertTimeEntriesExistInDateRange
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: query
          name: start
          required: true
          schema:
            type: string
        - in: query
          name: end
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
      tags:
        - Time entry
  /workspaces/{workspaceId}/timeEntries/users/{userId}/full:
    post:
      operationId: createFull
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: header
          name: App-Name
          required: false
          schema:
            type: string
        - in: header
          name: Request-Id
          required: false
          schema:
            type: string
        - in: header
          name: Signature
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTimeEntryRequest'
        required: true
      responses:
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TimeEntryFullDto'
          description: Created
      tags:
        - Time entry
  /workspaces/{workspaceId}/timeEntries/users/{userId}/in-range:
    get:
      operationId: getTimeEntriesInRange
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: query
          name: start
          required: true
          schema:
            type: string
        - in: query
          name: end
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TimeEntryFullDto'
          description: OK
      tags:
        - Time entry
  /workspaces/{workspaceId}/timeEntries/users/{userId}/timesheet:
    get:
      operationId: getTimeEntriesForTimesheet
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: query
          name: start
          required: false
          schema:
            type: string
        - in: query
          name: end
          required: false
          schema:
            type: string
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
            default: 1
        - in: query
          name: page-size
          required: false
          schema:
            type: integer
            format: int32
            default: 50
        - in: query
          name: in-progress
          required: false
          schema:
            type: boolean
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TimeEntryDto'
          description: OK
      tags:
        - Time entry
  /workspaces/{workspaceId}/timeEntries/{id}:
    patch:
      operationId: patch
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TimeEntryUpdatedDto'
          description: OK
      tags:
        - Time entry
    put:
      operationId: update_3
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
        - in: header
          name: App-Name
          required: false
          schema:
            type: string
        - in: header
          name: Request-Id
          required: false
          schema:
            type: string
        - in: header
          name: Signature
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTimeEntryRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TimeEntryDtoImpl'
          description: OK
      tags:
        - Time entry
  /workspaces/{workspaceId}/timeEntries/{id}/attributes:
    get:
      operationId: getTimeEntryAttributes
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomAttributeDto'
          description: OK
      tags:
        - custom-attribute-http-adapter
    post:
      operationId: createTimeEntryAttribute
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCustomAttributeRequest'
        required: true
      responses:
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomAttributeDto'
          description: Created
      tags:
        - custom-attribute-http-adapter
  /workspaces/{workspaceId}/timeEntries/{id}/attributes/delete:
    post:
      operationId: deleteTimeEntryAttribute
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteCustomAttributeRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomAttributeDto'
          description: OK
      tags:
        - custom-attribute-http-adapter
  /workspaces/{workspaceId}/timeEntries/{id}/billable:
    put:
      operationId: updateBillable
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTimeEntryBillableRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TimeEntryDtoImpl'
          description: OK
      tags:
        - Time entry
  /workspaces/{workspaceId}/timeEntries/{id}/description:
    put:
      operationId: updateDescription
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTimeEntryDescriptionRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TimeEntryDtoImpl'
          description: OK
      tags:
        - Time entry
  /workspaces/{workspaceId}/timeEntries/{id}/end:
    put:
      operationId: updateEnd
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTimeEntryEndRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TimeEntryDtoImpl'
          description: OK
      tags:
        - Time entry
  /workspaces/{workspaceId}/timeEntries/{id}/full:
    put:
      operationId: updateFull
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
        - in: query
          name: stop-timer
          required: false
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTimeEntryRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TimeEntryFullDto'
          description: OK
      tags:
        - Time entry
  /workspaces/{workspaceId}/timeEntries/{id}/project:
    put:
      operationId: updateProject
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTimeEntryProjectRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TimeEntryDtoImpl'
          description: OK
      tags:
        - Time entry
  /workspaces/{workspaceId}/timeEntries/{id}/project/remove:
    delete:
      operationId: removeProject
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TimeEntryDtoImpl'
          description: OK
      tags:
        - Time entry
  /workspaces/{workspaceId}/timeEntries/{id}/projectAndTask:
    put:
      operationId: updateProjectAndTask
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                request1:
                  $ref: '#/components/schemas/UpdateTimeEntryTaskRequest'
                request2:
                  $ref: '#/components/schemas/UpdateTimeEntryProjectRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TimeEntryDtoImpl'
          description: OK
      tags:
        - Time entry
  /workspaces/{workspaceId}/timeEntries/{id}/split:
    patch:
      operationId: updateAndSplit
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeEntryPatchSplitRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TimeEntryDtoImpl'
          description: OK
      tags:
        - Time entry
    post:
      operationId: splitTimeEntry
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeEntrySplitRequest'
        required: true
      responses:
        "201":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TimeEntryDtoImpl'
          description: Created
      tags:
        - Time entry
  /workspaces/{workspaceId}/timeEntries/{id}/start:
    put:
      operationId: updateStart
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTimeEntryStartRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TimeEntryDtoImpl'
          description: OK
      tags:
        - Time entry
  /workspaces/{workspaceId}/timeEntries/{id}/tags:
    put:
      operationId: updateTags
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTimeEntryTagsRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TimeEntryDtoImpl'
          description: OK
      tags:
        - Time entry
  /workspaces/{workspaceId}/timeEntries/{id}/task/remove:
    delete:
      operationId: removeTask
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TimeEntryDtoImpl'
          description: OK
      tags:
        - Time entry
  /workspaces/{workspaceId}/timeEntries/{id}/timeInterval:
    put:
      operationId: updateTimeInterval
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeEntriesDurationRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TimeEntryUpdatedDto'
          description: OK
      tags:
        - Time entry
  /workspaces/{workspaceId}/timeEntries/{id}/user:
    put:
      operationId: updateUser
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTimeEntryUserRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TimeEntryDtoImpl'
          description: OK
      tags:
        - Time entry
  /workspaces/{workspaceId}/timeEntries/{timeEntryId}:
    delete:
      operationId: delete_5
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: timeEntryId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TimeEntryUpdatedDto'
          description: OK
      tags:
        - Time entry
  /workspaces/{workspaceId}/timeEntries/{timeEntryId}/custom-field:
    put:
      operationId: updateCustomField
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: timeEntryId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCustomFieldRequest'
        required: true
      responses:
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomFieldValueDto'
          description: Created
      tags:
        - Time entry
  /workspaces/{workspaceId}/timeEntries/{timeEntryId}/penalty:
    post:
      operationId: penalizeCurrentTimerAndStartNewTimeEntry
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: timeEntryId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PenalizeTimeEntryRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TimeEntryDtoImpl'
          description: OK
      tags:
        - Penalize time entry
  /workspaces/{workspaceId}/transfer:
    post:
      operationId: transferWorkspace
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceTransferRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/WorkspaceTransferDto'
          description: OK
      tags:
        - Workspace
  /workspaces/{workspaceId}/user/{userId}:
    delete:
      operationId: removeMember
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
      tags:
        - Workspace
  /workspaces/{workspaceId}/user/{userId}/time-entries/calendar-drag:
    post:
      operationId: copyTimeEntryCalendarDrag
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: userId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTimeEntryRequest'
        required: true
      responses:
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TimeEntryDtoImpl'
          description: Created
      tags:
        - Time entry
  /workspaces/{workspaceId}/user/{userId}/time-entries/{id}/duplicate:
    post:
      operationId: duplicateTimeEntry
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TimeEntryDtoImpl'
          description: Created
      tags:
        - Time entry
  /workspaces/{workspaceId}/userGroups:
    get:
      deprecated: true
      operationId: getUserGroups_1
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserGroupDto'
          description: OK
      tags:
        - Group
    post:
      operationId: create_5
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserGroupRequest'
        required: true
      responses:
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserGroupDto'
          description: Created
      tags:
        - Group
  /workspaces/{workspaceId}/userGroups/full:
    get:
      operationId: getUserGroups_2
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: query
          name: projectId
          required: false
          schema:
            type: string
        - in: query
          name: excludedIds
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - in: query
          name: name
          required: false
          schema:
            type: string
        - in: query
          name: sort-column
          required: false
          schema:
            type: string
            default: NAME
        - in: query
          name: sort-order
          required: false
          schema:
            type: string
            default: ASCENDING
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
            default: 1
        - in: query
          name: page-size
          required: false
          schema:
            type: integer
            format: int32
            default: 50
        - in: query
          name: search-groups
          required: false
          schema:
            type: boolean
            default: false
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GroupsAndCountDto'
          description: OK
      tags:
        - Group
  /workspaces/{workspaceId}/userGroups/names:
    post:
      operationId: getUserGroupNames
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsersIdsRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserGroupDto'
          description: OK
      tags:
        - Group
  /workspaces/{workspaceId}/userGroups/report-filters:
    get:
      operationId: getUsersForReportFilter_1
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: query
          name: searchValue
          required: false
          schema:
            type: string
            default: ""
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
            default: 1
        - in: query
          name: page-size
          required: false
          schema:
            type: integer
            format: int32
            default: 50
        - in: query
          name: force-filter
          required: false
          schema:
            type: boolean
            default: false
        - in: query
          name: ignore-filter
          required: false
          schema:
            type: boolean
            default: false
        - in: query
          name: excludedIds
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - in: query
          name: forApproval
          required: false
          schema:
            type: boolean
            default: false
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ReportFilterUsersWithCountDto'
          description: OK
      tags:
        - Group
    post:
      operationId: getUserGroupForReportFilterPost
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserGroupReportFilterRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ReportFilterUsersWithCountDto'
          description: OK
      tags:
        - Group
  /workspaces/{workspaceId}/userGroups/report-filters/attendance-report:
    post:
      operationId: getUsersForAttendanceReportFilter
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserGroupAttendanceFilterRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ReportFilterUsersWithCountDto'
          description: OK
      tags:
        - Group
  /workspaces/{workspaceId}/userGroups/report-filters/ids:
    get:
      operationId: getUserGroupIdsByName
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: query
          name: name
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
          description: OK
      tags:
        - Group
  /workspaces/{workspaceId}/userGroups/userGroupIds:
    post:
      operationId: getUserGroups
      parameters:
        - in: query
          name: searchValue
          required: false
          schema:
            type: string
            default: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetUserGroupByIdsRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserGroupDto'
          description: OK
      tags:
        - Group
  /workspaces/{workspaceId}/userGroups/users:
    delete:
      operationId: removeUser
      parameters:
        - in: query
          name: userGroupIds
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - in: query
          name: userId
          required: false
          schema:
            type: string
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddOrRemoveUsersFromUserGroups'
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserGroupDto'
          description: OK
      tags:
        - Group
    post:
      operationId: addUsersToUserGroupsFilter
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUsersFromUserGroupsRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserGroupDto'
          description: OK
      tags:
        - Group
  /workspaces/{workspaceId}/userGroups/{id}:
    delete:
      operationId: delete_4
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserGroupDto'
          description: OK
      tags:
        - Group
    put:
      operationId: update_2
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserGroupNameRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserGroupDto'
          description: OK
      tags:
        - Group
  /workspaces/{workspaceId}/userIds:
    post:
      operationId: getUsers
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetUsersByIdsRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDto'
          description: OK
      tags:
        - Workspace
  /workspaces/{workspaceId}/users:
    get:
      operationId: getUsers_1
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDto'
          description: OK
      tags:
        - Workspace
    post:
      operationId: addUsers
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: query
          name: sendEmail
          required: false
          schema:
            type: boolean
            default: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddUsersToWorkspaceRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/WorkspaceDto'
          description: OK
      tags:
        - Workspace
  /workspaces/{workspaceId}/users/expenses:
    get:
      operationId: getExpensesForUsers
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
            default: 1
        - in: query
          name: page-size
          required: false
          schema:
            type: integer
            format: int32
            default: 50
        - in: query
          name: userId
          required: true
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExpenseDto'
          description: OK
      tags:
        - Expense
  /workspaces/{workspaceId}/users/memberships:
    put:
      operationId: setMemberships
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetWorkspaceMembershipStatusRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/WorkspaceDto'
          description: OK
      tags:
        - Workspace
  /workspaces/{workspaceId}/users/{userId}:
    post:
      operationId: resendInvite
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/WorkspaceDto'
          description: OK
      tags:
        - Workspace
  /workspaces/{workspaceId}/users/{userId}/approval-requests:
    post:
      deprecated: true
      operationId: createDeprecated
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: userId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateApprovalRequest'
        required: true
      responses:
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApprovalRequestDto'
          description: Created
      tags:
        - Approval
  /workspaces/{workspaceId}/users/{userId}/approval-requests/all-pending:
    get:
      operationId: getRequestsByUser
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApprovalInfoDto'
          description: OK
      tags:
        - Approval
  /workspaces/{workspaceId}/users/{userId}/approval-requests/approved-totals:
    post:
      operationId: getApprovedTotals
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: userId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetApprovalTotalsRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApprovalPeriodTotalsDto'
          description: OK
      tags:
        - Approval
  /workspaces/{workspaceId}/users/{userId}/approval-requests/for-other:
    post:
      deprecated: true
      operationId: createForOtherDeprecated
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: userId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateApprovalRequest'
        required: true
      responses:
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApprovalRequestDto'
          description: Created
      tags:
        - Approval
  /workspaces/{workspaceId}/users/{userId}/approval-requests/preview:
    post:
      operationId: getPreview
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: query
          name: unsubmitted
          required: false
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetApprovalTotalsRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApprovalPeriodTotalsDto'
          description: OK
      tags:
        - Approval
  /workspaces/{workspaceId}/users/{userId}/approval-requests/status:
    get:
      operationId: getTimeEntryStatus
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: query
          name: start
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TimeEntryApprovalStatusDto'
          description: OK
      tags:
        - Approval
  /workspaces/{workspaceId}/users/{userId}/approval-requests/week-status:
    get:
      deprecated: true
      operationId: getTimeEntryWeekStatus
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: query
          name: start
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TimeEntryApprovalStatusDto'
          description: OK
      tags:
        - Approval
  /workspaces/{workspaceId}/users/{userId}/approval-requests/weekly-pending:
    get:
      operationId: getWeeklyRequestsByUser
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApprovalInfoDto'
          description: OK
      tags:
        - Approval
  /workspaces/{workspaceId}/users/{userId}/approval-requests/withdraw-all:
    patch:
      operationId: withdrawAllOfUser
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
      tags:
        - Approval
  /workspaces/{workspaceId}/users/{userId}/approval-requests/withdraw-on-workspace:
    patch:
      deprecated: true
      operationId: withdrawAllOfWorkspaceDeprecated
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
      tags:
        - Approval
  /workspaces/{workspaceId}/users/{userId}/approval-requests/withdraw-weekly:
    patch:
      operationId: withdrawWeeklyOfUser
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
      tags:
        - Approval
  /workspaces/{workspaceId}/users/{userId}/cost-rate:
    post:
      operationId: setCostRateForUser_1
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: userId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CostRateRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/WorkspaceDto'
          description: OK
      tags:
        - Workspace
  /workspaces/{workspaceId}/users/{userId}/custom-field-values:
    put:
      operationId: upsertUserCustomFieldValue
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: userId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCustomFieldPutRequest'
        required: true
      responses:
        "201":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserCustomFieldValueDto'
          description: Created
      tags:
        - User
  /workspaces/{workspaceId}/users/{userId}/favorite-entries:
    get:
      operationId: getFavoriteEntries
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FavoriteTimeEntryFullDto'
          description: OK
      tags:
        - Favorite time entry
    post:
      operationId: createFavoriteTimeEntry
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: userId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFavoriteEntriesRequest'
        required: true
      responses:
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/FavoriteTimeEntryFullDto'
          description: Created
      tags:
        - Favorite time entry
  /workspaces/{workspaceId}/users/{userId}/favorite-entries/reorder:
    patch:
      operationId: reorderInvoiceItem
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: userId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReorderFavoriteEntriesRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FavoriteTimeEntryFullDto'
          description: OK
      tags:
        - Favorite time entry
  /workspaces/{workspaceId}/users/{userId}/favorite-entries/{id}:
    delete:
      operationId: delete_3
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: boolean
          description: OK
      tags:
        - Favorite time entry
    put:
      operationId: update_1
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: userId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFavoriteEntriesRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/FavoriteTimeEntryFullDto'
          description: OK
      tags:
        - Favorite time entry
  /workspaces/{workspaceId}/users/{userId}/holidays:
    get:
      operationId: getHolidays_1
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: query
          name: start
          required: true
          schema:
            type: string
        - in: query
          name: end
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HolidayDto'
          description: OK
      tags:
        - Holiday
  /workspaces/{workspaceId}/users/{userId}/hourly-rate:
    post:
      operationId: setHourlyRateForUser_1
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: userId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HourlyRateRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/WorkspaceDto'
          description: OK
      tags:
        - Workspace
  /workspaces/{workspaceId}/users/{userId}/permissions:
    get:
      operationId: getPermissionsToUser
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuthorizationDto'
          description: OK
      tags:
        - Workspace
  /workspaces/{workspaceId}/users/{userId}/projects/favorites/projects/{projectId}:
    delete:
      operationId: removeFavoriteProject
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
      tags:
        - project-favorites-http-adapter
  /workspaces/{workspaceId}/users/{userId}/projects/favorites/{projectFavoritesId}:
    delete:
      operationId: delete_2
      parameters:
        - in: path
          name: projectFavoritesId
          required: true
          schema:
            type: string
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
      tags:
        - project-favorites-http-adapter
  /workspaces/{workspaceId}/users/{userId}/projects/favorites/{projectId}:
    post:
      operationId: create_4
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: path
          name: projectId
          required: true
          schema:
            type: string
      responses:
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProjectFavoritesDto'
          description: Created
      tags:
        - project-favorites-http-adapter
  /workspaces/{workspaceId}/users/{userId}/projects/{projectId}/tasks/{taskId}/favorites:
    delete:
      operationId: delete_1
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: taskId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
      tags:
        - task-favorites-http-adapter
    post:
      operationId: create_3
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: taskId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TaskFavoritesDto'
          description: OK
      tags:
        - task-favorites-http-adapter
  /workspaces/{workspaceId}/users/{userId}/resubmit-entries-for-approval:
    put:
      operationId: reSubmit
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: userId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmitApprovalRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApprovalRequestDto'
          description: OK
      tags:
        - Approval
  /workspaces/{workspaceId}/users/{userId}/roles:
    get:
      operationId: getUserRoles
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
            default: 1
        - in: query
          name: page-size
          required: false
          schema:
            type: integer
            format: int32
            default: 0
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserRolesInfoDto'
          description: OK
      tags:
        - Workspace
    put:
      operationId: updateUserRoles
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: userId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRolesRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserRolesInfoDto'
          description: OK
      tags:
        - Workspace
  /workspaces/{workspaceId}/users/{userId}/submit-approval-request:
    post:
      operationId: create_2
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: userId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmitApprovalRequest'
        required: true
      responses:
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApprovalRequestDto'
          description: Created
      tags:
        - Approval
  /workspaces/{workspaceId}/users/{userId}/submit-approval-request/for-other:
    post:
      operationId: createForOther
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: userId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmitApprovalRequest'
        required: true
      responses:
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApprovalRequestDto'
          description: Created
      tags:
        - Approval
  /workspaces/{workspaceId}/users/{userId}/work-capacity:
    get:
      operationId: getWorkCapacity
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: integer
                format: int64
          description: OK
      tags:
        - Workspace
  /workspaces/{workspaceId}/webhooks:
    get:
      operationId: getWebhooks
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: query
          name: type
          required: false
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
            default:
              - USER_CREATED
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/WebhooksDto'
          description: OK
      summary: Get all webhooks on workspace
      tags:
        - webhook-http-adapter
    post:
      operationId: create_1
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookRequest'
        required: true
      responses:
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/WebhookDto'
          description: Created
      summary: Create webhooks
      tags:
        - webhook-http-adapter
  /workspaces/{workspaceId}/webhooks/{webhookId}:
    delete:
      operationId: delete
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: webhookId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
      summary: Delete webhook
      tags:
        - webhook-http-adapter
    get:
      operationId: getWebhook
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: webhookId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/WebhookDto'
          description: OK
      summary: Get a specific webhook by id
      tags:
        - webhook-http-adapter
    put:
      operationId: update
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: webhookId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookRequest'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/WebhookDto'
          description: OK
      summary: Update a webhook
      tags:
        - webhook-http-adapter
  /workspaces/{workspaceId}/webhooks/{webhookId}/logs:
    get:
      operationId: getLogsForWebhook_1
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: webhookId
          required: true
          schema:
            type: string
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - in: query
          name: size
          required: false
          schema:
            type: integer
            format: int32
            default: 50
        - in: query
          name: status
          required: false
          schema:
            type: string
            default: ALL
        - in: query
          name: sortByNewest
          required: false
          schema:
            type: boolean
        - in: query
          name: from
          required: false
          schema:
            type: string
        - in: query
          name: to
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebhookLogDto'
          description: OK
      summary: Get logs for a webhook
      tags:
        - webhook-http-adapter
  /workspaces/{workspaceId}/webhooks/{webhookId}/logs/count:
    get:
      operationId: getLogCount
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: webhookId
          required: true
          schema:
            type: string
        - in: query
          name: status
          required: false
          schema:
            type: string
            default: ALL
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: integer
                format: int64
          description: OK
      summary: Get the count of logs for a webhook
      tags:
        - webhook-http-adapter
  /workspaces/{workspaceId}/webhooks/{webhookId}/resend/{webhookLogId}:
    get:
      operationId: triggerResendEventForWebhook
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: webhookId
          required: true
          schema:
            type: string
        - in: path
          name: webhookLogId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: boolean
          description: OK
      summary: Trigger resent event for webhook log
      tags:
        - webhook-http-adapter
  /workspaces/{workspaceId}/webhooks/{webhookId}/test:
    get:
      operationId: triggerTestEventForWebhook
      parameters:
        - in: path
          name: webhookId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: boolean
          description: OK
      summary: Trigger a test event for webhook
      tags:
        - webhook-http-adapter
  /workspaces/{workspaceId}/webhooks/{webhookId}/token:
    patch:
      operationId: generateNewToken
      parameters:
        - in: path
          name: workspaceId
          required: true
          schema:
            type: string
        - in: path
          name: webhookId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/WebhookDto'
          description: OK
      summary: Generate new token
      tags:
        - webhook-http-adapter
components:
  schemas:
    ABTestingDto:
      type: object
      properties:
        abTestingEnabled:
          type: boolean
        abTestingType:
          type: string
          enum:
            - UPGRADE_SCREEN
        workspaceId:
          type: string
    ABTestingTrackingRequest:
      type: object
      properties:
        test:
          type: string
    AbstractKioskTokenDto:
      type: object
      properties:
        userId:
          type: string
        workspaceId:
          type: string
    AcceptTermsTokenRequest:
      required:
        - terms
      type: object
      properties:
        exchangeToken:
          type: string
        terms:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/TermDto'
    AccountStatus:
      type: object
      description: Represents account status enum.
      example: ACTIVE
      oneOf:
        - type: string
          enum:
            - ACTIVE
            - PENDING_EMAIL_VERIFICATION
            - DELETED
            - NOT_REGISTERED
            - LIMITED
            - LIMITED_DELETED
      properties:
        ACTIVE:
          type: string
          enum:
            - ACTIVE
            - PENDING_EMAIL_VERIFICATION
            - DELETED
            - NOT_REGISTERED
            - LIMITED
            - LIMITED_DELETED
        DELETED:
          type: string
          enum:
            - ACTIVE
            - PENDING_EMAIL_VERIFICATION
            - DELETED
            - NOT_REGISTERED
            - LIMITED
            - LIMITED_DELETED
        LIMITED:
          type: string
          enum:
            - ACTIVE
            - PENDING_EMAIL_VERIFICATION
            - DELETED
            - NOT_REGISTERED
            - LIMITED
            - LIMITED_DELETED
        LIMITED_DELETED:
          type: string
          enum:
            - ACTIVE
            - PENDING_EMAIL_VERIFICATION
            - DELETED
            - NOT_REGISTERED
            - LIMITED
            - LIMITED_DELETED
        NOT_REGISTERED:
          type: string
          enum:
            - ACTIVE
            - PENDING_EMAIL_VERIFICATION
            - DELETED
            - NOT_REGISTERED
            - LIMITED
            - LIMITED_DELETED
        PENDING_EMAIL_VERIFICATION:
          type: string
          enum:
            - ACTIVE
            - PENDING_EMAIL_VERIFICATION
            - DELETED
            - NOT_REGISTERED
            - LIMITED
            - LIMITED_DELETED
        limitedAccount:
          type: boolean
    AccountVerificationDto:
      type: object
      properties:
        status:
          type: string
    ActivateTemplateRequest:
      required:
        - weekStart
      type: object
      properties:
        activateOption:
          type: string
          enum:
            - REPLACE
            - SKIP
            - ADD
        weekStart:
          type: string
          format: date
    ActiveMembersDto:
      type: object
      properties:
        activeLimitedMembersCount:
          type: integer
          format: int32
        activeMembersCount:
          type: integer
          format: int32
    ActivityDto:
      type: object
      properties:
        activityType:
          type: string
        id:
          type: string
        userId:
          type: string
    AddAndRemoveProjectPermissionsRequest:
      required:
        - permissions
      type: object
      properties:
        permissions:
          type: array
          items:
            type: string
    AddEmailRequest:
      type: object
      properties:
        email:
          type: string
    AddLimitedUserToWorkspaceRequest:
      required:
        - names
      type: object
      properties:
        names:
          maxItems: 250
          minItems: 1
          type: array
          items:
            type: string
    AddOrRemoveUsersFromUserGroups:
      type: object
      properties:
        userGroupIds:
          uniqueItems: true
          type: array
          items:
            type: string
        userId:
          type: string
        userIds:
          uniqueItems: true
          type: array
          items:
            type: string
    AddProfilePictureRequest:
      type: object
      properties:
        imageUrl:
          type: string
    AddUserToWorkspaceRequest:
      required:
        - email
      type: object
      properties:
        email:
          type: string
          description: Represents email address of the user.
          example: johndoe@example.com
    AddUsersToProjectRequest:
      type: object
      properties:
        exclude:
          type: boolean
          writeOnly: true
        excludeGivenIds:
          type: boolean
        userGroupIds:
          type: array
          items:
            type: string
        userIds:
          type: array
          items:
            type: string
    AddUsersToProjectRequestV1:
      type: object
      properties:
        remove:
          type: boolean
          description: Setting this flag to 'true' will remove the given users from the project.
          default: false
        userIds:
          type: array
          description: Represents array of user ids which should be added/removed.
          example:
            - 45b687e29ae1f428e7ebe123
            - 67s687e29ae1f428e7ebe678
          items:
            type: string
            description: Represents array of user ids which should be added/removed.
            example: '["45b687e29ae1f428e7ebe123","67s687e29ae1f428e7ebe678"]'
    AddUsersToWorkspaceRequest:
      type: object
      properties:
        captcha:
          $ref: '#/components/schemas/CaptchaResponseDto'
        captchaValue:
          $ref: '#/components/schemas/CaptchaResponseDto'
        doNotSendEmail:
          type: boolean
        emails:
          maxItems: 250
          minItems: 1
          type: array
          items:
            type: string
    AddonComponentDto:
      required:
        - accessLevel
        - path
        - type
      type: object
      properties:
        accessLevel:
          type: string
          enum:
            - EVERYONE
            - ADMINS
        height:
          type: integer
          format: int32
        iconPath:
          type: string
        label:
          type: string
        options:
          type: object
          additionalProperties:
            type: object
        path:
          type: string
        type:
          type: string
        width:
          type: integer
          format: int32
    AddonDto:
      type: object
      properties:
        addonApiToken:
          type: string
        addonKey:
          type: string
        components:
          type: array
          items:
            $ref: '#/components/schemas/AddonComponentDto'
        description:
          type: string
        iconPath:
          type: string
        id:
          type: string
        minimalSubscriptionPlan:
          type: string
          enum:
            - FREE
            - BASIC
            - STANDARD
            - PRO
            - ENTERPRISE
        name:
          type: string
        selfHostedSettings:
          $ref: '#/components/schemas/AddonSelfHostedSettingsDto'
        settings:
          $ref: '#/components/schemas/AddonSettingsDto'
        status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
        statusChangeDate:
          type: string
          format: date-time
        url:
          type: string
        userId:
          type: string
        webhookIds:
          type: array
          items:
            type: string
        workspaceId:
          type: string
    AddonInstallRequest:
      type: object
      properties:
        manifestUrl:
          $ref: '#/components/schemas/Url'
        url:
          type: string
          writeOnly: true
    AddonKeysRequest:
      required:
        - keys
      type: object
      properties:
        exclude:
          type: boolean
        keys:
          type: array
          items:
            type: string
    AddonLifecycleRequest:
      required:
        - path
        - type
      type: object
      properties:
        path:
          type: string
        type:
          type: string
    AddonSelfHostedSettingsDto:
      required:
        - path
      type: object
      properties:
        path:
          type: string
    AddonSettingDto:
      required:
        - accessLevel
        - id
        - name
        - type
        - value
      type: object
      properties:
        accessLevel:
          type: string
        allowedValues:
          type: array
          items:
            type: string
        copyable:
          type: boolean
        description:
          type: string
        id:
          type: string
        key:
          type: string
        name:
          type: string
        placeholder:
          type: string
        readOnly:
          type: boolean
        required:
          type: boolean
        type:
          type: string
          enum:
            - TXT
            - NUMBER
            - DROPDOWN_SINGLE
            - DROPDOWN_MULTIPLE
            - CHECKBOX
            - LINK
            - USER_DROPDOWN_SINGLE
            - USER_DROPDOWN_MULTIPLE
        value:
          type: object
    AddonSettingsDto:
      type: object
      properties:
        tabs:
          type: array
          items:
            $ref: '#/components/schemas/AddonSettingsTabDto'
    AddonSettingsGroupDto:
      required:
        - id
        - title
      type: object
      properties:
        description:
          type: string
        header:
          $ref: '#/components/schemas/AddonSettingsHeaderDto'
        id:
          type: string
        settings:
          type: array
          items:
            $ref: '#/components/schemas/AddonSettingDto'
        title:
          type: string
    AddonSettingsHeaderDto:
      required:
        - title
      type: object
      properties:
        title:
          type: string
    AddonSettingsTabDto:
      required:
        - id
        - name
      type: object
      properties:
        groups:
          type: array
          items:
            $ref: '#/components/schemas/AddonSettingsGroupDto'
        header:
          $ref: '#/components/schemas/AddonSettingsHeaderDto'
        id:
          type: string
        name:
          type: string
        settings:
          type: array
          items:
            $ref: '#/components/schemas/AddonSettingDto'
    AddonUninstallRequest:
      type: object
      properties:
        manifestUrl:
          $ref: '#/components/schemas/Url'
        url:
          type: string
          writeOnly: true
    AddonUpdateRequest:
      type: object
      properties:
        baseUrl:
          type: string
          writeOnly: true
        components:
          type: object
        description:
          type: string
        iconPath:
          type: string
        lifecycle:
          type: array
          writeOnly: true
          items:
            $ref: '#/components/schemas/AddonLifecycleRequest'
        lifecycles:
          type: array
          items:
            $ref: '#/components/schemas/AddonLifecycleRequest'
        minimalSubscriptionPlan:
          type: string
        name:
          type: string
        scopes:
          type: array
          items:
            type: string
        settings:
          type: object
        url:
          type: string
        webhooks:
          type: array
          items:
            $ref: '#/components/schemas/AddonWebhookRequest'
        webhooksAsSet:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/AddonWebhookRequest'
    AddonUpdateSettingRequest:
      required:
        - id
      type: object
      properties:
        id:
          type: string
        value:
          type: object
    AddonUpdateSettingsRequest:
      required:
        - settings
      type: object
      properties:
        settings:
          maxItems: 2147483647
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/AddonUpdateSettingRequest'
    AddonUpdateStatusRequest:
      type: object
      properties:
        status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
    AddonWebhookRequest:
      required:
        - event
        - path
      type: object
      properties:
        event:
          type: string
        path:
          type: string
    AffiliateTrackingRequest:
      type: object
      properties:
        affiliateRefId:
          type: string
        affiliateTid:
          type: string
    AlertDto:
      type: object
      properties:
        _id:
          type: string
          writeOnly: true
        alertPerson:
          type: string
          enum:
            - WORKSPACE_ADMIN
            - PROJECT_MANAGER
            - TEAM_MEMBERS
        alertType:
          type: string
          enum:
            - PROJECT
            - TASK
        id:
          type: string
        percentage:
          type: number
          format: double
        workspaceId:
          type: string
    AllowedUpdates:
      type: object
      properties:
        forceProjectAllowed:
          type: boolean
        forceTaskAllowed:
          type: boolean
    AmountWithCurrencyDto:
      type: object
      properties:
        amount:
          type: number
          format: double
        currency:
          type: string
    ApiKeyDto:
      type: object
      properties:
        active:
          type: boolean
        apiKey:
          type: string
        apiKeyFirstFiveCharsPlain:
          type: string
        id:
          type: string
        isActive:
          type: boolean
          writeOnly: true
        userId:
          type: string
    AppleAuthenticationRequest:
      type: object
      properties:
        authorizationCode:
          type: string
          writeOnly: true
        clientId:
          type: string
          writeOnly: true
        terms:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/TermDto'
        timeZone:
          type: string
          writeOnly: true
    ApprovalDashboardDto:
      type: object
      properties:
        barChartData:
          type: array
          items:
            $ref: '#/components/schemas/BarChartDataDto'
        dateAndTotalTime:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/TotalTimeItemDto'
        dates:
          type: array
          items:
            type: string
        projectCountByDate:
          type: array
          items:
            type: integer
            format: int32
        totalDurationByDate:
          type: array
          items:
            type: object
            properties:
              nano:
                type: integer
                format: int32
              negative:
                type: boolean
              positive:
                type: boolean
              seconds:
                type: integer
                format: int64
              units:
                type: array
                items:
                  type: object
                  properties:
                    dateBased:
                      type: boolean
                    durationEstimated:
                      type: boolean
                    timeBased:
                      type: boolean
              zero:
                type: boolean
        totalTime:
          type: object
          properties:
            nano:
              type: integer
              format: int32
            negative:
              type: boolean
            positive:
              type: boolean
            seconds:
              type: integer
              format: int64
            units:
              type: array
              items:
                type: object
                properties:
                  dateBased:
                    type: boolean
                  durationEstimated:
                    type: boolean
                  timeBased:
                    type: boolean
            zero:
              type: boolean
    ApprovalDetailsDto:
      type: object
      properties:
        approvalRequest:
          $ref: '#/components/schemas/ApprovalRequestDto'
        approvedTime:
          type: object
          properties:
            nano:
              type: integer
              format: int32
            negative:
              type: boolean
            positive:
              type: boolean
            seconds:
              type: integer
              format: int64
            units:
              type: array
              items:
                type: object
                properties:
                  dateBased:
                    type: boolean
                  durationEstimated:
                    type: boolean
                  timeBased:
                    type: boolean
            zero:
              type: boolean
        approvedTimeOff:
          type: object
          properties:
            nano:
              type: integer
              format: int32
            negative:
              type: boolean
            positive:
              type: boolean
            seconds:
              type: integer
              format: int64
            units:
              type: array
              items:
                type: object
                properties:
                  dateBased:
                    type: boolean
                  durationEstimated:
                    type: boolean
                  timeBased:
                    type: boolean
            zero:
              type: boolean
        billableAmount:
          type: number
          format: double
        billableAmountCurrencyTotal:
          type: array
          items:
            $ref: '#/components/schemas/CurrencyWithAmountDto'
        billableTime:
          type: object
          properties:
            nano:
              type: integer
              format: int32
            negative:
              type: boolean
            positive:
              type: boolean
            seconds:
              type: integer
              format: int64
            units:
              type: array
              items:
                type: object
                properties:
                  dateBased:
                    type: boolean
                  durationEstimated:
                    type: boolean
                  timeBased:
                    type: boolean
            zero:
              type: boolean
        breakTime:
          type: object
          properties:
            nano:
              type: integer
              format: int32
            negative:
              type: boolean
            positive:
              type: boolean
            seconds:
              type: integer
              format: int64
            units:
              type: array
              items:
                type: object
                properties:
                  dateBased:
                    type: boolean
                  durationEstimated:
                    type: boolean
                  timeBased:
                    type: boolean
            zero:
              type: boolean
        costAmount:
          type: number
          format: double
        costAmountCurrencyTotal:
          type: array
          items:
            $ref: '#/components/schemas/CurrencyWithAmountDto'
        entries:
          type: array
          items:
            $ref: '#/components/schemas/TimeEntryInfoDto'
        expenseCurrencyTotal:
          type: array
          items:
            $ref: '#/components/schemas/CurrencyWithAmountDto'
        expenseDailyTotal:
          type: array
          items:
            $ref: '#/components/schemas/ExpenseDailyTotalsDto'
        expenseTotal:
          type: number
          format: double
        expenses:
          type: array
          items:
            $ref: '#/components/schemas/ExpenseHydratedDto'
        pendingTime:
          type: object
          properties:
            nano:
              type: integer
              format: int32
            negative:
              type: boolean
            positive:
              type: boolean
            seconds:
              type: integer
              format: int64
            units:
              type: array
              items:
                type: object
                properties:
                  dateBased:
                    type: boolean
                  durationEstimated:
                    type: boolean
                  timeBased:
                    type: boolean
            zero:
              type: boolean
        trackedTime:
          type: object
          properties:
            nano:
              type: integer
              format: int32
            negative:
              type: boolean
            positive:
              type: boolean
            seconds:
              type: integer
              format: int64
            units:
              type: array
              items:
                type: object
                properties:
                  dateBased:
                    type: boolean
                  durationEstimated:
                    type: boolean
                  timeBased:
                    type: boolean
            zero:
              type: boolean
    ApprovalDetailsDtoV1:
      type: object
      properties:
        approvalRequest:
          $ref: '#/components/schemas/ApprovalRequestDtoV1'
        approvedTime:
          type: string
          description: Represents a time duration.
          example: PT1H30M
        billableAmount:
          type: number
          format: double
          example: 2500.0
        billableTime:
          type: string
          description: Represents a time duration.
          example: PT1H30M
        breakTime:
          type: string
          description: Represents a time duration.
          example: PT1H30M
        costAmount:
          type: number
          description: Represents an amount.
          format: double
          example: 5000.0
        entries:
          type: array
          description: Represents a list of time entry info data transfer objects.
          items:
            $ref: '#/components/schemas/TimeEntryInfoDto'
        expenseTotal:
          type: number
          description: Represents an amount.
          format: double
          example: 7500.0
        expenses:
          type: array
          description: Represents a list of expense hydrated data transfer objects.
          items:
            $ref: '#/components/schemas/ExpenseHydratedDto'
        pendingTime:
          type: string
          description: Represents a time duration.
          example: PT1H30M
        trackedTime:
          type: string
          description: Represents a time duration.
          example: PT1H30M
    ApprovalGroupDto:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/ApprovalGroupItemDto'
        title:
          type: string
    ApprovalGroupItemDto:
      type: object
      properties:
        approvalRequestId:
          type: string
        approvalState:
          type: string
          enum:
            - PENDING
            - APPROVED
            - WITHDRAWN_SUBMISSION
            - WITHDRAWN_APPROVAL
            - REJECTED
        approvedTimeOff:
          type: object
          properties:
            nano:
              type: integer
              format: int32
            negative:
              type: boolean
            positive:
              type: boolean
            seconds:
              type: integer
              format: int64
            units:
              type: array
              items:
                type: object
                properties:
                  dateBased:
                    type: boolean
                  duration:
                    type: object
                    properties:
                      nano:
                        type: integer
                        format: int32
                      negative:
                        type: boolean
                      positive:
                        type: boolean
                      seconds:
                        type: integer
                        format: int64
                      zero:
                        type: boolean
                  durationEstimated:
                    type: boolean
                  timeBased:
                    type: boolean
            zero:
              type: boolean
        currencyTotal:
          type: array
          items:
            $ref: '#/components/schemas/CurrencyWithAmountDto'
        expenseTotal:
          type: integer
          format: int64
        label:
          type: string
        managers:
          type: array
          writeOnly: true
          items:
            $ref: '#/components/schemas/EntityIdNameDto'
        total:
          type: object
          properties:
            nano:
              type: integer
              format: int32
            negative:
              type: boolean
            positive:
              type: boolean
            seconds:
              type: integer
              format: int64
            units:
              type: array
              items:
                type: object
                properties:
                  dateBased:
                    type: boolean
                  duration:
                    type: object
                    properties:
                      nano:
                        type: integer
                        format: int32
                      negative:
                        type: boolean
                      positive:
                        type: boolean
                      seconds:
                        type: integer
                        format: int64
                      zero:
                        type: boolean
                  durationEstimated:
                    type: boolean
                  timeBased:
                    type: boolean
            zero:
              type: boolean
        userId:
          type: string
        userManagers:
          type: array
          items:
            $ref: '#/components/schemas/EntityIdNameDto'
    ApprovalInfoDto:
      type: object
      properties:
        dateRange:
          $ref: '#/components/schemas/DateRangeDto'
        id:
          type: string
        workspaceName:
          type: string
    ApprovalPeriodTotalsDto:
      type: object
      properties:
        currencyTotal:
          type: array
          items:
            $ref: '#/components/schemas/CurrencyWithAmountDto'
        dailyExpenseCurrencyTotals:
          type: array
          items:
            $ref: '#/components/schemas/ExpenseDailyTotalsDto'
        dailyExpenseTotals:
          type: object
          additionalProperties:
            type: integer
            format: int64
        dailyTotals:
          type: object
          additionalProperties:
            type: object
            properties:
              nano:
                type: integer
                format: int32
              negative:
                type: boolean
              positive:
                type: boolean
              seconds:
                type: integer
                format: int64
              units:
                type: array
                items:
                  type: object
                  properties:
                    dateBased:
                      type: boolean
                    duration:
                      type: object
                      properties:
                        nano:
                          type: integer
                          format: int32
                        negative:
                          type: boolean
                        positive:
                          type: boolean
                        seconds:
                          type: integer
                          format: int64
                        zero:
                          type: boolean
                    durationEstimated:
                      type: boolean
                    timeBased:
                      type: boolean
              zero:
                type: boolean
        dateRange:
          $ref: '#/components/schemas/DateRangeDto'
        expenseTotal:
          type: integer
          format: int64
        total:
          type: object
          properties:
            nano:
              type: integer
              format: int32
            negative:
              type: boolean
            positive:
              type: boolean
            seconds:
              type: integer
              format: int64
            units:
              type: array
              items:
                type: object
                properties:
                  dateBased:
                    type: boolean
                  duration:
                    type: object
                    properties:
                      nano:
                        type: integer
                        format: int32
                      negative:
                        type: boolean
                      positive:
                        type: boolean
                      seconds:
                        type: integer
                        format: int64
                      zero:
                        type: boolean
                  durationEstimated:
                    type: boolean
                  timeBased:
                    type: boolean
            zero:
              type: boolean
        userId:
          type: string
        userName:
          type: string
    ApprovalRequestCreatorDto:
      type: object
      properties:
        userEmail:
          type: string
        userId:
          type: string
        userName:
          type: string
    ApprovalRequestCreatorDtoV1:
      type: object
      properties:
        userEmail:
          type: string
          description: Represents user email.
          example: johhndoe@example.com
        userId:
          type: string
          description: Represents user identifier across the system.
          example: 5a0ab5acb07987125438b60f
        userName:
          type: string
          description: Represents user name.
          example: johhndoe
      description: Represents approval request creator object.
    ApprovalRequestDto:
      type: object
      properties:
        approvalStatuses:
          type: object
          additionalProperties:
            type: string
            enum:
              - PENDING
              - APPROVED
              - UNSUBMITTED
        creator:
          $ref: '#/components/schemas/ApprovalRequestCreatorDto'
        dateRange:
          $ref: '#/components/schemas/DateRangeDto'
        id:
          type: string
        owner:
          $ref: '#/components/schemas/ApprovalRequestOwnerDto'
        status:
          $ref: '#/components/schemas/ApprovalRequestStatusDto'
        workspaceId:
          type: string
    ApprovalRequestDtoV1:
      type: object
      properties:
        creator:
          $ref: '#/components/schemas/ApprovalRequestCreatorDtoV1'
        dateRange:
          $ref: '#/components/schemas/DateRangeDto'
        id:
          type: string
          description: Represents approval request identifier across the workspace.
          example: 567687e29ae1f428e7ebf564
        owner:
          $ref: '#/components/schemas/ApprovalRequestOwnerDtoV1'
        status:
          $ref: '#/components/schemas/ApprovalRequestStatusDtoV1'
        workspaceId:
          type: string
          description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
    ApprovalRequestOwnerDto:
      type: object
      properties:
        startOfWeek:
          type: string
        timeZone:
          type: string
        userId:
          type: string
        userName:
          type: string
    ApprovalRequestOwnerDtoV1:
      type: object
      properties:
        startOfWeek:
          type: string
          description: Represents a day of the week.
          example: MONDAY
          enum:
            - MONDAY
            - TUESDAY
            - WEDNESDAY
            - THURSDAY
            - FRIDAY
            - SATURDAY
            - SUNDAY
        timeZone:
          type: string
          description: Represents time zone.
          example: Europe/Budapest
        userId:
          type: string
          description: Represents user identifier across the system.
          example: 5a0ab5acb07987125438b60f
        userName:
          type: string
          description: Represents user name.
          example: johndoe
      description: Represents approval request owner object.
    ApprovalRequestStatusDto:
      type: object
      properties:
        note:
          type: string
        state:
          type: string
        updatedAt:
          type: string
          format: date-time
        updatedBy:
          type: string
        updatedByUserName:
          type: string
    ApprovalRequestStatusDtoV1:
      type: object
      properties:
        note:
          type: string
          description: Represents an approval requesst note.
          example: This is a sample approval request note.
        state:
          type: string
          description: Represents approval state enum.
          example: APPROVED
          enum:
            - PENDING
            - APPROVED
            - WITHDRAWN_SUBMISSION
            - WITHDRAWN_APPROVAL
            - REJECTED
        updatedAt:
          type: string
          description: Represents a date in yyyy-MM-ddThh:mm:ssZ format.
          format: date-time
          example: "2020-01-01T08:00:00Z"
        updatedBy:
          type: string
          description: Represents user identifier across the system.
          example: 5a0ab5acb07987125438b60f
        updatedByUserName:
          type: string
          description: Represents user name.
          example: juandelacruz
      description: Represents approval request status object.
    ApprovalSettings:
      type: object
      properties:
        approvalEnabled:
          type: boolean
        approvalPeriod:
          type: string
          enum:
            - WEEKLY
            - SEMI_MONTHLY
            - MONTHLY
        approvalRoles:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
              - ADMIN
              - TEAM_MANAGER
              - PROJECT_MANAGER
    ApproveDto:
      type: object
      properties:
        requiresApproval:
          type: boolean
          description: Indicates whether it requires approval
          example: true
        specificMembers:
          type: boolean
          description: Indicates whether it requires specific members
          example: false
        teamManagers:
          type: boolean
          description: Indicates whether it requires team manager's approval
          example: false
        userIds:
          uniqueItems: true
          type: array
          description: Represents set of user's identifier across the system
          example:
            - 6579d126c2fe3b25f20ea001
            - 6579d126c2fe3b25f20ea002
          items:
            type: string
            description: Represents set of user's identifier across the system
            example: '["6579d126c2fe3b25f20ea001","6579d126c2fe3b25f20ea002"]'
    ApproveRequestsRequest:
      type: object
      properties:
        userFilter:
          $ref: '#/components/schemas/ContainsUsersFilterRequest'
        userGroupFilter:
          $ref: '#/components/schemas/ContainsUserGroupFilterRequest'
    ArchivePermissionDto:
      type: object
      properties:
        canArchiveProjects:
          type: boolean
        haveProjects:
          type: boolean
        haveTasks:
          type: boolean
    AssignmentCreateRequest:
      required:
        - projectId
        - userId
      type: object
      properties:
        billable:
          type: boolean
        end:
          type: string
          writeOnly: true
        hoursPerDay:
          type: number
          format: double
        includeNonWorkingDays:
          type: boolean
        note:
          maxLength: 100
          minLength: 0
          type: string
        period:
          $ref: '#/components/schemas/DateRange'
        projectId:
          type: string
        recurring:
          $ref: '#/components/schemas/RecurringAssignmentRequest'
        recurringAssignment:
          $ref: '#/components/schemas/RecurringAssignmentRequest'
        start:
          type: string
          writeOnly: true
        startTime:
          type: string
        taskId:
          type: string
        userId:
          type: string
    AssignmentCreateRequestV1:
      required:
        - end
        - projectId
        - start
        - userId
      type: object
      properties:
        billable:
          type: boolean
          description: Indicates whether assignment is billable or not.
        end:
          type: string
          description: Represents end date in yyyy-MM-ddThh:mm:ssZ format.
          example: "2021-01-01T00:00:00Z"
        hoursPerDay:
          type: number
          description: Represents assignment total hours per day.
          format: double
          example: 7.5
        includeNonWorkingDays:
          type: boolean
          description: Indicates whether to include non-working days or not.
        note:
          maxLength: 100
          minLength: 0
          type: string
          description: Represents assignment note.
          example: This is a sample note for an assignment.
        projectId:
          type: string
          description: Represents project identifier across the system.
          example: 56b687e29ae1f428e7ebe504
        recurringAssignment:
          $ref: '#/components/schemas/RecurringAssignmentRequestV1'
        start:
          type: string
          description: Represents start date in yyyy-MM-ddThh:mm:ssZ format.
          example: "2020-01-01T00:00:00Z"
        startTime:
          type: string
          description: Represents start time in hh:mm:ss format.
          example: 10:00:00
        taskId:
          type: string
          description: Represents task identifier across the system.
          example: 56b687e29ae1f428e7ebe505
        userId:
          type: string
          description: Represents user identifier across the system.
          example: 72k687e29ae1f428e7ebe109
    AssignmentDto:
      type: object
      properties:
        billable:
          type: boolean
        billableAmountPerDay:
          $ref: '#/components/schemas/AmountWithCurrencyDto'
        costAmountPerDay:
          $ref: '#/components/schemas/AmountWithCurrencyDto'
        excludeDays:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/SchedulingExcludeDay'
        hoursPerDay:
          type: number
          format: double
        id:
          type: string
        includeNonWorkingDays:
          type: boolean
        note:
          type: string
        period:
          $ref: '#/components/schemas/DateRangeDto'
        projectId:
          type: string
        published:
          type: boolean
        recurring:
          $ref: '#/components/schemas/RecurringAssignmentDto'
        startTime:
          type: string
        taskId:
          type: string
        taskName:
          type: string
        userId:
          type: string
        workspaceId:
          type: string
    AssignmentDtoV1:
      type: object
      properties:
        billable:
          type: boolean
          description: Indicates whether assignment is billable or not.
        excludeDays:
          uniqueItems: true
          type: array
          description: Represents a list of excluded days objects
          items:
            $ref: '#/components/schemas/SchedulingExcludeDay'
        hoursPerDay:
          type: number
          description: Represents assignment total hours per day.
          format: double
          example: 7.5
        id:
          type: string
          description: Represents assignment identifier across the system.
          example: 74a687e29ae1f428e7ebe505
        includeNonWorkingDays:
          type: boolean
          description: Indicates whether assignment should include non-working days or not.
        note:
          type: string
          description: Represents assignment note.
          example: This is a sample note for an assignment.
        period:
          $ref: '#/components/schemas/DateRangeDto'
        projectId:
          type: string
          description: Represents project identifier across the system.
          example: 56b687e29ae1f428e7ebe504
        published:
          type: boolean
          description: Indicates whether assignment is published or not.
        recurring:
          $ref: '#/components/schemas/RecurringAssignmentDto'
        startTime:
          type: string
          description: Represents start time in hh:mm:ss format.
          example: 10:00:00
        userId:
          type: string
          description: Represents user identifier across the system.
          example: 72k687e29ae1f428e7ebe109
        workspaceId:
          type: string
          description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
    AssignmentHydratedDto:
      type: object
      properties:
        billable:
          type: boolean
        clientId:
          type: string
        clientName:
          type: string
        excludeDays:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/SchedulingExcludeDay'
        hoursPerDay:
          type: number
          format: double
        id:
          type: string
        includeNonWorkingDays:
          type: boolean
        note:
          type: string
        period:
          $ref: '#/components/schemas/DateRangeDto'
        projectArchived:
          type: boolean
        projectBillable:
          type: boolean
        projectColor:
          type: string
        projectId:
          type: string
        projectName:
          type: string
        startTime:
          type: string
        taskId:
          type: string
        taskName:
          type: string
        userId:
          type: string
        userName:
          type: string
        workspaceId:
          type: string
    AssignmentHydratedDtoV1:
      type: object
      properties:
        billable:
          type: boolean
          description: Indicates whether assignment is billable or not.
        clientId:
          type: string
          description: Represents client identifier across the system.
          example: 36b687e29ae1f428e7ebe109
        clientName:
          type: string
          description: Represents project name.
          example: Software Development
        hoursPerDay:
          type: number
          description: Represents number of hours per day as double.
          format: double
          example: 7.5
        id:
          type: string
          description: Represents assignment identifier across the system.
          example: 74a687e29ae1f428e7ebe505
        note:
          type: string
          description: Represents assignment note.
          example: This is a sample note for an assignment.
        period:
          $ref: '#/components/schemas/DateRangeDto'
        projectArchived:
          type: boolean
        projectBillable:
          type: boolean
        projectColor:
          type: string
          description: 'Color format ^#(?:[0-9a-fA-F]{6}){1}$. Explanation: A valid color code should start with ''#'' and consist of six hexadecimal characters, representing a color in hexadecimal format. Color value is in standard RGB hexadecimal format.'
          example: '#000000'
        projectId:
          type: string
          description: Represents project identifier across the system.
          example: 56b687e29ae1f428e7ebe504
        projectName:
          type: string
          description: Represents project name.
          example: Software Development
        startTime:
          type: string
          description: Represents start time in hh:mm:ss format.
          example: 10:00:00
        userId:
          type: string
          description: Represents user identifier across the system.
          example: 72k687e29ae1f428e7ebe109
        userName:
          type: string
          description: Represents user name.
          example: John Doe
        workspaceId:
          type: string
          description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
    AssignmentPerDayDto:
      type: object
      properties:
        date:
          type: string
          format: date-time
        hasAssignment:
          type: boolean
    AssignmentPeriodRequest:
      type: object
      properties:
        end:
          type: string
          writeOnly: true
        period:
          $ref: '#/components/schemas/DateRange'
        seriesUpdateOption:
          type: string
          enum:
            - THIS_ONE
            - THIS_AND_FOLLOWING
            - ALL
        start:
          type: string
          writeOnly: true
    AssignmentUpdateRequest:
      type: object
      properties:
        billable:
          type: boolean
        end:
          type: string
          writeOnly: true
        hoursPerDay:
          type: number
          format: double
        includeNonWorkingDays:
          type: boolean
        note:
          maxLength: 100
          minLength: 0
          type: string
        period:
          $ref: '#/components/schemas/DateRange'
        seriesUpdateOption:
          type: string
          enum:
            - THIS_ONE
            - THIS_AND_FOLLOWING
            - ALL
        start:
          type: string
          writeOnly: true
        startTime:
          type: string
        taskId:
          type: string
    AssignmentUpdateRequestV1:
      required:
        - end
        - start
      type: object
      properties:
        billable:
          type: boolean
          description: Indicates whether assignment is billable or not.
        end:
          type: string
          description: Represents end date in yyyy-MM-ddThh:mm:ssZ format.
          example: "2021-01-01T00:00:00Z"
        hoursPerDay:
          type: number
          description: Represents assignment total hours per day.
          format: double
          example: 7.5
        includeNonWorkingDays:
          type: boolean
          description: Indicates whether to include non-working days or not.
        note:
          maxLength: 100
          minLength: 0
          type: string
          description: Represents assignment note.
          example: This is a sample note for an assignment.
        seriesUpdateOption:
          type: string
          description: Valid series option
          example: THIS_ONE
          enum:
            - THIS_ONE
            - THIS_AND_FOLLOWING
            - ALL
        start:
          type: string
          description: Represents start date in yyyy-MM-ddThh:mm:ssZ format.
          example: "2020-01-01T00:00:00Z"
        startTime:
          type: string
          description: Represents start time in hh:mm:ss format.
          example: 10:00:00
        taskId:
          type: string
          description: Represents task identifier across the system.
          example: 56b687e29ae1f428e7ebe505
    AttributionTrackingRequest:
      type: object
      properties:
        agid:
          type: string
        attribution:
          type: string
        baseUrl:
          type: string
        bdg:
          type: string
        campaign:
          type: string
        cmpid:
          type: string
        cmt:
          type: string
        device:
          type: string
        keyword:
          type: string
        lci:
          type: string
        lct:
          type: string
        medium:
          type: string
        source:
          type: string
        tpc:
          type: string
    AuditLogSettingsDto:
      type: object
      properties:
        auditEnabled:
          type: boolean
        clientAuditing:
          type: boolean
        clientStartedRecording:
          type: string
          format: date-time
        expensesAuditing:
          type: boolean
        expensesStartedRecording:
          type: string
          format: date-time
        projectAuditing:
          type: boolean
        projectStartedRecording:
          type: string
          format: date-time
        tagAuditing:
          type: boolean
        tagStartedRecording:
          type: string
          format: date-time
        timeEntryAuditing:
          type: boolean
        timeEntryStartedRecording:
          type: string
          format: date-time
    AuthAccessResponse:
      type: object
      properties:
        email:
          type: string
        id:
          type: string
        isNew:
          type: boolean
        membership:
          type: array
          items:
            $ref: '#/components/schemas/MembershipDto'
        name:
          type: string
        new:
          type: boolean
        refreshToken:
          type: string
        status:
          type: string
          enum:
            - ACTIVE
            - PENDING_EMAIL_VERIFICATION
            - DELETED
            - NOT_REGISTERED
            - LIMITED
            - LIMITED_DELETED
        token:
          type: string
    AuthCreationRequest:
      required:
        - key
        - secret
      type: object
      properties:
        currentLang:
          type: string
        key:
          type: string
        secret:
          type: string
        terms:
          uniqueItems: true
          type: array
          writeOnly: true
          items:
            $ref: '#/components/schemas/TermDto'
        termsAcccepted:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/TermDto'
        timeZone:
          type: string
    AuthDto:
      type: object
      properties:
        id:
          type: string
        key:
          type: string
        memberships:
          type: array
          items:
            $ref: '#/components/schemas/MembershipDto'
        name:
          type: string
        new:
          type: boolean
        refreshToken:
          type: string
        roles:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
              - USER
              - MANAGER
              - ADMIN
              - NOTIFIER
              - SUPPORT_AGENT
              - SALES_AGENT
              - SALES_ADMIN
              - SALES_PANEL
              - BILLING
        status:
          type: string
          enum:
            - ACTIVE
            - PENDING_EMAIL_VERIFICATION
            - DELETED
            - NOT_REGISTERED
            - LIMITED
            - LIMITED_DELETED
        token:
          type: string
    AuthResponse:
      type: object
    AuthenticationRequest:
      type: object
      properties:
        email:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
    AuthorizationDto:
      type: object
      properties:
        name:
          type: string
        objectId:
          type: string
        userId:
          type: string
    AuthorizationSourceDto:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        type:
          type: string
          enum:
            - USER_GROUP
    AuthorizationSourceDtoV1:
      type: object
      properties:
        id:
          type: string
          description: Represents authorization source identifier across the system.
          example: 5b715612b079875110791234
        type:
          type: string
          description: Represents a valid authorization source type.
          example: USER_GROUP
          enum:
            - USER_GROUP
      description: Represents an authorization data transfer object.
    AutoLoginRequest:
      type: object
      properties:
        autoLogin:
          type: string
          enum:
            - SAML2
            - OAUTH2
            - "OFF"
    AutomaticAccrualDto:
      type: object
      properties:
        amount:
          type: number
          description: Represents automatic accrual's amount
          format: double
          example: 20.0
        period:
          type: string
          description: Represents automatic accrual's period
          example: YEAR
          enum:
            - MONTH
            - YEAR
        timeUnit:
          type: string
          description: Represents automatic accrual's time unit
          example: DAYS
          enum:
            - DAYS
            - HOURS
    AutomaticAccrualRequest:
      type: object
      properties:
        amount:
          type: number
          format: double
          writeOnly: true
        amountValidForTimeUnit:
          type: boolean
        period:
          type: string
          writeOnly: true
        timeUnit:
          type: string
          writeOnly: true
    AutomaticLockDto:
      type: object
      properties:
        changeDay:
          type: string
          enum:
            - MONDAY
            - TUESDAY
            - WEDNESDAY
            - THURSDAY
            - FRIDAY
            - SATURDAY
            - SUNDAY
        changeHour:
          type: integer
          format: int32
        dayOfMonth:
          type: integer
          format: int32
        firstDay:
          type: string
          enum:
            - MONDAY
            - TUESDAY
            - WEDNESDAY
            - THURSDAY
            - FRIDAY
            - SATURDAY
            - SUNDAY
        olderThanPeriod:
          type: string
          enum:
            - DAYS
            - WEEKS
            - MONTHS
        olderThanValue:
          type: integer
          format: int32
        timeZone:
          type: string
        type:
          type: string
          enum:
            - WEEKLY
            - MONTHLY
            - OLDER_THAN
    AutomaticLockDtoV1:
      type: object
      properties:
        changeDay:
          type: string
          description: Represents a day of the week.
          example: FRIDAY
          enum:
            - MONDAY
            - TUESDAY
            - WEDNESDAY
            - THURSDAY
            - FRIDAY
            - SATURDAY
            - SUNDAY
        dayOfMonth:
          type: integer
          description: Represents a day of month as integer.
          format: int32
          example: 15
        firstDay:
          type: string
          description: Represents a day of the week.
          example: MONDAY
          enum:
            - MONDAY
            - TUESDAY
            - WEDNESDAY
            - THURSDAY
            - FRIDAY
            - SATURDAY
            - SUNDAY
        olderThanPeriod:
          type: string
          description: Represents a time entry automatic lock period enum.
          example: DAYS
          enum:
            - DAYS
            - WEEKS
            - MONTHS
        olderThanValue:
          type: integer
          description: Represents an integer as the criteria for locking time entries.
          format: int32
          example: 5
        type:
          type: string
          description: Represents a time entry automatic lock type enum.
          example: WEEKLY
          enum:
            - WEEKLY
            - MONTHLY
            - OLDER_THAN
      description: Represents an automatic lock object.
    AutomaticTimeEntryCreationDto:
      type: object
      properties:
        defaultEntities:
          $ref: '#/components/schemas/DefaultEntitiesDto'
        enabled:
          type: boolean
    AutomaticTimeEntryCreationRequest:
      required:
        - defaultEntities
      type: object
      properties:
        defaultEntities:
          $ref: '#/components/schemas/DefaultEntitiesRequest'
        enabled:
          type: boolean
          description: Indicates that automatic time entry creation is enabled.
    Balance:
      type: object
      properties:
        accrued:
          type: number
          format: double
        balance:
          type: number
          format: double
        id:
          type: string
        negativeBalanceAmount:
          type: number
          format: double
        negativeBalanceLimit:
          type: boolean
        policyArchived:
          type: boolean
        policyColor:
          type: string
        policyId:
          type: string
        policyName:
          type: string
        policyTimeUnit:
          type: string
        total:
          type: number
          format: double
        used:
          type: number
          format: double
        userId:
          type: string
        userImageUrl:
          type: string
        userInactive:
          type: boolean
        userName:
          type: string
        workspaceId:
          type: string
    BalanceDtoV1:
      type: object
      properties:
        balance:
          type: number
          description: Represents the balance amount of the time unit
          format: double
          example: 20.0
        id:
          type: string
          description: Represent balance identifier across the system.
          example: 5b715448b079875110792222
        negativeBalanceAmount:
          type: number
          description: Represent negative balance amount.
          format: double
          example: 2.0
        negativeBalanceLimit:
          type: boolean
          description: Indicates whether the negative balance limit is allowed.
          example: true
        policyArchived:
          type: boolean
          description: Indicates whether the policy is archived.
          example: false
        policyId:
          type: string
          description: Represent policy identifier across the system.
          example: 5b715448b079875110793333
        policyName:
          type: string
          description: Represent policy name.
          example: Days
        policyTimeUnit:
          type: string
          description: Represent policy time unit.
          example: DAYS
          enum:
            - DAYS
            - HOURS
        total:
          type: number
          description: Represents the total amount
          format: double
          example: 18.0
        used:
          type: number
          description: Represents the balance used amount
          format: double
          example: 2.0
        userId:
          type: string
          description: Represent user identifier across the system.
          example: 5b715448b079875110791234
        userName:
          type: string
          description: Represent user's username.
          example: nicholas
        workspaceId:
          type: string
          description: Represent workspace identifier across the system.
          example: 5b715448b079875110791111
      description: Represent the list of balances.
    BalanceHistoryDto:
      type: object
      properties:
        action:
          type: string
          enum:
            - PENDING
            - APPROVED
            - AUTOMATIC_APPROVAL
            - REJECTED
            - WITHDRAWN
            - MANUAL
            - AUTOMATIC
        authorName:
          type: string
        balance:
          type: string
        date:
          type: string
          format: date-time
        id:
          type: string
        note:
          type: string
        policyId:
          type: string
        timeOffPeriod:
          $ref: '#/components/schemas/PtoRequestPeriodDto'
        timeUnit:
          type: string
          enum:
            - DAYS
            - HOURS
        timeZone:
          type: string
        userId:
          type: string
        workspaceId:
          type: string
    BalancesWithCount:
      type: object
      properties:
        balances:
          type: array
          items:
            $ref: '#/components/schemas/Balance'
        count:
          type: integer
          format: int32
    BalancesWithCountDtoV1:
      type: object
      properties:
        balances:
          type: array
          items:
            $ref: '#/components/schemas/BalanceDtoV1'
        count:
          type: integer
          description: Represents the count of balances.
          format: int32
          example: 2
    BarChartDataDto:
      type: object
      properties:
        backgroundColor:
          type: string
        clientName:
          type: string
        data:
          type: array
          items:
            type: object
            properties:
              nano:
                type: integer
                format: int32
              negative:
                type: boolean
              positive:
                type: boolean
              seconds:
                type: integer
                format: int64
              units:
                type: array
                items:
                  type: object
                  properties:
                    dateBased:
                      type: boolean
                    durationEstimated:
                      type: boolean
                    timeBased:
                      type: boolean
              zero:
                type: boolean
        duration:
          type: object
          properties:
            nano:
              type: integer
              format: int32
            negative:
              type: boolean
            positive:
              type: boolean
            seconds:
              type: integer
              format: int64
            units:
              type: array
              items:
                type: object
                properties:
                  dateBased:
                    type: boolean
                  durationEstimated:
                    type: boolean
                  timeBased:
                    type: boolean
            zero:
              type: boolean
        hoverBackgroundColor:
          type: string
        label:
          type: string
    BillableAndCostAmountDto:
      type: object
      properties:
        billableAmount:
          $ref: '#/components/schemas/AmountWithCurrencyDto'
        costAmount:
          $ref: '#/components/schemas/AmountWithCurrencyDto'
    BillingInformationDto:
      type: object
      properties:
        amount:
          type: number
          format: double
        billingDate:
          type: string
          format: date-time
        clientSecret:
          type: string
        isChargeAutomatically:
          type: boolean
        isPaid:
          type: boolean
          writeOnly: true
        limitedAmount:
          type: number
          format: double
        limitedQuantity:
          type: integer
          format: int64
        nextSubscriptionType:
          type: string
          enum:
            - PREMIUM
            - PREMIUM_YEAR
            - SPECIAL
            - SPECIAL_YEAR
            - TRIAL
            - ENTERPRISE
            - ENTERPRISE_YEAR
            - BASIC_2021
            - BASIC_YEAR_2021
            - STANDARD_2021
            - STANDARD_YEAR_2021
            - PRO_2021
            - PRO_YEAR_2021
            - ENTERPRISE_2021
            - ENTERPRISE_YEAR_2021
            - BUNDLE_2024
            - BUNDLE_YEAR_2024
            - SELF_HOSTED
            - FREE
        paid:
          type: boolean
        paymentMethodId:
          type: string
        quantity:
          type: integer
          format: int64
        requiresAction:
          type: boolean
        totalAmount:
          type: number
          format: double
        type:
          type: string
          enum:
            - PREMIUM
            - PREMIUM_YEAR
            - SPECIAL
            - SPECIAL_YEAR
            - TRIAL
            - ENTERPRISE
            - ENTERPRISE_YEAR
            - BASIC_2021
            - BASIC_YEAR_2021
            - STANDARD_2021
            - STANDARD_YEAR_2021
            - PRO_2021
            - PRO_YEAR_2021
            - ENTERPRISE_2021
            - ENTERPRISE_YEAR_2021
            - BUNDLE_2024
            - BUNDLE_YEAR_2024
            - SELF_HOSTED
            - FREE
    BreakSettingsDto:
      type: object
      properties:
        breaksEnabled:
          type: boolean
        defaultBreakEntities:
          $ref: '#/components/schemas/DefaultBreakEntitiesDto'
    BreakSettingsRequest:
      type: object
      properties:
        breaksEnabled:
          type: boolean
        defaultBreakEntities:
          $ref: '#/components/schemas/DefaultBreakEntitiesRequest'
    BulkEditUsersRequest:
      required:
        - userIds
      type: object
      properties:
        billableRate:
          $ref: '#/components/schemas/HourlyRateRequest'
        costRate:
          $ref: '#/components/schemas/CostRateRequest'
        hourlyRate:
          $ref: '#/components/schemas/HourlyRateRequest'
        statuses:
          uniqueItems: true
          type: array
          writeOnly: true
          items:
            type: string
        userCustomFields:
          type: array
          description: Represents a list of upsert user custom field request.
          items:
            $ref: '#/components/schemas/UpsertUserCustomFieldRequest'
        userIds:
          uniqueItems: true
          type: array
          description: Represents a unique list of user ids.
          example:
            - 5a0ab5acb07987125438b60f
            - 98j4b5acb07987125437y32
          items:
            type: string
            description: Represents a unique list of user ids.
            example: '["5a0ab5acb07987125438b60f","98j4b5acb07987125437y32"]'
        weekStart:
          $ref: '#/components/schemas/DayOfWeek'
        workCapacity:
          type: string
          description: Represents work capacity as duration.
          example: "50000"
        workingDays:
          $ref: '#/components/schemas/DayOfWeek'
    BulkProjectEditDto:
      type: object
      properties:
        bulkTaskEditResult:
          $ref: '#/components/schemas/BulkTaskEditResultDto'
        projects:
          type: array
          items:
            $ref: '#/components/schemas/ProjectDtoImpl'
    BulkTaskEditResultDto:
      type: object
      properties:
        allTasksOverwrittenSuccessfully:
          type: boolean
        reasons:
          uniqueItems: true
          type: array
          items:
            type: string
    BulkTaskInfoRequest:
      type: object
      properties:
        name:
          type: string
    BulkUpdateCompaniesRequest:
      type: object
      properties:
        companies:
          type: array
          items:
            $ref: '#/components/schemas/CompanyRequest'
        companiesForCreate:
          type: array
          items:
            $ref: '#/components/schemas/CompanyRequest'
        companiesForUpdate:
          type: array
          items:
            $ref: '#/components/schemas/CompanyRequest'
    BulkUpdateKioskDefaultsRequest:
      type: object
      properties:
        kioskIds:
          uniqueItems: true
          type: array
          items:
            type: string
        kiosks:
          type: array
          items:
            $ref: '#/components/schemas/KioskDefault'
        projectIds:
          uniqueItems: true
          type: array
          items:
            type: string
        taskIds:
          uniqueItems: true
          type: array
          items:
            type: string
    CakeExchangeTokenDto:
      type: object
      properties:
        cakeExchangeToken:
          type: string
        refreshToken:
          type: string
        xAuthToken:
          type: string
    CakeMigrationInput:
      type: object
      properties:
        emails:
          type: array
          items:
            type: string
        invitationWorkspaceId:
          type: string
        workspaceIds:
          type: array
          items:
            type: string
    CakeMigrationRevertStartedRequest:
      type: object
      properties:
        workspaceIds:
          uniqueItems: true
          type: array
          items:
            type: string
    CakeMigrationStartedRequest:
      required:
        - migrationInfoId
        - workspacesToLock
      type: object
      properties:
        cakeMigrationInput:
          $ref: '#/components/schemas/CakeMigrationInput'
        cakeMigrationType:
          type: string
          enum:
            - MANUAL
            - AUTOMATIC
        migrationInfoId:
          type: string
        workspacesToLock:
          type: array
          items:
            type: string
    CakeOrganizationMembershipDto:
      type: object
      properties:
        active:
          type: boolean
        id:
          type: string
        name:
          type: string
        workspaces:
          type: array
          items:
            $ref: '#/components/schemas/CakeWorkspaceMembershipDto'
    CakeWorkspaceMembershipDto:
      type: object
      properties:
        loggedIn:
          type: boolean
        name:
          type: string
        userStatus:
          type: string
        workspaceExternalId:
          type: string
        workspaceStatus:
          type: string
    CanChangePasswordResponse:
      type: object
      properties:
        canChangePassword:
          type: boolean
    CancellationReasonDto:
      type: object
      properties:
        additionalMessage:
          type: string
        initialReason:
          type: string
        message:
          type: string
        movingToAnotherTool:
          type: string
        noLongerNeedReason:
          type: string
        selectedTool:
          type: string
    CaptchaResponseDto:
      type: object
      properties:
        response:
          type: string
        version:
          type: string
    ChangeBalanceRequest:
      required:
        - userIds
        - value
      type: object
      properties:
        note:
          type: string
        userIds:
          uniqueItems: true
          type: array
          items:
            type: string
        value:
          maximum: 10000
          type: number
          format: double
    ChangeBalanceRequestV1:
      required:
        - userIds
        - value
      type: object
      properties:
        note:
          type: string
          description: Represents note attached to updating balance.
          example: Bonus days added.
        userIds:
          uniqueItems: true
          type: array
          description: Represents list of users' identifiers whose balance is to be updated.
          example:
            - 5b715448b079875110792222
            - 5b715448b079875110791111
          items:
            type: string
            description: Represents list of users' identifiers whose balance is to be updated.
            example: '["5b715448b079875110792222","5b715448b079875110791111"]'
        value:
          maximum: 10000
          minimum: -10000
          type: number
          description: Represents new balance value.
          format: double
          example: 22.0
    ChangeEmailRequest:
      required:
        - email
        - passwordConfirm
      type: object
      properties:
        email:
          type: string
          description: Represents email address of the user.
          example: johndoe@example.com
    ChangeInvoiceStatusRequest:
      type: object
      properties:
        invoiceStatus:
          type: string
          enum:
            - UNSENT
            - SENT
            - PAID
            - PARTIALLY_PAID
            - VOID
            - OVERDUE
    ChangeInvoiceStatusRequestV1:
      type: object
      properties:
        invoiceStatus:
          type: string
          description: Represents the invoice status to be set.
          example: PAID
          enum:
            - UNSENT
            - SENT
            - PAID
            - PARTIALLY_PAID
            - VOID
            - OVERDUE
    ChangePolicyStatusRequestV1:
      required:
        - status
      type: object
      properties:
        status:
          type: string
          description: Provide the status you would like to use for changing the policy.
          example: ACTIVE
          enum:
            - ACTIVE
            - ARCHIVED
            - ALL
    ChangeUsernameRequest:
      type: object
      properties:
        name:
          type: string
    ChangeWorkspaceStatusWithNotificationMarkRequest:
      required:
        - notificationId
        - workspaceId
      type: object
      properties:
        notificationId:
          type: string
        status:
          type: string
          enum:
            - PENDING
            - ACTIVE
            - DECLINED
            - INACTIVE
            - ALL
        workspaceId:
          type: string
    CheckUsersResponse:
      type: object
      properties:
        workspaceNonMembers:
          type: array
          items:
            type: string
    ClientDto:
      type: object
      properties:
        address:
          type: string
        archived:
          type: boolean
        currencyId:
          type: string
        email:
          type: string
        id:
          type: string
        name:
          type: string
        note:
          type: string
        workspaceId:
          type: string
    ClientDtoV1:
      type: object
      properties:
        address:
          type: string
          description: Represents client's address.
          example: Ground Floor, ABC Bldg., Palo Alto, California, USA 94020
        archived:
          type: boolean
          description: Represents whether a client is archived or not.
        currencyId:
          type: string
          description: Represents currency identifier across the system.
          example: 33t687e29ae1f428e7ebe505
        email:
          type: string
          description: Represents client email.
          example: clientx@example.com
        id:
          type: string
          description: Represents client identifier across the system.
          example: 44a687e29ae1f428e7ebe305
        name:
          type: string
          description: Represents client name.
          example: Client X
        note:
          type: string
          description: Represents saved notes for the client.
          example: This is a sample note for the client.
        workspaceId:
          type: string
          description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
    ClientIdsRequest:
      type: object
      properties:
        excludedIds:
          uniqueItems: true
          type: array
          items:
            type: string
        ids:
          uniqueItems: true
          type: array
          items:
            type: string
    ClientWithCurrencyDto:
      type: object
      properties:
        address:
          type: string
        archived:
          type: boolean
        currencyCode:
          type: string
        currencyId:
          type: string
        email:
          type: string
        id:
          type: string
        name:
          type: string
        note:
          type: string
        workspaceId:
          type: string
    ClientWithCurrencyDtoV1:
      type: object
      properties:
        address:
          type: string
          description: Represents client's address.
          example: Ground Floor, ABC Bldg., Palo Alto, California, USA 94020
        archived:
          type: boolean
          description: Represents whether a client is archived or not.
        currencyCode:
          type: string
          description: Represents client currency code.
          example: USD
        currencyId:
          type: string
          description: Represents currency identifier across the system.
          example: 33t687e29ae1f428e7ebe505
        email:
          type: string
          description: Represents client email.
          example: clientx@example.com
        id:
          type: string
          description: Represents client identifier across the system.
          example: 44a687e29ae1f428e7ebe305
        name:
          type: string
          description: Represents client name.
          example: Client X
        note:
          type: string
          description: Represents saved notes for the client.
          example: This is a sample note for the client.
        workspaceId:
          type: string
          description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
    CompanyDto:
      type: object
      properties:
        address:
          type: string
        id:
          type: string
        isDefault:
          type: boolean
        name:
          type: string
    CompanyRequest:
      required:
        - name
      type: object
      properties:
        address:
          maxLength: 3000
          minLength: 0
          type: string
        default:
          type: boolean
        id:
          type: string
        isDefault:
          type: boolean
          writeOnly: true
        name:
          maxLength: 2147483647
          minLength: 2
          type: string
    ContainsArchivedFilterRequest:
      type: object
      properties:
        contains:
          type: string
          description: Filter type.
          example: CONTAINS
          enum:
            - CONTAINS
            - DOES_NOT_CONTAIN
            - CONTAINS_ONLY
        ids:
          uniqueItems: true
          type: array
          description: Represents a list of filter identifiers.
          example:
            - 5a0ab5acb07987125438b60f
            - 64c777ddd3fcab07cfbb210c
          items:
            type: string
            description: Represents a list of filter identifiers.
            example: '["5a0ab5acb07987125438b60f","64c777ddd3fcab07cfbb210c"]'
        status:
          type: string
          description: Filters entities by status.
          example: ACTIVE
          enum:
            - PENDING
            - ACTIVE
            - DECLINED
            - INACTIVE
            - ALL
    ContainsClientsFilterRequest:
      type: object
      properties:
        contains:
          type: string
          description: Filter type.
          example: CONTAINS
          enum:
            - CONTAINS
            - DOES_NOT_CONTAIN
            - CONTAINS_ONLY
        ids:
          uniqueItems: true
          type: array
          description: Represents a list of filter identifiers.
          example:
            - 5a0ab5acb07987125438b60f
            - 64c777ddd3fcab07cfbb210c
          items:
            type: string
            description: Represents a list of filter identifiers.
            example: '["5a0ab5acb07987125438b60f","64c777ddd3fcab07cfbb210c"]'
        status:
          type: string
          description: Filters entities by status.
          example: ACTIVE
          enum:
            - PENDING
            - ACTIVE
            - DECLINED
            - INACTIVE
            - ALL
    ContainsCompaniesFilterRequest:
      type: object
      properties:
        contains:
          type: string
          description: Filter type.
          example: CONTAINS
          enum:
            - CONTAINS
            - DOES_NOT_CONTAIN
            - CONTAINS_ONLY
        ids:
          uniqueItems: true
          type: array
          description: Represents a list of filter identifiers.
          example:
            - 5a0ab5acb07987125438b60f
            - 64c777ddd3fcab07cfbb210c
          items:
            type: string
            description: Represents a list of filter identifiers.
            example: '["5a0ab5acb07987125438b60f","64c777ddd3fcab07cfbb210c"]'
        status:
          type: string
          description: Filters entities by status.
          example: ACTIVE
          enum:
            - PENDING
            - ACTIVE
            - DECLINED
            - INACTIVE
            - ALL
    ContainsFilterRequest:
      type: object
      properties:
        contains:
          type: string
          example: CONTAINS
          enum:
            - CONTAINS
            - DOES_NOT_CONTAIN
        ids:
          uniqueItems: true
          type: array
          description: Represents ids upon which filtering is performed.
          example:
            - 5b715612b079875110791111
            - 5b715612b079875110791222
          items:
            type: string
            description: Represents ids upon which filtering is performed.
            example: '["5b715612b079875110791111","5b715612b079875110791222"]'
        status:
          type: string
          description: Represents user status.
          example: ALL
          enum:
            - ALL
            - ACTIVE
            - INACTIVE
    ContainsProjectsFilterRequest:
      type: object
      properties:
        contains:
          type: string
          description: Filter type.
          example: CONTAINS
          enum:
            - CONTAINS
            - DOES_NOT_CONTAIN
            - CONTAINS_ONLY
        ids:
          uniqueItems: true
          type: array
          description: Represents a list of filter identifiers.
          example:
            - 5a0ab5acb07987125438b60f
            - 64c777ddd3fcab07cfbb210c
          items:
            type: string
            description: Represents a list of filter identifiers.
            example: '["5a0ab5acb07987125438b60f","64c777ddd3fcab07cfbb210c"]'
        status:
          type: string
          description: Filters entities by status.
          example: ACTIVE
          enum:
            - PENDING
            - ACTIVE
            - DECLINED
            - INACTIVE
            - ALL
    ContainsUserGroupFilterRequest:
      type: object
      properties:
        contains:
          type: string
          description: Filter type.
          example: CONTAINS
          enum:
            - CONTAINS
            - DOES_NOT_CONTAIN
            - CONTAINS_ONLY
        ids:
          uniqueItems: true
          type: array
          description: Represents a list of filter identifiers.
          example:
            - 5a0ab5acb07987125438b60f
            - 64c777ddd3fcab07cfbb210c
          items:
            type: string
            description: Represents a list of filter identifiers.
            example: '["5a0ab5acb07987125438b60f","64c777ddd3fcab07cfbb210c"]'
        status:
          type: string
          description: Filters entities by status.
          example: ACTIVE
          enum:
            - PENDING
            - ACTIVE
            - DECLINED
            - INACTIVE
            - ALL
    ContainsUserGroupFilterRequestV1:
      type: object
      properties:
        contains:
          type: string
          description: Filter type.
          example: CONTAINS
          enum:
            - CONTAINS
            - DOES_NOT_CONTAIN
            - CONTAINS_ONLY
        ids:
          uniqueItems: true
          type: array
          description: Represents a list of filter identifiers.
          example:
            - 5a0ab5acb07987125438b60f
            - 64c777ddd3fcab07cfbb210c
          items:
            type: string
            description: Represents a list of filter identifiers.
            example: '["5a0ab5acb07987125438b60f","64c777ddd3fcab07cfbb210c"]'
        status:
          type: string
          description: Filters entities by status.
          example: ACTIVE
          enum:
            - PENDING
            - ACTIVE
            - DECLINED
            - INACTIVE
            - ALL
      description: Represents a user group filter request object.
    ContainsUsersFilterRequest:
      type: object
      properties:
        archivedFilterValue:
          type: boolean
        contains:
          type: string
          description: Filter type.
          example: CONTAINS
          enum:
            - CONTAINS
            - DOES_NOT_CONTAIN
            - CONTAINS_ONLY
        ids:
          uniqueItems: true
          type: array
          description: Represents a list of filter identifiers.
          example:
            - 5a0ab5acb07987125438b60f
            - 64c777ddd3fcab07cfbb210c
          items:
            type: string
            description: Represents a list of filter identifiers.
            example: '["5a0ab5acb07987125438b60f","64c777ddd3fcab07cfbb210c"]'
        sourceType:
          type: string
          enum:
            - USER_GROUP
        status:
          type: string
          description: Filters entities by status.
          example: ACTIVE
          enum:
            - PENDING
            - ACTIVE
            - DECLINED
            - INACTIVE
            - ALL
        statuses:
          type: array
          items:
            type: string
            enum:
              - PENDING
              - ACTIVE
              - DECLINED
              - INACTIVE
              - ALL
    ContainsUsersFilterRequestForHoliday:
      type: object
      properties:
        contains:
          type: string
          description: Filter type.
          example: CONTAINS
          enum:
            - CONTAINS
            - DOES_NOT_CONTAIN
            - CONTAINS_ONLY
        ids:
          uniqueItems: true
          type: array
          description: Represents a list of filter identifiers.
          example:
            - 5a0ab5acb07987125438b60f
            - 64c777ddd3fcab07cfbb210c
          items:
            type: string
            description: Represents a list of filter identifiers.
            example: '["5a0ab5acb07987125438b60f","64c777ddd3fcab07cfbb210c"]'
        status:
          type: string
          description: Filters entities by status.
          example: ACTIVE
          enum:
            - PENDING
            - ACTIVE
            - DECLINED
            - INACTIVE
            - ALL
        statuses:
          type: array
          items:
            type: string
    ContainsUsersFilterRequestV1:
      type: object
      properties:
        contains:
          type: string
          description: Filter type.
          example: CONTAINS
          enum:
            - CONTAINS
            - DOES_NOT_CONTAIN
            - CONTAINS_ONLY
        ids:
          uniqueItems: true
          type: array
          description: Represents a list of filter identifiers.
          example:
            - 5a0ab5acb07987125438b60f
            - 64c777ddd3fcab07cfbb210c
          items:
            type: string
            description: Represents a list of filter identifiers.
            example: '["5a0ab5acb07987125438b60f","64c777ddd3fcab07cfbb210c"]'
        sourceType:
          type: string
          description: Valid authorization source type.
          example: USER_GROUP
          enum:
            - USER_GROUP
        status:
          type: string
          description: Filters entities by status.
          example: ACTIVE
          enum:
            - PENDING
            - ACTIVE
            - DECLINED
            - INACTIVE
            - ALL
        statuses:
          type: array
          description: Valid array of membership statuses.
          example:
            - PENDING
            - INACTIVE
          items:
            type: string
            description: Valid array of membership statuses.
            example: '["PENDING","INACTIVE"]'
            enum:
              - PENDING
              - ACTIVE
              - DECLINED
              - INACTIVE
              - ALL
      description: Represents a user filter request object.
    CopiedEntriesDto:
      type: object
      properties:
        entriesCreated:
          type: array
          items:
            $ref: '#/components/schemas/TimeEntryWithCustomFieldsDto'
        entriesSkipped:
          type: integer
          format: int32
    CopyAssignmentRequest:
      required:
        - userId
      type: object
      properties:
        seriesUpdateOption:
          type: string
          enum:
            - THIS_ONE
            - THIS_AND_FOLLOWING
            - ALL
        userId:
          type: string
    CopyAssignmentRequestV1:
      required:
        - userId
      type: object
      properties:
        seriesUpdateOption:
          type: string
          description: Represents series update option.
          example: THIS_ONE
          enum:
            - THIS_ONE
            - THIS_AND_FOLLOWING
            - ALL
        userId:
          type: string
          description: Represents user identifier across the system.
          example: 72k687e29ae1f428e7ebe109
    CopyEntriesRequest:
      type: object
      properties:
        dayOffset:
          type: integer
          format: int32
        end:
          type: string
          format: date-time
        start:
          type: string
          format: date-time
    CostRateRequest:
      type: object
      properties:
        amount:
          minimum: 0
          type: integer
          description: Represents an amount as integer.
          format: int32
          example: 2000
        since:
          type: string
          description: Represents a datetime in yyyy-MM-ddThh:mm:ssZ format.
          example: "2020-01-01T00:00:00Z"
        sinceAsInstant:
          type: string
          format: date-time
    CostRateRequestV1:
      required:
        - amount
      type: object
      properties:
        amount:
          minimum: 0
          type: integer
          description: Represents an amount as integer.
          format: int32
          example: 20000
        since:
          type: string
          description: Represents a date and time in yyyy-MM-ddThh:mm:ssZ format.
          example: "2020-01-01T00:00:00Z"
    CreateAlertRequest:
      type: object
      properties:
        alertPerson:
          type: string
          enum:
            - WORKSPACE_ADMIN
            - PROJECT_MANAGER
            - TEAM_MEMBERS
        alertType:
          type: string
          enum:
            - PROJECT
            - TASK
        percentage:
          type: number
          format: double
    CreateApprovalRequest:
      required:
        - periodStart
      type: object
      properties:
        period:
          type: string
          description: Specifies the approval period. It has to match the workspace approval period setting.
          example: MONTHLY
          enum:
            - WEEKLY
            - SEMI_MONTHLY
            - MONTHLY
        periodStart:
          type: string
          description: Specifies an approval period start date in yyyy-MM-ddThh:mm:ssZ format.
          example: "2020-01-01T00:00:00.000Z"
    CreateClientRequest:
      required:
        - name
      type: object
      properties:
        address:
          maxLength: 3000
          minLength: 0
          type: string
        email:
          type: string
        name:
          maxLength: 100
          minLength: 0
          type: string
        note:
          maxLength: 3000
          minLength: 0
          type: string
    CreateClientRequestV1:
      required:
        - name
      type: object
      properties:
        address:
          maxLength: 3000
          minLength: 0
          type: string
          description: Represents client's address.
          example: Ground Floor, ABC Bldg., Palo Alto, California, USA 94020
        email:
          type: string
          description: Represents client email.
          example: clientx@example.com
        name:
          maxLength: 100
          minLength: 0
          type: string
          description: Represents client name.
          example: Client X
        note:
          maxLength: 3000
          minLength: 0
          type: string
          description: Represents additional notes for the client.
          example: This is a sample note for the client.
    CreateCurrencyRequest:
      required:
        - code
      type: object
      properties:
        code:
          maxLength: 100
          minLength: 1
          type: string
    CreateCustomAttributeRequest:
      required:
        - name
        - namespace
        - value
      type: object
      properties:
        name:
          type: string
          description: Represents custom attribute name.
          example: race
        namespace:
          type: string
          description: Represents custom attribute namespace.
          example: user_info
        value:
          type: string
          description: Represents custom attribute value.
          example: Asian
    CreateEmailContentRequest:
      required:
        - body
        - subject
      type: object
      properties:
        body:
          type: string
        subject:
          type: string
    CreateExpenseRequest:
      required:
        - amount
        - userId
      type: object
      properties:
        amount:
          maximum: 92233720368547758
          type: number
          format: double
        billable:
          type: boolean
        categoryId:
          type: string
        date:
          type: string
          format: date-time
        file:
          type: string
          format: binary
        notes:
          maxLength: 3000
          minLength: 0
          type: string
        projectId:
          type: string
        taskId:
          type: string
        userId:
          type: string
    CreateExpenseV1Request:
      required:
        - amount
        - categoryId
        - date
        - file
        - projectId
        - userId
      type: object
      properties:
        amount:
          maximum: 92233720368547758
          type: number
          description: Represents expense amount as double data type.
          format: double
          example: 99.5
        billable:
          type: boolean
          description: Indicates whether expense is billable or not.
        categoryId:
          type: string
          description: Represents category identifier across the system.
          example: 45y687e29ae1f428e7ebe890
        date:
          type: string
          description: Provides a valid yyyy-MM-ddThh:mm:ssZ format date.
          format: date-time
          example: "2020-01-01T00:00:00Z"
        file:
          type: string
          format: binary
        notes:
          maxLength: 3000
          minLength: 0
          type: string
          description: Represents notes for an expense.
          example: This is a sample note for this expense.
        projectId:
          type: string
          description: Represents project identifier across the system.
          example: 25b687e29ae1f428e7ebe123
        taskId:
          type: string
          description: Represents task identifier across the system.
          example: 54m377ddd3fcab07cfbb432w
        userId:
          type: string
          description: Represents user identifier across the system.
          example: 89b687e29ae1f428e7ebe912
    CreateFavoriteEntriesRequest:
      type: object
      properties:
        billable:
          type: boolean
        clientId:
          type: string
        customFields:
          type: array
          items:
            $ref: '#/components/schemas/UpdateCustomFieldRequest'
        description:
          type: string
        name:
          type: string
        projectId:
          type: string
        tagIds:
          type: array
          items:
            type: string
        taskId:
          type: string
        type:
          type: string
          enum:
            - REGULAR
            - BREAK
            - HOLIDAY
            - TIME_OFF
    CreateHolidayRequestV1:
      required:
        - datePeriod
        - name
      type: object
      properties:
        automaticTimeEntryCreation:
          $ref: '#/components/schemas/AutomaticTimeEntryCreationRequest'
        color:
          pattern: ^#(?:[0-9a-fA-F]{6}){1}$
          type: string
          description: 'Provide color in format ^#(?:[0-9a-fA-F]{6}){1}$. Explanation: A valid color code should start with ''#'' and consist of six hexadecimal characters, representing a color in hexadecimal format. Color value is in standard RGB hexadecimal format.'
          example: '#8BC34A'
        datePeriod:
          $ref: '#/components/schemas/DatePeriodRequest'
        everyoneIncludingNew:
          type: boolean
          description: Indicates whether the holiday is shown to new users.
          example: true
        name:
          maxLength: 100
          minLength: 2
          type: string
          description: Provide the name of the holiday.
          example: Labour Day
        occursAnnually:
          type: boolean
          description: Indicates whether the holiday occurs annually.
          example: true
        userGroups:
          $ref: '#/components/schemas/UserGroupIdsSchema'
        users:
          $ref: '#/components/schemas/UserIdsSchema'
    CreateInvoiceDto:
      type: object
      properties:
        billFrom:
          type: string
        clientId:
          type: string
        currency:
          type: string
        dueDate:
          type: string
          format: date-time
        id:
          type: string
        issuedDate:
          type: string
          format: date-time
        number:
          type: string
    CreateInvoiceDtoV1:
      type: object
      properties:
        billFrom:
          type: string
          description: Represents to whom the invoice should be billed from.
          example: Business X
        clientId:
          type: string
          description: Represents client identifier across the system.
          example: 34p687e29ae1f428e7ebe562
        currency:
          type: string
          description: Represents the currency used by the invoice.
          example: USD
        dueDate:
          type: string
          description: Represents an invoice due date in yyyy-MM-ddThh:mm:ssZ format.
          format: date-time
          example: "2020-06-01T08:00:00Z"
        id:
          type: string
          description: Represents invoice identifier across the system.
          example: 78a687e29ae1f428e7ebe303
        issuedDate:
          type: string
          description: Represents an invoice issued date in yyyy-MM-ddThh:mm:ssZ format.
          format: date-time
          example: "2020-01-01T08:00:00Z"
        number:
          type: string
          description: Represents an invoice number.
          example: "202306121129"
    CreateInvoiceEmailTemplateRequest:
      required:
        - emailContent
      type: object
      properties:
        emailContent:
          $ref: '#/components/schemas/CreateEmailContentRequest'
        invoiceEmailTemplateType:
          type: string
    CreateInvoiceItemTypeDto:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    CreateInvoiceItemTypeRequest:
      required:
        - name
      type: object
      properties:
        name:
          type: string
    CreateInvoicePaymentRequest:
      type: object
      properties:
        amount:
          minimum: 1
          type: integer
          description: Represents an invoice payment amount as long.
          format: int64
          example: 100
        note:
          maxLength: 1000
          minLength: 0
          type: string
          description: Represents an invoice payment note.
          example: This is a sample note for this invoice payment.
        paymentDate:
          type: string
          description: Represents an invoice payment date in yyyy-MM-ddThh:mm:ssZ format.
          example: "2021-01-01T12:00:00Z"
    CreateInvoiceRequest:
      required:
        - clientId
        - currency
        - dueDate
        - issuedDate
        - number
      type: object
      properties:
        clientId:
          type: string
          description: Represents client identifier across the system.
          example: 98h687e29ae1f428e7ebe707
        currency:
          type: string
          description: Represents the currency used by the invoice.
          example: USD
        dueDate:
          type: string
          description: Represents an invoice due date in yyyy-MM-ddThh:mm:ssZ format.
          format: date-time
          example: "2020-06-01T08:00:00Z"
        issuedDate:
          type: string
          description: Represents an invoice issued date in yyyy-MM-ddThh:mm:ssZ format.
          format: date-time
          example: "2020-01-01T08:00:00Z"
        number:
          type: string
          description: Represents an invoice number.
          example: "202306121129"
    CreateKioskRequest:
      required:
        - name
      type: object
      properties:
        defaultBreakProjectId:
          type: string
        defaultBreakTaskId:
          type: string
        defaultEntities:
          $ref: '#/components/schemas/DefaultKioskEntitiesRequest'
        defaultProjectId:
          type: string
        defaultTaskId:
          type: string
        everyoneIncludingNew:
          type: boolean
        groups:
          $ref: '#/components/schemas/ContainsUserGroupFilterRequest'
        name:
          maxLength: 250
          minLength: 2
          pattern: ^[^!@#$%^&*()\-_=+\[\]{}|;:'",./?<>~`¦¬¢£€¥©®™§°µπ∆∞‰≠∑]+$
          type: string
        pin:
          $ref: '#/components/schemas/PinSettingRequest'
        sessionDuration:
          type: integer
          format: int32
        users:
          $ref: '#/components/schemas/ContainsUsersFilterRequest'
    CreateOrganizationRequest:
      type: object
      properties:
        organizationName:
          type: string
    CreatePolicyRequest:
      required:
        - approve
        - name
      type: object
      properties:
        allowHalfDay:
          type: boolean
        allowNegativeBalance:
          type: boolean
        approve:
          $ref: '#/components/schemas/ApproveDto'
        archived:
          type: boolean
        automaticAccrual:
          $ref: '#/components/schemas/AutomaticAccrualRequest'
        automaticTimeEntryCreation:
          $ref: '#/components/schemas/AutomaticTimeEntryCreationRequest'
        color:
          pattern: ^#(?:[0-9a-fA-F]{6}){1}$
          type: string
        everyoneIncludingNew:
          type: boolean
        name:
          type: string
        negativeBalance:
          $ref: '#/components/schemas/NegativeBalanceRequest'
        timeUnit:
          type: string
        userGroups:
          $ref: '#/components/schemas/ContainsFilterRequest'
        users:
          $ref: '#/components/schemas/ContainsFilterRequest'
    CreatePolicyRequestV1:
      required:
        - approve
        - name
      type: object
      properties:
        allowHalfDay:
          type: boolean
          description: Indicates whether policy allows half days.
          example: false
        allowNegativeBalance:
          type: boolean
          description: Indicates whether policy allows negative balances.
          example: true
        approve:
          $ref: '#/components/schemas/ApproveDto'
        archived:
          type: boolean
          description: Indicates whether policy is archived.
          example: true
        automaticAccrual:
          $ref: '#/components/schemas/AutomaticAccrualRequest'
        automaticTimeEntryCreation:
          $ref: '#/components/schemas/AutomaticTimeEntryCreationRequest'
        color:
          pattern: ^#(?:[0-9a-fA-F]{6}){1}$
          type: string
          description: 'Provide color in format ^#(?:[0-9a-fA-F]{6}){1}$. Explanation: A valid color code should start with ''#'' and consist of six hexadecimal characters, representing a color in hexadecimal format. Color value is in standard RGB hexadecimal format.'
          example: '#8BC34A'
        everyoneIncludingNew:
          type: boolean
          description: Indicates whether the policy is to be applied to future new users.
          example: false
        name:
          type: string
          description: Represents name of new policy.
          example: Mental health days
        negativeBalance:
          $ref: '#/components/schemas/NegativeBalanceRequest'
        timeUnit:
          type: string
          description: 'Indicates time unit of the policy. '
          example: DAYS
          enum:
            - DAYS
            - HOURS
        userGroups:
          $ref: '#/components/schemas/UserGroupIdsSchema'
        users:
          $ref: '#/components/schemas/UserIdsSchema'
    CreateProjectRequest:
      required:
        - name
      type: object
      properties:
        billable:
          type: boolean
        clientId:
          type: string
        color:
          pattern: ^#(?:[0-9a-fA-F]{6}){1}$
          type: string
        estimate:
          $ref: '#/components/schemas/EstimateRequest'
        hourlyRate:
          $ref: '#/components/schemas/HourlyRateRequest'
        isPublic:
          type: boolean
        memberships:
          type: array
          items:
            $ref: '#/components/schemas/MembershipRequest'
        name:
          type: string
        public:
          type: boolean
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/TaskRequest'
    CreateReminderRequest:
      type: object
      properties:
        dateRange:
          type: string
          enum:
            - DAY
            - WEEK
            - MONTH
        days:
          type: array
          items:
            type: integer
            format: int32
        hours:
          minimum: 0
          type: number
          format: double
        less:
          type: boolean
        receivers:
          type: array
          items:
            type: string
        users:
          $ref: '#/components/schemas/ContainsUsersFilterRequest'
    CreateSubscriptionQuantityRequest:
      required:
        - regularQuantity
      type: object
      properties:
        limitedQuantity:
          type: integer
          format: int32
        quantity:
          type: integer
          format: int32
          writeOnly: true
        regularQuantity:
          type: integer
          format: int32
    CreateTimeEntryForManyRequest:
      type: object
      properties:
        billable:
          type: boolean
        customFields:
          type: array
          items:
            $ref: '#/components/schemas/UpdateCustomFieldRequest'
        description:
          maxLength: 3000
          minLength: 0
          type: string
        end:
          type: string
          format: date-time
        projectId:
          type: string
        start:
          type: string
          format: date-time
        tagIds:
          uniqueItems: true
          type: array
          items:
            type: string
        taskId:
          type: string
        userGroups:
          $ref: '#/components/schemas/ContainsUsersFilterRequest'
        users:
          $ref: '#/components/schemas/ContainsUsersFilterRequest'
    CreateTimeEntryRequest:
      type: object
      properties:
        billable:
          type: boolean
        customAttributes:
          maxItems: 10
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/CreateCustomAttributeRequest'
        customFields:
          maxItems: 50
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/UpdateCustomFieldRequest'
        description:
          maxLength: 3000
          minLength: 0
          type: string
        end:
          type: string
          format: date-time
        projectId:
          type: string
        start:
          type: string
          format: date-time
        startAsString:
          type: string
        tagIds:
          type: array
          items:
            type: string
        taskId:
          type: string
        type:
          type: string
    CreateTimeOffRequestRequest:
      required:
        - timeOffPeriod
      type: object
      properties:
        note:
          type: string
        timeOffPeriod:
          $ref: '#/components/schemas/TimeOffRequestPeriodRequest'
    CreateTimeOffRequestV1Request:
      required:
        - timeOffPeriod
      type: object
      properties:
        note:
          type: string
          description: Provide the note you would like to use for creating the time off request.
          example: Create Time Off Note
        timeOffPeriod:
          $ref: '#/components/schemas/TimeOffRequestPeriodV1Request'
    CreateUserGroupRequest:
      required:
        - name
      type: object
      properties:
        name:
          maxLength: 100
          minLength: 0
          type: string
    CreateWebhookRequestV1:
      required:
        - triggerSource
        - triggerSourceType
        - url
        - webhookEvent
      type: object
      properties:
        name:
          maxLength: 30
          minLength: 2
          type: string
          description: Represents webhook name.
          example: stripe
        triggerSource:
          type: array
          description: Represents a list of trigger sources.
          example:
            - 54a687e29ae1f428e7ebe909
            - 87p187e29ae1f428e7ebej56
          items:
            type: string
            description: Represents a list of trigger sources.
            example: '["54a687e29ae1f428e7ebe909","87p187e29ae1f428e7ebej56"]'
        triggerSourceType:
          type: string
          description: Represents a webhook event trigger source type.
          example: PROJECT_ID
          enum:
            - PROJECT_ID
            - USER_ID
            - TAG_ID
            - TASK_ID
            - WORKSPACE_ID
            - USER_GROUP_ID
            - INVOICE_ID
            - ASSIGNMENT_ID
            - EXPENSE_ID
        url:
          type: string
          description: Represents webhook target url.
          example: https://example-clockify.com/stripeEndpoint
        webhookEvent:
          type: string
          description: Represents webhook event type.
          enum:
            - NEW_PROJECT
            - NEW_TASK
            - NEW_CLIENT
            - NEW_TIMER_STARTED
            - TIMER_STOPPED
            - TIME_ENTRY_UPDATED
            - TIME_ENTRY_DELETED
            - NEW_TIME_ENTRY
            - NEW_TAG
            - USER_DELETED_FROM_WORKSPACE
            - USER_JOINED_WORKSPACE
            - USER_DEACTIVATED_ON_WORKSPACE
            - USER_ACTIVATED_ON_WORKSPACE
            - USER_EMAIL_CHANGED
            - USER_UPDATED
            - NEW_INVOICE
            - INVOICE_UPDATED
            - NEW_APPROVAL_REQUEST
            - APPROVAL_REQUEST_STATUS_UPDATED
            - TIME_OFF_REQUESTED
            - TIME_OFF_REQUEST_APPROVED
            - TIME_OFF_REQUEST_REJECTED
            - TIME_OFF_REQUEST_WITHDRAWN
            - BALANCE_UPDATED
    CreateWorkspaceRequest:
      required:
        - name
      type: object
      properties:
        cakeOrganizationId:
          type: string
        name:
          type: string
        organizationId:
          type: string
          writeOnly: true
    CreteFromTemplateRequest:
      required:
        - name
        - templateId
      type: object
      properties:
        clientId:
          type: string
        color:
          pattern: ^#(?:[0-9a-fA-F]{6}){1}$
          type: string
        isPublic:
          type: boolean
        name:
          type: string
        public:
          type: boolean
        templateId:
          type: string
    CurrencyDto:
      type: object
      properties:
        code:
          type: string
        id:
          type: string
    CurrencyWithAmountDto:
      type: object
      properties:
        amount:
          type: integer
          format: int64
        currency:
          type: string
    CurrencyWithDefaultInfoDtoV1:
      type: object
      properties:
        code:
          type: string
          description: Represents currency code.
          example: USD
        id:
          type: string
          description: Represents currency identifier across the system.
          example: 5b641568b07987035750505e
        isDefault:
          type: boolean
          description: Indicates whether curency should be set as default.
          example: true
      description: Represents currency with default info object.
    CustomAttributeDto:
      type: object
      properties:
        entityId:
          type: string
        entityType:
          type: string
        name:
          type: string
        namespace:
          type: string
        value:
          type: string
        workspaceId:
          type: string
    CustomEmailsSettingsDto:
      type: object
      properties:
        errorEmail:
          type: string
        supportEmail:
          type: string
        teamEmail:
          type: string
    CustomEmailsSettingsRequest:
      type: object
      properties:
        errorEmail:
          type: string
        supportEmail:
          type: string
        teamEmail:
          type: string
    CustomFieldDefaultValuesDto:
      type: object
      properties:
        projectId:
          type: string
        status:
          type: string
        value:
          type: object
    CustomFieldDefaultValuesDtoV1:
      type: object
      properties:
        projectId:
          type: string
          description: Represents project identifier across the system.
          example: 5b641568b07987035750505e
        status:
          type: string
          description: Represents custom field status
          example: VISIBLE
        value:
          type: object
          description: Represents a custom field's default value
          example: NA
      description: Represents a list of custom field default values data transfer objects.
    CustomFieldDto:
      type: object
      properties:
        allowedValues:
          type: array
          items:
            type: string
        description:
          type: string
        entityType:
          type: string
        id:
          type: string
        name:
          type: string
        onlyAdminCanEdit:
          type: boolean
        placeholder:
          type: string
        projectDefaultValues:
          type: array
          items:
            $ref: '#/components/schemas/CustomFieldDefaultValuesDto'
        required:
          type: boolean
        status:
          type: string
        type:
          type: string
        workspaceDefaultValue:
          type: object
        workspaceId:
          type: string
    CustomFieldDtoV1:
      type: object
      properties:
        allowedValues:
          type: array
          description: Represents a list of custom field's allowed values.
          example:
            - NA
            - White
            - Black
            - Asian
            - Hispanic
          items:
            type: string
            description: Represents a list of custom field's allowed values.
            example: '["NA","White","Black","Asian","Hispanic"]'
        description:
          type: string
          description: Represents custom field description.
          example: This field contains a user's race.
        entityType:
          type: string
          description: Represents custom field entity type
          example: USER
        id:
          type: string
          description: Represents custom field identifier across the system.
          example: 44a687e29ae1f428e7ebe305
        name:
          type: string
          description: Represents custom field name.
          example: race
        onlyAdminCanEdit:
          type: boolean
          description: Flag to set whether custom field is modifiable only by admin users.
        placeholder:
          type: string
          description: Represents custom field placeholder value.
          example: Race/ethnicity
        projectDefaultValues:
          type: array
          description: Represents a list of custom field default values data transfer objects.
          items:
            $ref: '#/components/schemas/CustomFieldDefaultValuesDtoV1'
        required:
          type: boolean
          description: Flag to set whether custom field is mandatory or not.
        status:
          type: string
          description: Represents custom field status
          example: VISIBLE
        type:
          type: string
          description: Represents custom field type.
          example: DROPDOWN_MULTIPLE
        workspaceDefaultValue:
          type: object
          description: Represents a custom field's default value in the workspace.
          example: NA
        workspaceId:
          type: string
          description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
    CustomFieldFilter:
      type: object
      properties:
        empty:
          type: boolean
        id:
          type: string
        isEmpty:
          type: boolean
          writeOnly: true
        numberComparison:
          type: string
        type:
          type: string
        value:
          type: object
    CustomFieldProjectDefaultValuesRequest:
      type: object
      properties:
        defaultValue:
          type: object
          description: Represents a custom field's default value.
          example: NA
        status:
          type: string
          description: Represents custom field status.
          example: VISIBLE
          enum:
            - INACTIVE
            - VISIBLE
            - INVISIBLE
    CustomFieldRequest:
      required:
        - name
      type: object
      properties:
        allowedValues:
          type: array
          items:
            type: string
        description:
          type: string
        entityType:
          type: string
        name:
          type: string
        onlyAdminCanEdit:
          type: boolean
        placeholder:
          type: string
        required:
          type: boolean
        status:
          type: string
          enum:
            - INACTIVE
            - VISIBLE
            - INVISIBLE
        type:
          type: string
          enum:
            - TXT
            - NUMBER
            - DROPDOWN_SINGLE
            - DROPDOWN_MULTIPLE
            - CHECKBOX
            - LINK
        workspaceDefaultValue:
          type: object
    CustomFieldRequestV1:
      required:
        - name
        - type
      type: object
      properties:
        allowedValues:
          type: array
          items:
            type: string
        description:
          type: string
        entityType:
          type: string
        name:
          type: string
        onlyAdminCanEdit:
          type: boolean
        placeholder:
          type: string
        type:
          type: string
          enum:
            - TXT
            - NUMBER
            - DROPDOWN_SINGLE
            - DROPDOWN_MULTIPLE
            - CHECKBOX
            - LINK
        workspaceDefaultValue:
          type: object
          description: <li>if type = NUMBER, then value must be a number</li><li>if type = DROPDOWN_MULTIPLE, value must be a list</li><li>if type = CHECKBOX, value must be true/false</li><li>otherwise any string</li>
    CustomFieldRequiredAvailabilityDto:
      type: object
      properties:
        allowedValues:
          type: array
          items:
            type: string
        description:
          type: string
        entityType:
          type: string
        id:
          type: string
        name:
          type: string
        onlyAdminCanEdit:
          type: boolean
        placeholder:
          type: string
        projectDefaultValues:
          type: array
          items:
            $ref: '#/components/schemas/CustomFieldDefaultValuesDto'
        required:
          type: boolean
        requiredStatus:
          $ref: '#/components/schemas/CustomFieldRequiredStatusDto'
        status:
          type: string
        type:
          type: string
        workspaceDefaultValue:
          type: object
        workspaceId:
          type: string
    CustomFieldRequiredStatusDto:
      type: object
      properties:
        canBeRequired:
          type: boolean
        reason:
          type: string
    CustomFieldType:
      type: object
      description: Represents custom field type.
      example: TXT
      oneOf:
        - type: string
          enum:
            - TXT
            - NUMBER
            - DROPDOWN_SINGLE
            - DROPDOWN_MULTIPLE
            - CHECKBOX
            - LINK
      properties:
        CHECKBOX:
          type: string
          enum:
            - TXT
            - NUMBER
            - DROPDOWN_SINGLE
            - DROPDOWN_MULTIPLE
            - CHECKBOX
            - LINK
        DROPDOWN_MULTIPLE:
          type: string
          enum:
            - TXT
            - NUMBER
            - DROPDOWN_SINGLE
            - DROPDOWN_MULTIPLE
            - CHECKBOX
            - LINK
        DROPDOWN_SINGLE:
          type: string
          enum:
            - TXT
            - NUMBER
            - DROPDOWN_SINGLE
            - DROPDOWN_MULTIPLE
            - CHECKBOX
            - LINK
        LINK:
          type: string
          enum:
            - TXT
            - NUMBER
            - DROPDOWN_SINGLE
            - DROPDOWN_MULTIPLE
            - CHECKBOX
            - LINK
        NUMBER:
          type: string
          enum:
            - TXT
            - NUMBER
            - DROPDOWN_SINGLE
            - DROPDOWN_MULTIPLE
            - CHECKBOX
            - LINK
        TXT:
          type: string
          enum:
            - TXT
            - NUMBER
            - DROPDOWN_SINGLE
            - DROPDOWN_MULTIPLE
            - CHECKBOX
            - LINK
    CustomFieldValueDto:
      type: object
      properties:
        customFieldId:
          type: string
          description: Represents custom field identifier across the system.
          example: 44a687e29ae1f428e7ebe305
        sourceType:
          type: string
          description: Represents a custom field value source type.
          example: WORKSPACE
          enum:
            - WORKSPACE
            - PROJECT
            - TIMEENTRY
        timeEntryId:
          type: string
          description: Represents time entry identifier across the system.
          example: 64c777ddd3fcab07cfbb210c
        value:
          type: object
          description: Represents custom field value.
          example: 20231211-12345
    CustomFieldValueDtoV1:
      type: object
      properties:
        customFieldId:
          type: string
          description: Represents custom field identifier across the system.
          example: 5e4117fe8c625f38930d57b7
        name:
          type: string
          description: Represents custom field name.
          example: TIN
        timeEntryId:
          type: string
          description: Represents time entry identifier across the system.
          example: 64c777ddd3fcab07cfbb210c
        type:
          type: string
          description: Represents a custom field value source type.
          example: WORKSPACE
        value:
          type: object
          description: Represents custom field value.
          example: 20231211-12345
      description: Represents a list of custom field value objects.
    CustomFieldValueFullDto:
      type: object
      properties:
        customField:
          $ref: '#/components/schemas/CustomFieldDto'
        customFieldDto:
          $ref: '#/components/schemas/CustomFieldDto'
        customFieldId:
          type: string
        name:
          type: string
        sourceType:
          type: string
        timeEntryId:
          type: string
        type:
          type: string
        value:
          type: object
    CustomLabelsDto:
      type: object
      properties:
        projectGroupingLabel:
          type: string
        projectLabel:
          type: string
        taskLabel:
          type: string
    CustomLabelsRequest:
      type: object
      properties:
        projectGroupingLabel:
          maxLength: 200
          minLength: 1
          type: string
        projectLabel:
          maxLength: 200
          minLength: 1
          type: string
        taskLabel:
          maxLength: 200
          minLength: 1
          type: string
    CustomSupportLinksSettings:
      type: object
      properties:
        customLinks:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Link'
        enabled:
          type: boolean
    CustomSupportLinksSettingsDto:
      type: object
      properties:
        customLinks:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/LinkDto'
        enabled:
          type: boolean
    CustomSupportLinksSettingsRequest:
      type: object
      properties:
        customLinks:
          uniqueItems: true
          type: array
          writeOnly: true
          items:
            $ref: '#/components/schemas/LinkRequest'
        enabled:
          type: boolean
        links:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/LinkRequest'
    CustomerBillingInformationDto:
      type: object
      properties:
        accountType:
          type: string
        address1:
          type: string
        address2:
          type: string
        billingCountry:
          type: string
        city:
          type: string
        companyName:
          type: string
        country:
          type: string
        currency:
          type: string
        email:
          type: string
        source:
          type: string
        state:
          type: string
        taxIds:
          type: object
          additionalProperties:
            type: string
        zip:
          type: string
    CustomerBillingRequest:
      type: object
      properties:
        companyName:
          type: string
        customerId:
          type: string
        email:
          type: string
        invoiceAddress1:
          type: string
        invoiceAddress2:
          type: string
        invoiceCity:
          type: string
        invoiceZip:
          type: string
        taxIds:
          type: object
          additionalProperties:
            type: string
    CustomerDto:
      type: object
      properties:
        countryCode:
          type: string
        source:
          type: string
          enum:
            - CAKE_AG
            - COING_INC
            - CAKE_INC
            - CSM_CAKE_AG
    CustomerInformationDto:
      type: object
      properties:
        account:
          type: string
        customerId:
          type: string
    CustomerPaymentInformationDto:
      type: object
      properties:
        cardExpMonth:
          type: string
        cardExpYear:
          type: string
        cardHolder:
          type: string
        city:
          type: string
        country:
          type: string
        last4:
          type: string
        state:
          type: string
        street:
          type: string
        type:
          type: string
        zip:
          type: string
    CustomerRequest:
      type: object
      properties:
        accountType:
          type: string
        country:
          type: string
        state:
          type: string
    DatePeriod:
      type: object
      properties:
        endDate:
          type: string
          format: date
        startDate:
          type: string
          format: date
      description: Represents startDate and endDate of the holiday. Date is in format yyyy-mm-dd
    DatePeriodRequest:
      required:
        - endDate
        - startDate
      type: object
      properties:
        endDate:
          type: string
          description: yyyy-MM-dd format date
          example: "2023-02-16"
        startDate:
          type: string
          description: yyyy-MM-dd format date
          example: "2023-02-14"
    DateRange:
      type: object
      properties:
        end:
          type: string
          format: date-time
        start:
          type: string
          format: date-time
    DateRangeDto:
      type: object
      properties:
        end:
          type: string
          format: date-time
        start:
          type: string
          format: date-time
    DayOfWeek:
      type: object
      description: Represents a day of the week.
      example: MONDAY
      oneOf:
        - type: string
          enum:
            - MONDAY
            - TUESDAY
            - WEDNESDAY
            - THURSDAY
            - FRIDAY
            - SATURDAY
            - SUNDAY
      properties:
        FRIDAY:
          type: string
          enum:
            - MONDAY
            - TUESDAY
            - WEDNESDAY
            - THURSDAY
            - FRIDAY
            - SATURDAY
            - SUNDAY
        MONDAY:
          type: string
          enum:
            - MONDAY
            - TUESDAY
            - WEDNESDAY
            - THURSDAY
            - FRIDAY
            - SATURDAY
            - SUNDAY
        SATURDAY:
          type: string
          enum:
            - MONDAY
            - TUESDAY
            - WEDNESDAY
            - THURSDAY
            - FRIDAY
            - SATURDAY
            - SUNDAY
        SUNDAY:
          type: string
          enum:
            - MONDAY
            - TUESDAY
            - WEDNESDAY
            - THURSDAY
            - FRIDAY
            - SATURDAY
            - SUNDAY
        THURSDAY:
          type: string
          enum:
            - MONDAY
            - TUESDAY
            - WEDNESDAY
            - THURSDAY
            - FRIDAY
            - SATURDAY
            - SUNDAY
        TUESDAY:
          type: string
          enum:
            - MONDAY
            - TUESDAY
            - WEDNESDAY
            - THURSDAY
            - FRIDAY
            - SATURDAY
            - SUNDAY
        WEDNESDAY:
          type: string
          enum:
            - MONDAY
            - TUESDAY
            - WEDNESDAY
            - THURSDAY
            - FRIDAY
            - SATURDAY
            - SUNDAY
        value:
          type: integer
          format: int32
    DefaultBreakEntitiesDto:
      type: object
      properties:
        projectId:
          type: string
        taskId:
          type: string
    DefaultBreakEntitiesRequest:
      type: object
      properties:
        projectId:
          type: string
        taskId:
          type: string
    DefaultEntitiesDto:
      type: object
      properties:
        projectId:
          type: string
        taskId:
          type: string
    DefaultEntitiesRequest:
      type: object
      properties:
        projectId:
          type: string
          description: Default project for automatically created time entries
        taskId:
          type: string
          description: Default task for automatically created time entries
      description: Provides information about default project and task for automatically created time entries.
    DefaultKioskEntitiesRequest:
      type: object
      properties:
        breakProjectId:
          type: string
        breakTaskId:
          type: string
        projectId:
          type: string
        taskId:
          type: string
    DefaultWorkspaceRequest:
      type: object
      properties:
        enabled:
          type: boolean
        id:
          type: string
        workspaceId:
          type: string
    DeleteCustomAttributeRequest:
      required:
        - name
        - namespace
      type: object
      properties:
        name:
          type: string
        namespace:
          type: string
    DisableAccessRequest:
      type: object
      properties:
        accessDisabledDetails:
          type: object
          additionalProperties:
            type: string
        entityId:
          type: string
        entityType:
          type: string
          enum:
            - USER
            - WORKSPACE
        reason:
          type: string
    DisableAccessToEntitiesInTransferRequest:
      type: object
      properties:
        accessDisabledDetails:
          type: object
          additionalProperties:
            type: string
        domainName:
          type: string
        reason:
          type: string
        userEmails:
          uniqueItems: true
          type: array
          items:
            type: string
        workspaceId:
          type: string
    DiscardStopwatchRequest:
      type: object
      properties:
        userId:
          type: string
    DomainDto:
      type: object
      properties:
        enabled:
          type: boolean
          writeOnly: true
        id:
          type: string
        name:
          type: string
        valid:
          type: boolean
    DomainDtoAndCount:
      type: object
      properties:
        count:
          type: integer
          format: int64
        domains:
          type: array
          items:
            $ref: '#/components/schemas/DomainDto'
    DomainRequest:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        valid:
          type: boolean
    DraftAssignmentsCountDto:
      type: object
      properties:
        count:
          type: integer
          format: int64
    DurationAndAmount:
      type: object
      properties:
        billable:
          type: object
          properties:
            nano:
              type: integer
              format: int32
            negative:
              type: boolean
            positive:
              type: boolean
            seconds:
              type: integer
              format: int64
            units:
              type: array
              items:
                type: object
                properties:
                  dateBased:
                    type: boolean
                  duration:
                    type: object
                    properties:
                      nano:
                        type: integer
                        format: int32
                      negative:
                        type: boolean
                      positive:
                        type: boolean
                      seconds:
                        type: integer
                        format: int64
                      zero:
                        type: boolean
                  durationEstimated:
                    type: boolean
                  timeBased:
                    type: boolean
            zero:
              type: boolean
        billableExpenses:
          type: number
          format: double
          writeOnly: true
        expenseBillableAmount:
          type: number
          format: double
        expenseNonBillableAmount:
          type: number
          format: double
        nonBillable:
          type: object
          properties:
            nano:
              type: integer
              format: int32
            negative:
              type: boolean
            positive:
              type: boolean
            seconds:
              type: integer
              format: int64
            units:
              type: array
              items:
                type: object
                properties:
                  dateBased:
                    type: boolean
                  duration:
                    type: object
                    properties:
                      nano:
                        type: integer
                        format: int32
                      negative:
                        type: boolean
                      positive:
                        type: boolean
                      seconds:
                        type: integer
                        format: int64
                      zero:
                        type: boolean
                  durationEstimated:
                    type: boolean
                  timeBased:
                    type: boolean
            zero:
              type: boolean
        nonBillableExpenses:
          type: number
          format: double
          writeOnly: true
        totalAmount:
          type: number
          format: double
        totalExpensesAmount:
          type: number
          format: double
    EmailAddress:
      type: object
      properties:
        address:
          type: string
          writeOnly: true
    EmailContentDto:
      type: object
      properties:
        body:
          type: string
        subject:
          type: string
    EmailPreferencesDto:
      type: object
      properties:
        alerts:
          type: boolean
        approval:
          type: boolean
        longRunning:
          type: boolean
        onboarding:
          type: boolean
        pto:
          type: boolean
        reminders:
          type: boolean
        scheduledReports:
          type: boolean
        scheduling:
          type: boolean
        sendNewsletter:
          type: boolean
        session:
          type: string
        weeklyUpdates:
          type: boolean
    EmailSessionDto:
      type: object
      properties:
        lang:
          type: string
        session:
          type: string
    EmailUnsubscribeRequest:
      required:
        - key
      type: object
      properties:
        key:
          type: string
    EmailVerificationRequest:
      type: object
      properties:
        newsletter:
          type: boolean
          deprecated: true
    EntityCreationPermissionsDto:
      type: object
      properties:
        whoCanCreateProjectsAndClients:
          type: string
          enum:
            - ADMINS
            - ADMINS_AND_PROJECT_MANAGERS
            - EVERYONE
        whoCanCreateTags:
          type: string
          enum:
            - ADMINS
            - ADMINS_AND_PROJECT_MANAGERS
            - EVERYONE
        whoCanCreateTasks:
          type: string
          enum:
            - ADMINS
            - ADMINS_AND_PROJECT_MANAGERS
            - EVERYONE
    EntityIdNameDto:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    EstimateDto:
      type: object
      properties:
        estimate:
          type: object
          properties:
            nano:
              type: integer
              format: int32
            negative:
              type: boolean
            positive:
              type: boolean
            seconds:
              type: integer
              format: int64
            units:
              type: array
              items:
                type: object
                properties:
                  dateBased:
                    type: boolean
                  duration:
                    type: object
                    properties:
                      nano:
                        type: integer
                        format: int32
                      negative:
                        type: boolean
                      positive:
                        type: boolean
                      seconds:
                        type: integer
                        format: int64
                      zero:
                        type: boolean
                  durationEstimated:
                    type: boolean
                  timeBased:
                    type: boolean
            zero:
              type: boolean
        type:
          type: string
          enum:
            - AUTO
            - MANUAL
    EstimateDtoV1:
      type: object
      properties:
        estimate:
          type: string
          description: Represents a task duration estimate.
          example: PT1H30M
        type:
          type: string
          description: Represents an estimate type enum.
          example: AUTO
          enum:
            - AUTO
            - MANUAL
      description: Represents project estimate object.
    EstimateRequest:
      type: object
      properties:
        estimate:
          type: object
          properties:
            nano:
              type: integer
              format: int32
            negative:
              type: boolean
            positive:
              type: boolean
            seconds:
              type: integer
              format: int64
            units:
              type: array
              items:
                type: object
                properties:
                  dateBased:
                    type: boolean
                  duration:
                    type: object
                    properties:
                      nano:
                        type: integer
                        format: int32
                      negative:
                        type: boolean
                      positive:
                        type: boolean
                      seconds:
                        type: integer
                        format: int64
                      zero:
                        type: boolean
                  durationEstimated:
                    type: boolean
                  timeBased:
                    type: boolean
            zero:
              type: boolean
          description: Represents a time duration in ISO-8601 format.
          example: PT1H30M
        type:
          type: string
          description: Represents an estimate type enum.
          example: AUTO
          enum:
            - AUTO
            - MANUAL
    EstimateResetDto:
      type: object
      properties:
        dayOfMonth:
          type: integer
          format: int32
        dayOfWeek:
          type: string
          enum:
            - MONDAY
            - TUESDAY
            - WEDNESDAY
            - THURSDAY
            - FRIDAY
            - SATURDAY
            - SUNDAY
        hour:
          type: integer
          format: int32
        interval:
          type: string
          enum:
            - WEEKLY
            - MONTHLY
            - YEARLY
        month:
          type: string
          enum:
            - JANUARY
            - FEBRUARY
            - MARCH
            - APRIL
            - MAY
            - JUNE
            - JULY
            - AUGUST
            - SEPTEMBER
            - OCTOBER
            - NOVEMBER
            - DECEMBER
    EstimateResetRequest:
      type: object
      properties:
        dayOfMonth:
          maximum: 31
          minimum: 1
          type: integer
          description: Represents a day of the month.
          format: int32
          example: 20
        dayOfWeek:
          type: string
          description: Represents a day of the week.
          example: MONDAY
          enum:
            - MONDAY
            - TUESDAY
            - WEDNESDAY
            - THURSDAY
            - FRIDAY
            - SATURDAY
            - SUNDAY
        hour:
          maximum: 23
          minimum: 0
          type: integer
          description: Represents an hour of the day in 24 hour time format.
          format: int32
          example: 15
        interval:
          type: string
          description: Represents a reset option enum.
          example: MONTHLY
          enum:
            - WEEKLY
            - MONTHLY
            - YEARLY
        month:
          type: string
          description: Represents a month enum.
          example: FEBRUARY
          enum:
            - JANUARY
            - FEBRUARY
            - MARCH
            - APRIL
            - MAY
            - JUNE
            - JULY
            - AUGUST
            - SEPTEMBER
            - OCTOBER
            - NOVEMBER
            - DECEMBER
      description: Represents estimate reset request object.
    EstimateWithOptionsDto:
      type: object
      properties:
        active:
          type: boolean
        estimate:
          type: integer
          description: Represents an estimate as long.
          format: int64
          example: 600000
        includeExpenses:
          type: boolean
          description: Indicates whether estimate includes non-billable or not.
        resetOption:
          type: string
          description: Represents a reset option enum.
          example: WEEKLY
          enum:
            - WEEKLY
            - MONTHLY
            - YEARLY
        type:
          type: string
          description: Represents an estimate type enum.
          example: AUTO
          enum:
            - AUTO
            - MANUAL
    EstimateWithOptionsRequest:
      type: object
      properties:
        active:
          type: boolean
          description: Flag whether to set estimate as active or not.
        estimate:
          minimum: 0
          type: integer
          description: Represents an estimate as long.
          format: int64
          example: 10000
        includeExpenses:
          type: boolean
          description: Flag whether to include billable expenses.
        resetOption:
          type: string
          description: Represents a reset option enum.
          example: MONTHLY
          enum:
            - WEEKLY
            - MONTHLY
            - YEARLY
        type:
          type: string
          description: Represents an estimate type enum.
          example: AUTO
          enum:
            - AUTO
            - MANUAL
      description: Represents estimate with options request object.
    ExchangeTokenRequest:
      required:
        - exchangeToken
      type: object
      properties:
        exchangeToken:
          type: string
    ExchangeTokenResponse:
      type: object
      properties:
        exchangeToken:
          type: string
    ExpenseCategoriesWithCountDto:
      type: object
      properties:
        categories:
          type: array
          items:
            $ref: '#/components/schemas/ExpenseCategoryDto'
        count:
          type: integer
          format: int32
    ExpenseCategoriesWithCountDtoV1:
      type: object
      properties:
        categories:
          type: array
          description: Represents a list of expense categories data transfer object.
          items:
            $ref: '#/components/schemas/ExpenseCategoryDtoV1'
        count:
          type: integer
          description: Indicates the number of expense categories returned.
          format: int32
          example: 20
    ExpenseCategoryArchiveRequest:
      type: object
      properties:
        archived:
          type: boolean
    ExpenseCategoryArchiveV1Request:
      type: object
      properties:
        archived:
          type: boolean
          description: Flag whether to archive the expense category or not.
    ExpenseCategoryDto:
      type: object
      properties:
        archived:
          type: boolean
          description: Flag that indicates whether the expense category is archived or not.
        hasUnitPrice:
          type: boolean
          description: Represents whether expense category has unit price or none.
        id:
          type: string
          description: Represents expense category identifier across the system.
          example: 89a687e29ae1f428e7ebe303
        name:
          type: string
          description: Represents expense category name.
          example: Procurement
        priceInCents:
          type: integer
          description: Represents price in cents as integer.
          format: int32
          example: 1000
        unit:
          type: string
          description: Represents expense category unit.
          example: piece
        workspaceId:
          type: string
          description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
    ExpenseCategoryDtoV1:
      type: object
      properties:
        archived:
          type: boolean
          description: Flag that indicates whether the expense category is archived or not.
        hasUnitPrice:
          type: boolean
          description: Represents whether expense category has unit price or none.
        id:
          type: string
          description: Represents expense category identifier across the system.
          example: 89a687e29ae1f428e7ebe303
        name:
          type: string
          description: Represents expense category name.
          example: Procurement
        priceInCents:
          type: integer
          description: Represents price in cents as integer.
          format: int32
          example: 1000
        unit:
          type: string
          description: Represents expense category unit.
          example: piece
        workspaceId:
          type: string
          description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
    ExpenseCategoryRequest:
      required:
        - name
      type: object
      properties:
        hasUnitPrice:
          type: boolean
          writeOnly: true
        name:
          maxLength: 250
          minLength: 0
          type: string
        priceInCents:
          type: integer
          format: int32
        unit:
          type: string
    ExpenseCategoryV1Request:
      required:
        - name
      type: object
      properties:
        hasUnitPrice:
          type: boolean
          description: Flag whether expense category has unit price or none.
        name:
          maxLength: 250
          minLength: 0
          type: string
          description: Represents a valid expense category name.
          example: Procurement
        priceInCents:
          type: integer
          description: Represents price in cents as integer.
          format: int32
          example: 1000
        unit:
          type: string
          description: Represents a valid expense category unit.
          example: piece
    ExpenseDailyTotalsDto:
      type: object
      properties:
        currencyTotal:
          type: array
          items:
            $ref: '#/components/schemas/CurrencyWithAmountDto'
        date:
          type: string
        dateAsInstant:
          type: string
          format: date-time
        total:
          type: number
          format: double
    ExpenseDailyTotalsDtoV1:
      type: object
      properties:
        date:
          type: string
          description: Represents a date in yyyy-MM-dd format.
          example: "2020-01-01"
        dateAsInstant:
          type: string
          format: date-time
        total:
          type: number
          description: Represents expense total.
          format: double
          example: 1500.75
      description: Represents a list of expense daily total data transfer objects.
    ExpenseDeletedDto:
      type: object
      properties:
        approvalRequestWithdrawn:
          type: boolean
    ExpenseDto:
      type: object
      properties:
        billable:
          type: boolean
        categoryId:
          type: string
        date:
          type: string
        fileId:
          type: string
        id:
          type: string
        isLocked:
          type: boolean
          writeOnly: true
        locked:
          type: boolean
        notes:
          type: string
        projectId:
          type: string
        quantity:
          type: number
          format: double
        taskId:
          type: string
        total:
          type: number
          format: double
        userId:
          type: string
        workspaceId:
          type: string
    ExpenseDtoV1:
      type: object
      properties:
        billable:
          type: boolean
          description: Indicates whether expense is billable or not.
        categoryId:
          type: string
          description: Represents category identifier across the system.
          example: 45y687e29ae1f428e7ebe890
        date:
          type: string
          description: Represents a date in yyyy-MM-dd format.
          example: "2020-01-01"
        fileId:
          type: string
          description: Represents file identifier across the system.
          example: 745687e29ae1f428e7ebe890
        id:
          type: string
          description: Represents expense identifier across the system.
          example: 64c777ddd3fcab07cfbb210c
        isLocked:
          type: boolean
          writeOnly: true
        locked:
          type: boolean
        notes:
          type: string
          description: Represents notes for an expense.
          example: This is a sample note for this expense.
        projectId:
          type: string
          description: Represents project identifier across the system.
          example: 25b687e29ae1f428e7ebe123
        quantity:
          type: number
          description: Represents expense quantity as double data type.
          format: double
        taskId:
          type: string
          description: Represents task identifier across the system.
          example: 25b687e29ae1f428e7ebe123
        total:
          type: number
          description: Represents expense total as double data type.
          format: double
          example: 10500.5
        userId:
          type: string
          description: Represents user identifier across the system.
          example: 89b687e29ae1f428e7ebe912
        workspaceId:
          type: string
          description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
    ExpenseHydratedDto:
      type: object
      properties:
        approvalRequestId:
          type: string
          description: Represents approval request identifier across the system.
          example: 445687e29ae1f428e7ebe893
        approvalStatus:
          type: string
          description: Represents the approval status of the expense
          example: PENDING
          enum:
            - PENDING
            - APPROVED
            - UNSUBMITTED
        billable:
          type: boolean
          description: Indicates whether expense is billable or not.
        category:
          $ref: '#/components/schemas/ExpenseCategoryDto'
        currency:
          type: string
          description: Represents a currency.
          example: USD
        date:
          type: string
          description: Represents a date in yyyy-MM-dd format.
          example: "2020-01-01"
        fileId:
          type: string
          description: Represents file identifier across the system.
          example: 745687e29ae1f428e7ebe890
        fileName:
          type: string
          description: Represents file name.
          example: file_12345.csv
        id:
          type: string
          description: Represents expense identifier across the system.
          example: 64c777ddd3fcab07cfbb210c
        isLocked:
          type: boolean
          writeOnly: true
        locked:
          type: boolean
        notes:
          type: string
          description: Represents notes for an expense.
          example: This is a sample note for this expense.
        project:
          $ref: '#/components/schemas/ProjectInfoDto'
        quantity:
          type: number
          description: Represents expense quantity as double data type.
          format: double
        task:
          $ref: '#/components/schemas/TaskInfoDto'
        total:
          type: number
          description: Represents expense total as double data type.
          format: double
          example: 10500.5
        userId:
          type: string
          description: Represents user identifier across the system.
          example: 89b687e29ae1f428e7ebe912
        workspaceId:
          type: string
          description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
    ExpenseHydratedDtoV1:
      type: object
      properties:
        billable:
          type: boolean
          description: Indicates whether expense is billable or not.
        category:
          $ref: '#/components/schemas/ExpenseCategoryDto'
        date:
          type: string
          description: Represents a date in yyyy-MM-dd format.
          example: 89b687e29ae1f428e7ebe912
        fileId:
          type: string
          description: Represents file identifier across the system.
          example: 745687e29ae1f428e7ebe890
        fileName:
          type: string
          description: Represents file name.
          example: expense_20200101
        id:
          type: string
          description: Represents expense identifier across the system.
          example: 64c777ddd3fcab07cfbb210c
        isLocked:
          type: boolean
          writeOnly: true
        locked:
          type: boolean
        notes:
          type: string
          description: Represents notes for an expense.
          example: This is a sample note for this expense.
        project:
          $ref: '#/components/schemas/ProjectInfoDto'
        quantity:
          type: number
          description: Represents expense quantity as double data type.
          format: double
        task:
          $ref: '#/components/schemas/TaskInfoDto'
        total:
          type: number
          description: Represents expense total as double data type.
          format: double
          example: 10500.5
        userId:
          type: string
          description: Represents user identifier across the system.
          example: 89b687e29ae1f428e7ebe912
        workspaceId:
          type: string
          description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
      description: Represent a list of hydrated expense objects.
    ExpensePeriodTotalsDto:
      type: object
      properties:
        currencyTotal:
          type: array
          items:
            $ref: '#/components/schemas/CurrencyWithAmountDto'
        date:
          type: string
        dateAsInstant:
          type: string
          format: date-time
        dateRange:
          $ref: '#/components/schemas/DateRange'
        total:
          type: number
          format: double
    ExpenseWeekApprovalStatusDto:
      type: object
      properties:
        approvalRequestId:
          type: string
        approvedCount:
          type: integer
          format: int64
        currencyTotal:
          type: array
          items:
            $ref: '#/components/schemas/CurrencyWithAmountDto'
        dateRange:
          $ref: '#/components/schemas/DateRangeDto'
        expensesCount:
          type: integer
          format: int64
        hasUnSubmitted:
          type: boolean
        status:
          type: string
        submitterName:
          type: string
        total:
          type: number
          format: double
        unsubmittedExpensesCount:
          type: integer
          format: int64
    ExpenseWeeklyTotalsDtoV1:
      type: object
      properties:
        date:
          type: string
          description: Represents a date in yyyy-MM-dd format.
          example: "2020-01-01"
        total:
          type: number
          description: Represents expense total.
          format: double
          example: 20000.75
      description: Represents a list of expense weekly total data transfer objects.
    ExpenseWithApprovalRequestUpdatedDto:
      type: object
      properties:
        approvalRequestWithdrawn:
          type: boolean
        billable:
          type: boolean
        categoryId:
          type: string
        date:
          type: string
        fileId:
          type: string
        id:
          type: string
        isLocked:
          type: boolean
          writeOnly: true
        locked:
          type: boolean
        notes:
          type: string
        projectId:
          type: string
        quantity:
          type: number
          format: double
        taskId:
          type: string
        total:
          type: number
          format: double
        userId:
          type: string
        workspaceId:
          type: string
    ExpensesAndTotalsDto:
      type: object
      properties:
        approvalPeriod:
          type: string
          enum:
            - WEEKLY
            - SEMI_MONTHLY
            - MONTHLY
        dailyTotals:
          type: array
          items:
            $ref: '#/components/schemas/ExpenseDailyTotalsDto'
        expenses:
          $ref: '#/components/schemas/ExpensesWithCountDto'
        periodStatusMap:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ExpenseWeekApprovalStatusDto'
        periodTotals:
          type: array
          items:
            $ref: '#/components/schemas/ExpensePeriodTotalsDto'
        weeklyStatusMap:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ExpenseWeekApprovalStatusDto'
          deprecated: true
        weeklyTotals:
          type: array
          deprecated: true
          items:
            $ref: '#/components/schemas/ExpensePeriodTotalsDto'
    ExpensesAndTotalsDtoV1:
      type: object
      properties:
        dailyTotals:
          type: array
          description: Represents a list of expense daily total data transfer objects.
          items:
            $ref: '#/components/schemas/ExpenseDailyTotalsDtoV1'
        expenses:
          $ref: '#/components/schemas/ExpensesWithCountDtoV1'
        weeklyTotals:
          type: array
          description: Represents a list of expense weekly total data transfer objects.
          items:
            $ref: '#/components/schemas/ExpenseWeeklyTotalsDtoV1'
    ExpensesIdsRequest:
      type: object
      properties:
        ids:
          type: array
          items:
            type: string
    ExpensesWithCountDto:
      type: object
      properties:
        count:
          type: integer
          format: int32
        expenses:
          type: array
          items:
            $ref: '#/components/schemas/ExpenseHydratedDto'
    ExpensesWithCountDtoV1:
      type: object
      properties:
        count:
          type: integer
          description: Represent result count.
          format: int32
          example: 25
        expenses:
          type: array
          description: Represent a list of hydrated expense objects.
          items:
            $ref: '#/components/schemas/ExpenseHydratedDtoV1'
      description: Represents an expense with count data transfer object.
    FavoriteTimeEntryFullDto:
      type: object
      properties:
        billable:
          type: boolean
        client:
          $ref: '#/components/schemas/ClientDto'
        customFields:
          type: array
          items:
            $ref: '#/components/schemas/CustomFieldValueDto'
        description:
          type: string
        id:
          type: string
        name:
          type: string
        order:
          type: integer
          format: int32
        project:
          $ref: '#/components/schemas/ProjectDtoImpl'
        tags:
          type: array
          items:
            $ref: '#/components/schemas/TagDto'
        task:
          $ref: '#/components/schemas/TaskDtoImpl'
        type:
          type: string
        user:
          $ref: '#/components/schemas/UserDto'
        workspaceId:
          type: string
    Feature:
      type: object
      description: Represents a list of features.
      example:
        - ADD_TIME_FOR_OTHERS
        - ADMIN_PANEL
        - ALERTS
        - APPROVAL
      oneOf:
        - type: string
          enum:
            - ADD_TIME_FOR_OTHERS
            - ADMIN_PANEL
            - ALERTS
            - APPROVAL
            - AUDIT_LOG
            - AUTOMATIC_LOCK
            - BRANDED_REPORTS
            - BULK_EDIT
            - CUSTOM_FIELDS
            - CUSTOM_REPORTING
            - CUSTOM_SUBDOMAIN
            - DECIMAL_FORMAT
            - DISABLE_MANUAL_MODE
            - EDIT_MEMBER_PROFILE
            - EXCLUDE_NON_BILLABLE_FROM_ESTIMATE
            - EXPENSES
            - FILE_IMPORT
            - HIDE_PAGES
            - HISTORIC_RATES
            - INVOICING
            - INVOICE_EMAILS
            - LABOR_COST
            - LOCATIONS
            - MANAGER_ROLE
            - MULTI_FACTOR_AUTHENTICATION
            - PROJECT_BUDGET
            - PROJECT_TEMPLATES
            - QUICKBOOKS_INTEGRATION
            - RECURRING_ESTIMATES
            - REQUIRED_FIELDS
            - SCHEDULED_REPORTS
            - SCHEDULING
            - SCREENSHOTS
            - SSO
            - SUMMARY_ESTIMATE
            - TARGETS_AND_REMINDERS
            - TASK_RATES
            - TIME_OFF
            - UNLIMITED_REPORTS
            - USER_CUSTOM_FIELDS
            - WHO_CAN_CHANGE_TIMEENTRY_BILLABILITY
            - BREAKS
            - KIOSK_SESSION_DURATION
            - KIOSK_PIN_REQUIRED
            - WHO_CAN_SEE_ALL_TIME_ENTRIES
            - WHO_CAN_SEE_PROJECT_STATUS
            - WHO_CAN_SEE_PUBLIC_PROJECTS_ENTRIES
            - WHO_CAN_SEE_TEAMS_DASHBOARD
            - WORKSPACE_LOCK_TIMEENTRIES
            - WORKSPACE_TIME_AUDIT
            - WORKSPACE_TIME_ROUNDING
            - KIOSK
            - FORECASTING
            - TIME_TRACKING
            - ATTENDANCE_REPORT
            - WORKSPACE_TRANSFER
            - FAVORITE_ENTRIES
            - SPLIT_TIME_ENTRY
            - CLIENT_CURRENCY
      properties:
        ADD_TIME_FOR_OTHERS:
          type: string
          enum:
            - ADD_TIME_FOR_OTHERS
            - ADMIN_PANEL
            - ALERTS
            - APPROVAL
            - AUDIT_LOG
            - AUTOMATIC_LOCK
            - BRANDED_REPORTS
            - BULK_EDIT
            - CUSTOM_FIELDS
            - CUSTOM_REPORTING
            - CUSTOM_SUBDOMAIN
            - DECIMAL_FORMAT
            - DISABLE_MANUAL_MODE
            - EDIT_MEMBER_PROFILE
            - EXCLUDE_NON_BILLABLE_FROM_ESTIMATE
            - EXPENSES
            - FILE_IMPORT
            - HIDE_PAGES
            - HISTORIC_RATES
            - INVOICING
            - INVOICE_EMAILS
            - LABOR_COST
            - LOCATIONS
            - MANAGER_ROLE
            - MULTI_FACTOR_AUTHENTICATION
            - PROJECT_BUDGET
            - PROJECT_TEMPLATES
            - QUICKBOOKS_INTEGRATION
            - RECURRING_ESTIMATES
            - REQUIRED_FIELDS
            - SCHEDULED_REPORTS
            - SCHEDULING
            - SCREENSHOTS
            - SSO
            - SUMMARY_ESTIMATE
            - TARGETS_AND_REMINDERS
            - TASK_RATES
            - TIME_OFF
            - UNLIMITED_REPORTS
            - USER_CUSTOM_FIELDS
            - WHO_CAN_CHANGE_TIMEENTRY_BILLABILITY
            - BREAKS
            - KIOSK_SESSION_DURATION
            - KIOSK_PIN_REQUIRED
            - WHO_CAN_SEE_ALL_TIME_ENTRIES
            - WHO_CAN_SEE_PROJECT_STATUS
            - WHO_CAN_SEE_PUBLIC_PROJECTS_ENTRIES
            - WHO_CAN_SEE_TEAMS_DASHBOARD
            - WORKSPACE_LOCK_TIMEENTRIES
            - WORKSPACE_TIME_AUDIT
            - WORKSPACE_TIME_ROUNDING
            - KIOSK
            - FORECASTING
            - TIME_TRACKING
            - ATTENDANCE_REPORT
            - WORKSPACE_TRANSFER
            - FAVORITE_ENTRIES
            - SPLIT_TIME_ENTRY
            - CLIENT_CURRENCY
        ADMIN_PANEL:
          type: string
          enum:
            - ADD_TIME_FOR_OTHERS
            - ADMIN_PANEL
            - ALERTS
            - APPROVAL
            - AUDIT_LOG
            - AUTOMATIC_LOCK
            - BRANDED_REPORTS
            - BULK_EDIT
            - CUSTOM_FIELDS
            - CUSTOM_REPORTING
            - CUSTOM_SUBDOMAIN
            - DECIMAL_FORMAT
            - DISABLE_MANUAL_MODE
            - EDIT_MEMBER_PROFILE
            - EXCLUDE_NON_BILLABLE_FROM_ESTIMATE
            - EXPENSES
            - FILE_IMPORT
            - HIDE_PAGES
            - HISTORIC_RATES
            - INVOICING
            - INVOICE_EMAILS
            - LABOR_COST
            - LOCATIONS
            - MANAGER_ROLE
            - MULTI_FACTOR_AUTHENTICATION
            - PROJECT_BUDGET
            - PROJECT_TEMPLATES
            - QUICKBOOKS_INTEGRATION
            - RECURRING_ESTIMATES
            - REQUIRED_FIELDS
            - SCHEDULED_REPORTS
            - SCHEDULING
            - SCREENSHOTS
            - SSO
            - SUMMARY_ESTIMATE
            - TARGETS_AND_REMINDERS
            - TASK_RATES
            - TIME_OFF
            - UNLIMITED_REPORTS
            - USER_CUSTOM_FIELDS
            - WHO_CAN_CHANGE_TIMEENTRY_BILLABILITY
            - BREAKS
            - KIOSK_SESSION_DURATION
            - KIOSK_PIN_REQUIRED
            - WHO_CAN_SEE_ALL_TIME_ENTRIES
            - WHO_CAN_SEE_PROJECT_STATUS
            - WHO_CAN_SEE_PUBLIC_PROJECTS_ENTRIES
            - WHO_CAN_SEE_TEAMS_DASHBOARD
            - WORKSPACE_LOCK_TIMEENTRIES
            - WORKSPACE_TIME_AUDIT
            - WORKSPACE_TIME_ROUNDING
            - KIOSK
            - FORECASTING
            - TIME_TRACKING
            - ATTENDANCE_REPORT
            - WORKSPACE_TRANSFER
            - FAVORITE_ENTRIES
            - SPLIT_TIME_ENTRY
            - CLIENT_CURRENCY
        ALERTS:
          type: string
          enum:
            - ADD_TIME_FOR_OTHERS
            - ADMIN_PANEL
            - ALERTS
            - APPROVAL
            - AUDIT_LOG
            - AUTOMATIC_LOCK
            - BRANDED_REPORTS
            - BULK_EDIT
            - CUSTOM_FIELDS
            - CUSTOM_REPORTING
            - CUSTOM_SUBDOMAIN
            - DECIMAL_FORMAT
            - DISABLE_MANUAL_MODE
            - EDIT_MEMBER_PROFILE
            - EXCLUDE_NON_BILLABLE_FROM_ESTIMATE
            - EXPENSES
            - FILE_IMPORT
            - HIDE_PAGES
            - HISTORIC_RATES
            - INVOICING
            - INVOICE_EMAILS
            - LABOR_COST
            - LOCATIONS
            - MANAGER_ROLE
            - MULTI_FACTOR_AUTHENTICATION
            - PROJECT_BUDGET
            - PROJECT_TEMPLATES
            - QUICKBOOKS_INTEGRATION
            - RECURRING_ESTIMATES
            - REQUIRED_FIELDS
            - SCHEDULED_REPORTS
            - SCHEDULING
            - SCREENSHOTS
            - SSO
            - SUMMARY_ESTIMATE
            - TARGETS_AND_REMINDERS
            - TASK_RATES
            - TIME_OFF
            - UNLIMITED_REPORTS
            - USER_CUSTOM_FIELDS
            - WHO_CAN_CHANGE_TIMEENTRY_BILLABILITY
            - BREAKS
            - KIOSK_SESSION_DURATION
            - KIOSK_PIN_REQUIRED
            - WHO_CAN_SEE_ALL_TIME_ENTRIES
            - WHO_CAN_SEE_PROJECT_STATUS
            - WHO_CAN_SEE_PUBLIC_PROJECTS_ENTRIES
            - WHO_CAN_SEE_TEAMS_DASHBOARD
            - WORKSPACE_LOCK_TIMEENTRIES
            - WORKSPACE_TIME_AUDIT
            - WORKSPACE_TIME_ROUNDING
            - KIOSK
            - FORECASTING
            - TIME_TRACKING
            - ATTENDANCE_REPORT
            - WORKSPACE_TRANSFER
            - FAVORITE_ENTRIES
            - SPLIT_TIME_ENTRY
            - CLIENT_CURRENCY
        APPROVAL:
          type: string
          enum:
            - ADD_TIME_FOR_OTHERS
            - ADMIN_PANEL
            - ALERTS
            - APPROVAL
            - AUDIT_LOG
            - AUTOMATIC_LOCK
            - BRANDED_REPORTS
            - BULK_EDIT
            - CUSTOM_FIELDS
            - CUSTOM_REPORTING
            - CUSTOM_SUBDOMAIN
            - DECIMAL_FORMAT
            - DISABLE_MANUAL_MODE
            - EDIT_MEMBER_PROFILE
            - EXCLUDE_NON_BILLABLE_FROM_ESTIMATE
            - EXPENSES
            - FILE_IMPORT
            - HIDE_PAGES
            - HISTORIC_RATES
            - INVOICING
            - INVOICE_EMAILS
            - LABOR_COST
            - LOCATIONS
            - MANAGER_ROLE
            - MULTI_FACTOR_AUTHENTICATION
            - PROJECT_BUDGET
            - PROJECT_TEMPLATES
            - QUICKBOOKS_INTEGRATION
            - RECURRING_ESTIMATES
            - REQUIRED_FIELDS
            - SCHEDULED_REPORTS
            - SCHEDULING
            - SCREENSHOTS
            - SSO
            - SUMMARY_ESTIMATE
            - TARGETS_AND_REMINDERS
            - TASK_RATES
            - TIME_OFF
            - UNLIMITED_REPORTS
            - USER_CUSTOM_FIELDS
            - WHO_CAN_CHANGE_TIMEENTRY_BILLABILITY
            - BREAKS
            - KIOSK_SESSION_DURATION
            - KIOSK_PIN_REQUIRED
            - WHO_CAN_SEE_ALL_TIME_ENTRIES
            - WHO_CAN_SEE_PROJECT_STATUS
            - WHO_CAN_SEE_PUBLIC_PROJECTS_ENTRIES
            - WHO_CAN_SEE_TEAMS_DASHBOARD
            - WORKSPACE_LOCK_TIMEENTRIES
            - WORKSPACE_TIME_AUDIT
            - WORKSPACE_TIME_ROUNDING
            - KIOSK
            - FORECASTING
            - TIME_TRACKING
            - ATTENDANCE_REPORT
            - WORKSPACE_TRANSFER
            - FAVORITE_ENTRIES
            - SPLIT_TIME_ENTRY
            - CLIENT_CURRENCY
        ATTENDANCE_REPORT:
          type: string
          enum:
            - ADD_TIME_FOR_OTHERS
            - ADMIN_PANEL
            - ALERTS
            - APPROVAL
            - AUDIT_LOG
            - AUTOMATIC_LOCK
            - BRANDED_REPORTS
            - BULK_EDIT
            - CUSTOM_FIELDS
            - CUSTOM_REPORTING
            - CUSTOM_SUBDOMAIN
            - DECIMAL_FORMAT
            - DISABLE_MANUAL_MODE
            - EDIT_MEMBER_PROFILE
            - EXCLUDE_NON_BILLABLE_FROM_ESTIMATE
            - EXPENSES
            - FILE_IMPORT
            - HIDE_PAGES
            - HISTORIC_RATES
            - INVOICING
            - INVOICE_EMAILS
            - LABOR_COST
            - LOCATIONS
            - MANAGER_ROLE
            - MULTI_FACTOR_AUTHENTICATION
            - PROJECT_BUDGET
            - PROJECT_TEMPLATES
            - QUICKBOOKS_INTEGRATION
            - RECURRING_ESTIMATES
            - REQUIRED_FIELDS
            - SCHEDULED_REPORTS
            - SCHEDULING
            - SCREENSHOTS
            - SSO
            - SUMMARY_ESTIMATE
            - TARGETS_AND_REMINDERS
            - TASK_RATES
            - TIME_OFF
            - UNLIMITED_REPORTS
            - USER_CUSTOM_FIELDS
            - WHO_CAN_CHANGE_TIMEENTRY_BILLABILITY
            - BREAKS
            - KIOSK_SESSION_DURATION
            - KIOSK_PIN_REQUIRED
            - WHO_CAN_SEE_ALL_TIME_ENTRIES
            - WHO_CAN_SEE_PROJECT_STATUS
            - WHO_CAN_SEE_PUBLIC_PROJECTS_ENTRIES
            - WHO_CAN_SEE_TEAMS_DASHBOARD
            - WORKSPACE_LOCK_TIMEENTRIES
            - WORKSPACE_TIME_AUDIT
            - WORKSPACE_TIME_ROUNDING
            - KIOSK
            - FORECASTING
            - TIME_TRACKING
            - ATTENDANCE_REPORT
            - WORKSPACE_TRANSFER
            - FAVORITE_ENTRIES
            - SPLIT_TIME_ENTRY
            - CLIENT_CURRENCY
        AUDIT_LOG:
          type: string
          enum:
            - ADD_TIME_FOR_OTHERS
            - ADMIN_PANEL
            - ALERTS
            - APPROVAL
            - AUDIT_LOG
            - AUTOMATIC_LOCK
            - BRANDED_REPORTS
            - BULK_EDIT
            - CUSTOM_FIELDS
            - CUSTOM_REPORTING
            - CUSTOM_SUBDOMAIN
            - DECIMAL_FORMAT
            - DISABLE_MANUAL_MODE
            - EDIT_MEMBER_PROFILE
            - EXCLUDE_NON_BILLABLE_FROM_ESTIMATE
            - EXPENSES
            - FILE_IMPORT
            - HIDE_PAGES
            - HISTORIC_RATES
            - INVOICING
            - INVOICE_EMAILS
            - LABOR_COST
            - LOCATIONS
            - MANAGER_ROLE
            - MULTI_FACTOR_AUTHENTICATION
            - PROJECT_BUDGET
            - PROJECT_TEMPLATES
            - QUICKBOOKS_INTEGRATION
            - RECURRING_ESTIMATES
            - REQUIRED_FIELDS
            - SCHEDULED_REPORTS
            - SCHEDULING
            - SCREENSHOTS
            - SSO
            - SUMMARY_ESTIMATE
            - TARGETS_AND_REMINDERS
            - TASK_RATES
            - TIME_OFF
            - UNLIMITED_REPORTS
            - USER_CUSTOM_FIELDS
            - WHO_CAN_CHANGE_TIMEENTRY_BILLABILITY
            - BREAKS
            - KIOSK_SESSION_DURATION
            - KIOSK_PIN_REQUIRED
            - WHO_CAN_SEE_ALL_TIME_ENTRIES
            - WHO_CAN_SEE_PROJECT_STATUS
            - WHO_CAN_SEE_PUBLIC_PROJECTS_ENTRIES
            - WHO_CAN_SEE_TEAMS_DASHBOARD
            - WORKSPACE_LOCK_TIMEENTRIES
            - WORKSPACE_TIME_AUDIT
            - WORKSPACE_TIME_ROUNDING
            - KIOSK
            - FORECASTING
            - TIME_TRACKING
            - ATTENDANCE_REPORT
            - WORKSPACE_TRANSFER
            - FAVORITE_ENTRIES
            - SPLIT_TIME_ENTRY
            - CLIENT_CURRENCY
        AUTOMATIC_LOCK:
          type: string
          enum:
            - ADD_TIME_FOR_OTHERS
            - ADMIN_PANEL
            - ALERTS
            - APPROVAL
            - AUDIT_LOG
            - AUTOMATIC_LOCK
            - BRANDED_REPORTS
            - BULK_EDIT
            - CUSTOM_FIELDS
            - CUSTOM_REPORTING
            - CUSTOM_SUBDOMAIN
            - DECIMAL_FORMAT
            - DISABLE_MANUAL_MODE
            - EDIT_MEMBER_PROFILE
            - EXCLUDE_NON_BILLABLE_FROM_ESTIMATE
            - EXPENSES
            - FILE_IMPORT
            - HIDE_PAGES
            - HISTORIC_RATES
            - INVOICING
            - INVOICE_EMAILS
            - LABOR_COST
            - LOCATIONS
            - MANAGER_ROLE
            - MULTI_FACTOR_AUTHENTICATION
            - PROJECT_BUDGET
            - PROJECT_TEMPLATES
            - QUICKBOOKS_INTEGRATION
            - RECURRING_ESTIMATES
            - REQUIRED_FIELDS
            - SCHEDULED_REPORTS
            - SCHEDULING
            - SCREENSHOTS
            - SSO
            - SUMMARY_ESTIMATE
            - TARGETS_AND_REMINDERS
            - TASK_RATES
            - TIME_OFF
            - UNLIMITED_REPORTS
            - USER_CUSTOM_FIELDS
            - WHO_CAN_CHANGE_TIMEENTRY_BILLABILITY
            - BREAKS
            - KIOSK_SESSION_DURATION
            - KIOSK_PIN_REQUIRED
            - WHO_CAN_SEE_ALL_TIME_ENTRIES
            - WHO_CAN_SEE_PROJECT_STATUS
            - WHO_CAN_SEE_PUBLIC_PROJECTS_ENTRIES
            - WHO_CAN_SEE_TEAMS_DASHBOARD
            - WORKSPACE_LOCK_TIMEENTRIES
            - WORKSPACE_TIME_AUDIT
            - WORKSPACE_TIME_ROUNDING
            - KIOSK
            - FORECASTING
            - TIME_TRACKING
            - ATTENDANCE_REPORT
            - WORKSPACE_TRANSFER
            - FAVORITE_ENTRIES
            - SPLIT_TIME_ENTRY
            - CLIENT_CURRENCY
        BRANDED_REPORTS:
          type: string
          enum:
            - ADD_TIME_FOR_OTHERS
            - ADMIN_PANEL
            - ALERTS
            - APPROVAL
            - AUDIT_LOG
            - AUTOMATIC_LOCK
            - BRANDED_REPORTS
            - BULK_EDIT
            - CUSTOM_FIELDS
            - CUSTOM_REPORTING
            - CUSTOM_SUBDOMAIN
            - DECIMAL_FORMAT
            - DISABLE_MANUAL_MODE
            - EDIT_MEMBER_PROFILE
            - EXCLUDE_NON_BILLABLE_FROM_ESTIMATE
            - EXPENSES
            - FILE_IMPORT
            - HIDE_PAGES
            - HISTORIC_RATES
            - INVOICING
            - INVOICE_EMAILS
            - LABOR_COST
            - LOCATIONS
            - MANAGER_ROLE
            - MULTI_FACTOR_AUTHENTICATION
            - PROJECT_BUDGET
            - PROJECT_TEMPLATES
            - QUICKBOOKS_INTEGRATION
            - RECURRING_ESTIMATES
            - REQUIRED_FIELDS
            - SCHEDULED_REPORTS
            - SCHEDULING
            - SCREENSHOTS
            - SSO
            - SUMMARY_ESTIMATE
            - TARGETS_AND_REMINDERS
            - TASK_RATES
            - TIME_OFF
            - UNLIMITED_REPORTS
            - USER_CUSTOM_FIELDS
            - WHO_CAN_CHANGE_TIMEENTRY_BILLABILITY
            - BREAKS
            - KIOSK_SESSION_DURATION
            - KIOSK_PIN_REQUIRED
            - WHO_CAN_SEE_ALL_TIME_ENTRIES
            - WHO_CAN_SEE_PROJECT_STATUS
            - WHO_CAN_SEE_PUBLIC_PROJECTS_ENTRIES
            - WHO_CAN_SEE_TEAMS_DASHBOARD
            - WORKSPACE_LOCK_TIMEENTRIES
            - WORKSPACE_TIME_AUDIT
            - WORKSPACE_TIME_ROUNDING
            - KIOSK
            - FORECASTING
            - TIME_TRACKING
            - ATTENDANCE_REPORT
            - WORKSPACE_TRANSFER
            - FAVORITE_ENTRIES
            - SPLIT_TIME_ENTRY
            - CLIENT_CURRENCY
        BREAKS:
          type: string
          enum:
            - ADD_TIME_FOR_OTHERS
            - ADMIN_PANEL
            - ALERTS
            - APPROVAL
            - AUDIT_LOG
            - AUTOMATIC_LOCK
            - BRANDED_REPORTS
            - BULK_EDIT
            - CUSTOM_FIELDS
            - CUSTOM_REPORTING
            - CUSTOM_SUBDOMAIN
            - DECIMAL_FORMAT
            - DISABLE_MANUAL_MODE
            - EDIT_MEMBER_PROFILE
            - EXCLUDE_NON_BILLABLE_FROM_ESTIMATE
            - EXPENSES
            - FILE_IMPORT
            - HIDE_PAGES
            - HISTORIC_RATES
            - INVOICING
            - INVOICE_EMAILS
            - LABOR_COST
            - LOCATIONS
            - MANAGER_ROLE
            - MULTI_FACTOR_AUTHENTICATION
            - PROJECT_BUDGET
            - PROJECT_TEMPLATES
            - QUICKBOOKS_INTEGRATION
            - RECURRING_ESTIMATES
            - REQUIRED_FIELDS
            - SCHEDULED_REPORTS
            - SCHEDULING
            - SCREENSHOTS
            - SSO
            - SUMMARY_ESTIMATE
            - TARGETS_AND_REMINDERS
            - TASK_RATES
            - TIME_OFF
            - UNLIMITED_REPORTS
            - USER_CUSTOM_FIELDS
            - WHO_CAN_CHANGE_TIMEENTRY_BILLABILITY
            - BREAKS
            - KIOSK_SESSION_DURATION
            - KIOSK_PIN_REQUIRED
            - WHO_CAN_SEE_ALL_TIME_ENTRIES
            - WHO_CAN_SEE_PROJECT_STATUS
            - WHO_CAN_SEE_PUBLIC_PROJECTS_ENTRIES
            - WHO_CAN_SEE_TEAMS_DASHBOARD
            - WORKSPACE_LOCK_TIMEENTRIES
            - WORKSPACE_TIME_AUDIT
            - WORKSPACE_TIME_ROUNDING
            - KIOSK
            - FORECASTING
            - TIME_TRACKING
            - ATTENDANCE_REPORT
            - WORKSPACE_TRANSFER
            - FAVORITE_ENTRIES
            - SPLIT_TIME_ENTRY
            - CLIENT_CURRENCY
        BULK_EDIT:
          type: string
          enum:
            - ADD_TIME_FOR_OTHERS
            - ADMIN_PANEL
            - ALERTS
            - APPROVAL
            - AUDIT_LOG
            - AUTOMATIC_LOCK
            - BRANDED_REPORTS
            - BULK_EDIT
            - CUSTOM_FIELDS
            - CUSTOM_REPORTING
            - CUSTOM_SUBDOMAIN
            - DECIMAL_FORMAT
            - DISABLE_MANUAL_MODE
            - EDIT_MEMBER_PROFILE
            - EXCLUDE_NON_BILLABLE_FROM_ESTIMATE
            - EXPENSES
            - FILE_IMPORT
            - HIDE_PAGES
            - HISTORIC_RATES
            - INVOICING
            - INVOICE_EMAILS
            - LABOR_COST
            - LOCATIONS
            - MANAGER_ROLE
            - MULTI_FACTOR_AUTHENTICATION
            - PROJECT_BUDGET
            - PROJECT_TEMPLATES
            - QUICKBOOKS_INTEGRATION
            - RECURRING_ESTIMATES
            - REQUIRED_FIELDS
            - SCHEDULED_REPORTS
            - SCHEDULING
            - SCREENSHOTS
            - SSO
            - SUMMARY_ESTIMATE
            - TARGETS_AND_REMINDERS
            - TASK_RATES
            - TIME_OFF
            - UNLIMITED_REPORTS
            - USER_CUSTOM_FIELDS
            - WHO_CAN_CHANGE_TIMEENTRY_BILLABILITY
            - BREAKS
            - KIOSK_SESSION_DURATION
            - KIOSK_PIN_REQUIRED
            - WHO_CAN_SEE_ALL_TIME_ENTRIES
            - WHO_CAN_SEE_PROJECT_STATUS
            - WHO_CAN_SEE_PUBLIC_PROJECTS_ENTRIES
            - WHO_CAN_SEE_TEAMS_DASHBOARD
            - WORKSPACE_LOCK_TIMEENTRIES
            - WORKSPACE_TIME_AUDIT
            - WORKSPACE_TIME_ROUNDING
            - KIOSK
            - FORECASTING
            - TIME_TRACKING
            - ATTENDANCE_REPORT
            - WORKSPACE_TRANSFER
            - FAVORITE_ENTRIES
            - SPLIT_TIME_ENTRY
            - CLIENT_CURRENCY
        CLIENT_CURRENCY:
          type: string
          enum:
            - ADD_TIME_FOR_OTHERS
            - ADMIN_PANEL
            - ALERTS
            - APPROVAL
            - AUDIT_LOG
            - AUTOMATIC_LOCK
            - BRANDED_REPORTS
            - BULK_EDIT
            - CUSTOM_FIELDS
            - CUSTOM_REPORTING
            - CUSTOM_SUBDOMAIN
            - DECIMAL_FORMAT
            - DISABLE_MANUAL_MODE
            - EDIT_MEMBER_PROFILE
            - EXCLUDE_NON_BILLABLE_FROM_ESTIMATE
            - EXPENSES
            - FILE_IMPORT
            - HIDE_PAGES
            - HISTORIC_RATES
            - INVOICING
            - INVOICE_EMAILS
            - LABOR_COST
            - LOCATIONS
            - MANAGER_ROLE
            - MULTI_FACTOR_AUTHENTICATION
            - PROJECT_BUDGET
            - PROJECT_TEMPLATES
            - QUICKBOOKS_INTEGRATION
            - RECURRING_ESTIMATES
            - REQUIRED_FIELDS
            - SCHEDULED_REPORTS
            - SCHEDULING
            - SCREENSHOTS
            - SSO
            - SUMMARY_ESTIMATE
            - TARGETS_AND_REMINDERS
            - TASK_RATES
            - TIME_OFF
            - UNLIMITED_REPORTS
            - USER_CUSTOM_FIELDS
            - WHO_CAN_CHANGE_TIMEENTRY_BILLABILITY
            - BREAKS
            - KIOSK_SESSION_DURATION
            - KIOSK_PIN_REQUIRED
            - WHO_CAN_SEE_ALL_TIME_ENTRIES
            - WHO_CAN_SEE_PROJECT_STATUS
            - WHO_CAN_SEE_PUBLIC_PROJECTS_ENTRIES
            - WHO_CAN_SEE_TEAMS_DASHBOARD
            - WORKSPACE_LOCK_TIMEENTRIES
            - WORKSPACE_TIME_AUDIT
            - WORKSPACE_TIME_ROUNDING
            - KIOSK
            - FORECASTING
            - TIME_TRACKING
            - ATTENDANCE_REPORT
            - WORKSPACE_TRANSFER
            - FAVORITE_ENTRIES
            - SPLIT_TIME_ENTRY
            - CLIENT_CURRENCY
        CUSTOM_FIELDS:
          type: string
          enum:
            - ADD_TIME_FOR_OTHERS
            - ADMIN_PANEL
            - ALERTS
            - APPROVAL
            - AUDIT_LOG
            - AUTOMATIC_LOCK
            - BRANDED_REPORTS
            - BULK_EDIT
            - CUSTOM_FIELDS
            - CUSTOM_REPORTING
            - CUSTOM_SUBDOMAIN
            - DECIMAL_FORMAT
            - DISABLE_MANUAL_MODE
            - EDIT_MEMBER_PROFILE
            - EXCLUDE_NON_BILLABLE_FROM_ESTIMATE
            - EXPENSES
            - FILE_IMPORT
            - HIDE_PAGES
            - HISTORIC_RATES
            - INVOICING
            - INVOICE_EMAILS
            - LABOR_COST
            - LOCATIONS
            - MANAGER_ROLE
            - MULTI_FACTOR_AUTHENTICATION
            - PROJECT_BUDGET
            - PROJECT_TEMPLATES
            - QUICKBOOKS_INTEGRATION
            - RECURRING_ESTIMATES
            - REQUIRED_FIELDS
            - SCHEDULED_REPORTS
            - SCHEDULING
            - SCREENSHOTS
            - SSO
            - SUMMARY_ESTIMATE
            - TARGETS_AND_REMINDERS
            - TASK_RATES
            - TIME_OFF
            - UNLIMITED_REPORTS
            - USER_CUSTOM_FIELDS
            - WHO_CAN_CHANGE_TIMEENTRY_BILLABILITY
            - BREAKS
            - KIOSK_SESSION_DURATION
            - KIOSK_PIN_REQUIRED
            - WHO_CAN_SEE_ALL_TIME_ENTRIES
            - WHO_CAN_SEE_PROJECT_STATUS
            - WHO_CAN_SEE_PUBLIC_PROJECTS_ENTRIES
            - WHO_CAN_SEE_TEAMS_DASHBOARD
            - WORKSPACE_LOCK_TIMEENTRIES
            - WORKSPACE_TIME_AUDIT
            - WORKSPACE_TIME_ROUNDING
            - KIOSK
            - FORECASTING
            - TIME_TRACKING
            - ATTENDANCE_REPORT
            - WORKSPACE_TRANSFER
            - FAVORITE_ENTRIES
            - SPLIT_TIME_ENTRY
            - CLIENT_CURRENCY
        CUSTOM_REPORTING:
          type: string
          enum:
            - ADD_TIME_FOR_OTHERS
            - ADMIN_PANEL
            - ALERTS
            - APPROVAL
            - AUDIT_LOG
            - AUTOMATIC_LOCK
            - BRANDED_REPORTS
            - BULK_EDIT
            - CUSTOM_FIELDS
            - CUSTOM_REPORTING
            - CUSTOM_SUBDOMAIN
            - DECIMAL_FORMAT
            - DISABLE_MANUAL_MODE
            - EDIT_MEMBER_PROFILE
            - EXCLUDE_NON_BILLABLE_FROM_ESTIMATE
            - EXPENSES
            - FILE_IMPORT
            - HIDE_PAGES
            - HISTORIC_RATES
            - INVOICING
            - INVOICE_EMAILS
            - LABOR_COST
            - LOCATIONS
            - MANAGER_ROLE
            - MULTI_FACTOR_AUTHENTICATION
            - PROJECT_BUDGET
            - PROJECT_TEMPLATES
            - QUICKBOOKS_INTEGRATION
            - RECURRING_ESTIMATES
            - REQUIRED_FIELDS
            - SCHEDULED_REPORTS
            - SCHEDULING
            - SCREENSHOTS
            - SSO
            - SUMMARY_ESTIMATE
            - TARGETS_AND_REMINDERS
            - TASK_RATES
            - TIME_OFF
            - UNLIMITED_REPORTS
            - USER_CUSTOM_FIELDS
            - WHO_CAN_CHANGE_TIMEENTRY_BILLABILITY
            - BREAKS
            - KIOSK_SESSION_DURATION
            - KIOSK_PIN_REQUIRED
            - WHO_CAN_SEE_ALL_TIME_ENTRIES
            - WHO_CAN_SEE_PROJECT_STATUS
            - WHO_CAN_SEE_PUBLIC_PROJECTS_ENTRIES
            - WHO_CAN_SEE_TEAMS_DASHBOARD
            - WORKSPACE_LOCK_TIMEENTRIES
            - WORKSPACE_TIME_AUDIT
            - WORKSPACE_TIME_ROUNDING
            - KIOSK
            - FORECASTING
            - TIME_TRACKING
            - ATTENDANCE_REPORT
            - WORKSPACE_TRANSFER
            - FAVORITE_ENTRIES
            - SPLIT_TIME_ENTRY
            - CLIENT_CURRENCY
        CUSTOM_SUBDOMAIN:
          type: string
          enum:
            - ADD_TIME_FOR_OTHERS
            - ADMIN_PANEL
            - ALERTS
            - APPROVAL
            - AUDIT_LOG
            - AUTOMATIC_LOCK
            - BRANDED_REPORTS
            - BULK_EDIT
            - CUSTOM_FIELDS
            - CUSTOM_REPORTING
            - CUSTOM_SUBDOMAIN
            - DECIMAL_FORMAT
            - DISABLE_MANUAL_MODE
            - EDIT_MEMBER_PROFILE
            - EXCLUDE_NON_BILLABLE_FROM_ESTIMATE
            - EXPENSES
            - FILE_IMPORT
            - HIDE_PAGES
            - HISTORIC_RATES
            - INVOICING
            - INVOICE_EMAILS
            - LABOR_COST
            - LOCATIONS
            - MANAGER_ROLE
            - MULTI_FACTOR_AUTHENTICATION
            - PROJECT_BUDGET
            - PROJECT_TEMPLATES
            - QUICKBOOKS_INTEGRATION
            - RECURRING_ESTIMATES
            - REQUIRED_FIELDS
            - SCHEDULED_REPORTS
            - SCHEDULING
            - SCREENSHOTS
            - SSO
            - SUMMARY_ESTIMATE
            - TARGETS_AND_REMINDERS
            - TASK_RATES
            - TIME_OFF
            - UNLIMITED_REPORTS
            - USER_CUSTOM_FIELDS
            - WHO_CAN_CHANGE_TIMEENTRY_BILLABILITY
            - BREAKS
            - KIOSK_SESSION_DURATION
            - KIOSK_PIN_REQUIRED
            - WHO_CAN_SEE_ALL_TIME_ENTRIES
            - WHO_CAN_SEE_PROJECT_STATUS
            - WHO_CAN_SEE_PUBLIC_PROJECTS_ENTRIES
            - WHO_CAN_SEE_TEAMS_DASHBOARD
            - WORKSPACE_LOCK_TIMEENTRIES
            - WORKSPACE_TIME_AUDIT
            - WORKSPACE_TIME_ROUNDING
            - KIOSK
            - FORECASTING
            - TIME_TRACKING
            - ATTENDANCE_REPORT
            - WORKSPACE_TRANSFER
            - FAVORITE_ENTRIES
            - SPLIT_TIME_ENTRY
            - CLIENT_CURRENCY
        DECIMAL_FORMAT:
          type: string
          enum:
            - ADD_TIME_FOR_OTHERS
            - ADMIN_PANEL
            - ALERTS
            - APPROVAL
            - AUDIT_LOG
            - AUTOMATIC_LOCK
            - BRANDED_REPORTS
            - BULK_EDIT
            - CUSTOM_FIELDS
            - CUSTOM_REPORTING
            - CUSTOM_SUBDOMAIN
            - DECIMAL_FORMAT
            - DISABLE_MANUAL_MODE
            - EDIT_MEMBER_PROFILE
            - EXCLUDE_NON_BILLABLE_FROM_ESTIMATE
            - EXPENSES
            - FILE_IMPORT
            - HIDE_PAGES
            - HISTORIC_RATES
            - INVOICING
            - INVOICE_EMAILS
            - LABOR_COST
            - LOCATIONS
            - MANAGER_ROLE
            - MULTI_FACTOR_AUTHENTICATION
            - PROJECT_BUDGET
            - PROJECT_TEMPLATES
            - QUICKBOOKS_INTEGRATION
            - RECURRING_ESTIMATES
            - REQUIRED_FIELDS
            - SCHEDULED_REPORTS
            - SCHEDULING
            - SCREENSHOTS
            - SSO
            - SUMMARY_ESTIMATE
            - TARGETS_AND_REMINDERS
            - TASK_RATES
            - TIME_OFF
            - UNLIMITED_REPORTS
            - USER_CUSTOM_FIELDS
            - WHO_CAN_CHANGE_TIMEENTRY_BILLABILITY
            - BREAKS
            - KIOSK_SESSION_DURATION
            - KIOSK_PIN_REQUIRED
            - WHO_CAN_SEE_ALL_TIME_ENTRIES
            - WHO_CAN_SEE_PROJECT_STATUS
            - WHO_CAN_SEE_PUBLIC_PROJECTS_ENTRIES
            - WHO_CAN_SEE_TEAMS_DASHBOARD
            - WORKSPACE_LOCK_TIMEENTRIES
            - WORKSPACE_TIME_AUDIT
            - WORKSPACE_TIME_ROUNDING
            - KIOSK
            - FORECASTING
            - TIME_TRACKING
            - ATTENDANCE_REPORT
            - WORKSPACE_TRANSFER
            - FAVORITE_ENTRIES
            - SPLIT_TIME_ENTRY
            - CLIENT_CURRENCY
        DISABLE_MANUAL_MODE:
          type: string
          enum:
            - ADD_TIME_FOR_OTHERS
            - ADMIN_PANEL
            - ALERTS
            - APPROVAL
            - AUDIT_LOG
            - AUTOMATIC_LOCK
            - BRANDED_REPORTS
            - BULK_EDIT
            - CUSTOM_FIELDS
            - CUSTOM_REPORTING
            - CUSTOM_SUBDOMAIN
            - DECIMAL_FORMAT
            - DISABLE_MANUAL_MODE
            - EDIT_MEMBER_PROFILE
            - EXCLUDE_NON_BILLABLE_FROM_ESTIMATE
            - EXPENSES
            - FILE_IMPORT
            - HIDE_PAGES
            - HISTORIC_RATES
            - INVOICING
            - INVOICE_EMAILS
            - LABOR_COST
            - LOCATIONS
            - MANAGER_ROLE
            - MULTI_FACTOR_AUTHENTICATION
            - PROJECT_BUDGET
            - PROJECT_TEMPLATES
            - QUICKBOOKS_INTEGRATION
            - RECURRING_ESTIMATES
            - REQUIRED_FIELDS
            - SCHEDULED_REPORTS
            - SCHEDULING
            - SCREENSHOTS
            - SSO
            - SUMMARY_ESTIMATE
            - TARGETS_AND_REMINDERS
            - TASK_RATES
            - TIME_OFF
            - UNLIMITED_REPORTS
            - USER_CUSTOM_FIELDS
            - WHO_CAN_CHANGE_TIMEENTRY_BILLABILITY
            - BREAKS
            - KIOSK_SESSION_DURATION
            - KIOSK_PIN_REQUIRED
            - WHO_CAN_SEE_ALL_TIME_ENTRIES
            - WHO_CAN_SEE_PROJECT_STATUS
            - WHO_CAN_SEE_PUBLIC_PROJECTS_ENTRIES
            - WHO_CAN_SEE_TEAMS_DASHBOARD
            - WORKSPACE_LOCK_TIMEENTRIES
            - WORKSPACE_TIME_AUDIT
            - WORKSPACE_TIME_ROUNDING
            - KIOSK
            - FORECASTING
            - TIME_TRACKING
            - ATTENDANCE_REPORT
            - WORKSPACE_TRANSFER
            - FAVORITE_ENTRIES
            - SPLIT_TIME_ENTRY
            - CLIENT_CURRENCY
        EDIT_MEMBER_PROFILE:
          type: string
          enum:
            - ADD_TIME_FOR_OTHERS
            - ADMIN_PANEL
            - ALERTS
            - APPROVAL
            - AUDIT_LOG
            - AUTOMATIC_LOCK
            - BRANDED_REPORTS
            - BULK_EDIT
            - CUSTOM_FIELDS
            - CUSTOM_REPORTING
            - CUSTOM_SUBDOMAIN
            - DECIMAL_FORMAT
            - DISABLE_MANUAL_MODE
            - EDIT_MEMBER_PROFILE
            - EXCLUDE_NON_BILLABLE_FROM_ESTIMATE
            - EXPENSES
            - FILE_IMPORT
            - HIDE_PAGES
            - HISTORIC_RATES
            - INVOICING
            - INVOICE_EMAILS
            - LABOR_COST
            - LOCATIONS
            - MANAGER_ROLE
            - MULTI_FACTOR_AUTHENTICATION
            - PROJECT_BUDGET
            - PROJECT_TEMPLATES
            - QUICKBOOKS_INTEGRATION
            - RECURRING_ESTIMATES
            - REQUIRED_FIELDS
            - SCHEDULED_REPORTS
            - SCHEDULING
            - SCREENSHOTS
            - SSO
            - SUMMARY_ESTIMATE
            - TARGETS_AND_REMINDERS
            - TASK_RATES
            - TIME_OFF
            - UNLIMITED_REPORTS
            - USER_CUSTOM_FIELDS
            - WHO_CAN_CHANGE_TIMEENTRY_BILLABILITY
            - BREAKS
            - KIOSK_SESSION_DURATION
            - KIOSK_PIN_REQUIRED
            - WHO_CAN_SEE_ALL_TIME_ENTRIES
            - WHO_CAN_SEE_PROJECT_STATUS
            - WHO_CAN_SEE_PUBLIC_PROJECTS_ENTRIES
            - WHO_CAN_SEE_TEAMS_DASHBOARD
            - WORKSPACE_LOCK_TIMEENTRIES
            - WORKSPACE_TIME_AUDIT
            - WORKSPACE_TIME_ROUNDING
            - KIOSK
            - FORECASTING
            - TIME_TRACKING
            - ATTENDANCE_REPORT
            - WORKSPACE_TRANSFER
            - FAVORITE_ENTRIES
            - SPLIT_TIME_ENTRY
            - CLIENT_CURRENCY
        EXCLUDE_NON_BILLABLE_FROM_ESTIMATE:
          type: string
          enum:
            - ADD_TIME_FOR_OTHERS
            - ADMIN_PANEL
            - ALERTS
            - APPROVAL
            - AUDIT_LOG
            - AUTOMATIC_LOCK
            - BRANDED_REPORTS
            - BULK_EDIT
            - CUSTOM_FIELDS
            - CUSTOM_REPORTING
            - CUSTOM_SUBDOMAIN
            - DECIMAL_FORMAT
            - DISABLE_MANUAL_MODE
            - EDIT_MEMBER_PROFILE
            - EXCLUDE_NON_BILLABLE_FROM_ESTIMATE
            - EXPENSES
            - FILE_IMPORT
            - HIDE_PAGES
            - HISTORIC_RATES
            - INVOICING
            - INVOICE_EMAILS
            - LABOR_COST
            - LOCATIONS
            - MANAGER_ROLE
            - MULTI_FACTOR_AUTHENTICATION
            - PROJECT_BUDGET
            - PROJECT_TEMPLATES
            - QUICKBOOKS_INTEGRATION
            - RECURRING_ESTIMATES
            - REQUIRED_FIELDS
            - SCHEDULED_REPORTS
            - SCHEDULING
            - SCREENSHOTS
            - SSO
            - SUMMARY_ESTIMATE
            - TARGETS_AND_REMINDERS
            - TASK_RATES
            - TIME_OFF
            - UNLIMITED_REPORTS
            - USER_CUSTOM_FIELDS
            - WHO_CAN_CHANGE_TIMEENTRY_BILLABILITY
            - BREAKS
            - KIOSK_SESSION_DURATION
            - KIOSK_PIN_REQUIRED
            - WHO_CAN_SEE_ALL_TIME_ENTRIES
            - WHO_CAN_SEE_PROJECT_STATUS
            - WHO_CAN_SEE_PUBLIC_PROJECTS_ENTRIES
            - WHO_CAN_SEE_TEAMS_DASHBOARD
            - WORKSPACE_LOCK_TIMEENTRIES
            - WORKSPACE_TIME_AUDIT
            - WORKSPACE_TIME_ROUNDING
            - KIOSK
            - FORECASTING
            - TIME_TRACKING
            - ATTENDANCE_REPORT
            - WORKSPACE_TRANSFER
            - FAVORITE_ENTRIES
            - SPLIT_TIME_ENTRY
            - CLIENT_CURRENCY
        EXPENSES:
          type: string
          enum:
            - ADD_TIME_FOR_OTHERS
            - ADMIN_PANEL
            - ALERTS
            - APPROVAL
            - AUDIT_LOG
            - AUTOMATIC_LOCK
            - BRANDED_REPORTS
            - BULK_EDIT
            - CUSTOM_FIELDS
            - CUSTOM_REPORTING
            - CUSTOM_SUBDOMAIN
            - DECIMAL_FORMAT
            - DISABLE_MANUAL_MODE
            - EDIT_MEMBER_PROFILE
            - EXCLUDE_NON_BILLABLE_FROM_ESTIMATE
            - EXPENSES
            - FILE_IMPORT
            - HIDE_PAGES
            - HISTORIC_RATES
            - INVOICING
            - INVOICE_EMAILS
            - LABOR_COST
            - LOCATIONS
            - MANAGER_ROLE
            - MULTI_FACTOR_AUTHENTICATION
            - PROJECT_BUDGET
            - PROJECT_TEMPLATES
            - QUICKBOOKS_INTEGRATION
            - RECURRING_ESTIMATES
            - REQUIRED_FIELDS
            - SCHEDULED_REPORTS
            - SCHEDULING
            - SCREENSHOTS
            - SSO
            - SUMMARY_ESTIMATE
            - TARGETS_AND_REMINDERS
            - TASK_RATES
            - TIME_OFF
            - UNLIMITED_REPORTS
            - USER_CUSTOM_FIELDS
            - WHO_CAN_CHANGE_TIMEENTRY_BILLABILITY
            - BREAKS
            - KIOSK_SESSION_DURATION
            - KIOSK_PIN_REQUIRED
            - WHO_CAN_SEE_ALL_TIME_ENTRIES
            - WHO_CAN_SEE_PROJECT_STATUS
            - WHO_CAN_SEE_PUBLIC_PROJECTS_ENTRIES
            - WHO_CAN_SEE_TEAMS_DASHBOARD
            - WORKSPACE_LOCK_TIMEENTRIES
            - WORKSPACE_TIME_AUDIT
            - WORKSPACE_TIME_ROUNDING
            - KIOSK
            - FORECASTING
            - TIME_TRACKING
            - ATTENDANCE_REPORT
            - WORKSPACE_TRANSFER
            - FAVORITE_ENTRIES
            - SPLIT_TIME_ENTRY
            - CLIENT_CURRENCY
        FAVORITE_ENTRIES:
          type: string
          enum:
            - ADD_TIME_FOR_OTHERS
            - ADMIN_PANEL
            - ALERTS
            - APPROVAL
            - AUDIT_LOG
            - AUTOMATIC_LOCK
            - BRANDED_REPORTS
            - BULK_EDIT
            - CUSTOM_FIELDS
            - CUSTOM_REPORTING
            - CUSTOM_SUBDOMAIN
            - DECIMAL_FORMAT
            - DISABLE_MANUAL_MODE
            - EDIT_MEMBER_PROFILE
            - EXCLUDE_NON_BILLABLE_FROM_ESTIMATE
            - EXPENSES
            - FILE_IMPORT
            - HIDE_PAGES
            - HISTORIC_RATES
            - INVOICING
            - INVOICE_EMAILS
            - LABOR_COST
            - LOCATIONS
            - MANAGER_ROLE
            - MULTI_FACTOR_AUTHENTICATION
            - PROJECT_BUDGET
            - PROJECT_TEMPLATES
            - QUICKBOOKS_INTEGRATION
            - RECURRING_ESTIMATES
            - REQUIRED_FIELDS
            - SCHEDULED_REPORTS
            - SCHEDULING
            - SCREENSHOTS
            - SSO
            - SUMMARY_ESTIMATE
            - TARGETS_AND_REMINDERS
            - TASK_RATES
            - TIME_OFF
            - UNLIMITED_REPORTS
            - USER_CUSTOM_FIELDS
            - WHO_CAN_CHANGE_TIMEENTRY_BILLABILITY
            - BREAKS
            - KIOSK_SESSION_DURATION
            - KIOSK_PIN_REQUIRED
            - WHO_CAN_SEE_ALL_TIME_ENTRIES
            - WHO_CAN_SEE_PROJECT_STATUS
            - WHO_CAN_SEE_PUBLIC_PROJECTS_ENTRIES
            - WHO_CAN_SEE_TEAMS_DASHBOARD
            - WORKSPACE_LOCK_TIMEENTRIES
            - WORKSPACE_TIME_AUDIT
            - WORKSPACE_TIME_ROUNDING
            - KIOSK
            - FORECASTING
            - TIME_TRACKING
            - ATTENDANCE_REPORT
            - WORKSPACE_TRANSFER
            - FAVORITE_ENTRIES
            - SPLIT_TIME_ENTRY
            - CLIENT_CURRENCY
        FILE_IMPORT:
          type: string
          enum:
            - ADD_TIME_FOR_OTHERS
            - ADMIN_PANEL
            - ALERTS
            - APPROVAL
            - AUDIT_LOG
            - AUTOMATIC_LOCK
            - BRANDED_REPORTS
            - BULK_EDIT
            - CUSTOM_FIELDS
            - CUSTOM_REPORTING
            - CUSTOM_SUBDOMAIN
            - DECIMAL_FORMAT
            - DISABLE_MANUAL_MODE
            - EDIT_MEMBER_PROFILE
            - EXCLUDE_NON_BILLABLE_FROM_ESTIMATE
            - EXPENSES
            - FILE_IMPORT
            - HIDE_PAGES
            - HISTORIC_RATES
            - INVOICING
            - INVOICE_EMAILS
            - LABOR_COST
            - LOCATIONS
            - MANAGER_ROLE
            - MULTI_FACTOR_AUTHENTICATION
            - PROJECT_BUDGET
            - PROJECT_TEMPLATES
            - QUICKBOOKS_INTEGRATION
            - RECURRING_ESTIMATES
            - REQUIRED_FIELDS
            - SCHEDULED_REPORTS
            - SCHEDULING
            - SCREENSHOTS
            - SSO
            - SUMMARY_ESTIMATE
            - TARGETS_AND_REMINDERS
            - TASK_RATES
            - TIME_OFF
            - UNLIMITED_REPORTS
            - USER_CUSTOM_FIELDS
            - WHO_CAN_CHANGE_TIMEENTRY_BILLABILITY
            - BREAKS
            - KIOSK_SESSION_DURATION
            - KIOSK_PIN_REQUIRED
            - WHO_CAN_SEE_ALL_TIME_ENTRIES
            - WHO_CAN_SEE_PROJECT_STATUS
            - WHO_CAN_SEE_PUBLIC_PROJECTS_ENTRIES
            - WHO_CAN_SEE_TEAMS_DASHBOARD
            - WORKSPACE_LOCK_TIMEENTRIES
            - WORKSPACE_TIME_AUDIT
            - WORKSPACE_TIME_ROUNDING
            - KIOSK
            - FORECASTING
            - TIME_TRACKING
            - ATTENDANCE_REPORT
            - WORKSPACE_TRANSFER
            - FAVORITE_ENTRIES
            - SPLIT_TIME_ENTRY
            - CLIENT_CURRENCY
        FORECASTING:
          type: string
          enum:
            - ADD_TIME_FOR_OTHERS
            - ADMIN_PANEL
            - ALERTS
            - APPROVAL
            - AUDIT_LOG
            - AUTOMATIC_LOCK
            - BRANDED_REPORTS
            - BULK_EDIT
            - CUSTOM_FIELDS
            - CUSTOM_REPORTING
            - CUSTOM_SUBDOMAIN
            - DECIMAL_FORMAT
            - DISABLE_MANUAL_MODE
            - EDIT_MEMBER_PROFILE
            - EXCLUDE_NON_BILLABLE_FROM_ESTIMATE
            - EXPENSES
            - FILE_IMPORT
            - HIDE_PAGES
            - HISTORIC_RATES
            - INVOICING
            - INVOICE_EMAILS
            - LABOR_COST
            - LOCATIONS
            - MANAGER_ROLE
            - MULTI_FACTOR_AUTHENTICATION
            - PROJECT_BUDGET
            - PROJECT_TEMPLATES
            - QUICKBOOKS_INTEGRATION
            - RECURRING_ESTIMATES
            - REQUIRED_FIELDS
            - SCHEDULED_REPORTS
            - SCHEDULING
            - SCREENSHOTS
            - SSO
            - SUMMARY_ESTIMATE
            - TARGETS_AND_REMINDERS
            - TASK_RATES
            - TIME_OFF
            - UNLIMITED_REPORTS
            - USER_CUSTOM_FIELDS
            - WHO_CAN_CHANGE_TIMEENTRY_BILLABILITY
            - BREAKS
            - KIOSK_SESSION_DURATION
            - KIOSK_PIN_REQUIRED
            - WHO_CAN_SEE_ALL_TIME_ENTRIES
            - WHO_CAN_SEE_PROJECT_STATUS
            - WHO_CAN_SEE_PUBLIC_PROJECTS_ENTRIES
            - WHO_CAN_SEE_TEAMS_DASHBOARD
            - WORKSPACE_LOCK_TIMEENTRIES
            - WORKSPACE_TIME_AUDIT
            - WORKSPACE_TIME_ROUNDING
            - KIOSK
            - FORECASTING
            - TIME_TRACKING
            - ATTENDANCE_REPORT
            - WORKSPACE_TRANSFER
            - FAVORITE_ENTRIES
            - SPLIT_TIME_ENTRY
            - CLIENT_CURRENCY
        HIDE_PAGES:
          type: string
          enum:
            - ADD_TIME_FOR_OTHERS
            - ADMIN_PANEL
            - ALERTS
            - APPROVAL
            - AUDIT_LOG
            - AUTOMATIC_LOCK
            - BRANDED_REPORTS
            - BULK_EDIT
            - CUSTOM_FIELDS
            - CUSTOM_REPORTING
            - CUSTOM_SUBDOMAIN
            - DECIMAL_FORMAT
            - DISABLE_MANUAL_MODE
            - EDIT_MEMBER_PROFILE
            - EXCLUDE_NON_BILLABLE_FROM_ESTIMATE
            - EXPENSES
            - FILE_IMPORT
            - HIDE_PAGES
            - HISTORIC_RATES
            - INVOICING
            - INVOICE_EMAILS
            - LABOR_COST
            - LOCATIONS
            - MANAGER_ROLE
            - MULTI_FACTOR_AUTHENTICATION
            - PROJECT_BUDGET
            - PROJECT_TEMPLATES
            - QUICKBOOKS_INTEGRATION
            - RECURRING_ESTIMATES
            - REQUIRED_FIELDS
            - SCHEDULED_REPORTS
            - SCHEDULING
            - SCREENSHOTS
            - SSO
            - SUMMARY_ESTIMATE
            - TARGETS_AND_REMINDERS
            - TASK_RATES
            - TIME_OFF
            - UNLIMITED_REPORTS
            - USER_CUSTOM_FIELDS
            - WHO_CAN_CHANGE_TIMEENTRY_BILLABILITY
            - BREAKS
            - KIOSK_SESSION_DURATION
            - KIOSK_PIN_REQUIRED
            - WHO_CAN_SEE_ALL_TIME_ENTRIES
            - WHO_CAN_SEE_PROJECT_STATUS
            - WHO_CAN_SEE_PUBLIC_PROJECTS_ENTRIES
            - WHO_CAN_SEE_TEAMS_DASHBOARD
            - WORKSPACE_LOCK_TIMEENTRIES
            - WORKSPACE_TIME_AUDIT
            - WORKSPACE_TIME_ROUNDING
            - KIOSK
            - FORECASTING
            - TIME_TRACKING
            - ATTENDANCE_REPORT
            - WORKSPACE_TRANSFER
            - FAVORITE_ENTRIES
            - SPLIT_TIME_ENTRY
            - CLIENT_CURRENCY
        HISTORIC_RATES:
          type: string
          enum:
            - ADD_TIME_FOR_OTHERS
            - ADMIN_PANEL
            - ALERTS
            - APPROVAL
            - AUDIT_LOG
            - AUTOMATIC_LOCK
            - BRANDED_REPORTS
            - BULK_EDIT
            - CUSTOM_FIELDS
            - CUSTOM_REPORTING
            - CUSTOM_SUBDOMAIN
            - DECIMAL_FORMAT
            - DISABLE_MANUAL_MODE
            - EDIT_MEMBER_PROFILE
            - EXCLUDE_NON_BILLABLE_FROM_ESTIMATE
            - EXPENSES
            - FILE_IMPORT
            - HIDE_PAGES
            - HISTORIC_RATES
            - INVOICING
            - INVOICE_EMAILS
            - LABOR_COST
            - LOCATIONS
            - MANAGER_ROLE
            - MULTI_FACTOR_AUTHENTICATION
            - PROJECT_BUDGET
            - PROJECT_TEMPLATES
            - QUICKBOOKS_INTEGRATION
            - RECURRING_ESTIMATES
            - REQUIRED_FIELDS
            - SCHEDULED_REPORTS
            - SCHEDULING
            - SCREENSHOTS
            - SSO
            - SUMMARY_ESTIMATE
            - TARGETS_AND_REMINDERS
            - TASK_RATES
            - TIME_OFF
            - UNLIMITED_REPORTS
            - USER_CUSTOM_FIELDS
            - WHO_CAN_CHANGE_TIMEENTRY_BILLABILITY
            - BREAKS
            - KIOSK_SESSION_DURATION
            - KIOSK_PIN_REQUIRED
            - WHO_CAN_SEE_ALL_TIME_ENTRIES
            - WHO_CAN_SEE_PROJECT_STATUS
            - WHO_CAN_SEE_PUBLIC_PROJECTS_ENTRIES
            - WHO_CAN_SEE_TEAMS_DASHBOARD
            - WORKSPACE_LOCK_TIMEENTRIES
            - WORKSPACE_TIME_AUDIT
            - WORKSPACE_TIME_ROUNDING
            - KIOSK
            - FORECASTING
            - TIME_TRACKING
            - ATTENDANCE_REPORT
            - WORKSPACE_TRANSFER
            - FAVORITE_ENTRIES
            - SPLIT_TIME_ENTRY
            - CLIENT_CURRENCY
        INVOICE_EMAILS:
          type: string
          enum:
            - ADD_TIME_FOR_OTHERS
            - ADMIN_PANEL
            - ALERTS
            - APPROVAL
            - AUDIT_LOG
            - AUTOMATIC_LOCK
            - BRANDED_REPORTS
            - BULK_EDIT
            - CUSTOM_FIELDS
            - CUSTOM_REPORTING
            - CUSTOM_SUBDOMAIN
            - DECIMAL_FORMAT
            - DISABLE_MANUAL_MODE
            - EDIT_MEMBER_PROFILE
            - EXCLUDE_NON_BILLABLE_FROM_ESTIMATE
            - EXPENSES
            - FILE_IMPORT
            - HIDE_PAGES
            - HISTORIC_RATES
            - INVOICING
            - INVOICE_EMAILS
            - LABOR_COST
            - LOCATIONS
            - MANAGER_ROLE
            - MULTI_FACTOR_AUTHENTICATION
            - PROJECT_BUDGET
            - PROJECT_TEMPLATES
            - QUICKBOOKS_INTEGRATION
            - RECURRING_ESTIMATES
            - REQUIRED_FIELDS
            - SCHEDULED_REPORTS
            - SCHEDULING
            - SCREENSHOTS
            - SSO
            - SUMMARY_ESTIMATE
            - TARGETS_AND_REMINDERS
            - TASK_RATES
            - TIME_OFF
            - UNLIMITED_REPORTS
            - USER_CUSTOM_FIELDS
            - WHO_CAN_CHANGE_TIMEENTRY_BILLABILITY
            - BREAKS
            - KIOSK_SESSION_DURATION
            - KIOSK_PIN_REQUIRED
            - WHO_CAN_SEE_ALL_TIME_ENTRIES
            - WHO_CAN_SEE_PROJECT_STATUS
            - WHO_CAN_SEE_PUBLIC_PROJECTS_ENTRIES
            - WHO_CAN_SEE_TEAMS_DASHBOARD
            - WORKSPACE_LOCK_TIMEENTRIES
            - WORKSPACE_TIME_AUDIT
            - WORKSPACE_TIME_ROUNDING
            - KIOSK
            - FORECASTING
            - TIME_TRACKING
            - ATTENDANCE_REPORT
            - WORKSPACE_TRANSFER
            - FAVORITE_ENTRIES
            - SPLIT_TIME_ENTRY
            - CLIENT_CURRENCY
        INVOICING:
          type: string
          enum:
            - ADD_TIME_FOR_OTHERS
            - ADMIN_PANEL
            - ALERTS
            - APPROVAL
            - AUDIT_LOG
            - AUTOMATIC_LOCK
            - BRANDED_REPORTS
            - BULK_EDIT
            - CUSTOM_FIELDS
            - CUSTOM_REPORTING
            - CUSTOM_SUBDOMAIN
            - DECIMAL_FORMAT
            - DISABLE_MANUAL_MODE
            - EDIT_MEMBER_PROFILE
            - EXCLUDE_NON_BILLABLE_FROM_ESTIMATE
            - EXPENSES
            - FILE_IMPORT
            - HIDE_PAGES
            - HISTORIC_RATES
            - INVOICING
            - INVOICE_EMAILS
            - LABOR_COST
            - LOCATIONS
            - MANAGER_ROLE
            - MULTI_FACTOR_AUTHENTICATION
            - PROJECT_BUDGET
            - PROJECT_TEMPLATES
            - QUICKBOOKS_INTEGRATION
            - RECURRING_ESTIMATES
            - REQUIRED_FIELDS
            - SCHEDULED_REPORTS
            - SCHEDULING
            - SCREENSHOTS
            - SSO
            - SUMMARY_ESTIMATE
            - TARGETS_AND_REMINDERS
            - TASK_RATES
            - TIME_OFF
            - UNLIMITED_REPORTS
            - USER_CUSTOM_FIELDS
            - WHO_CAN_CHANGE_TIMEENTRY_BILLABILITY
            - BREAKS
            - KIOSK_SESSION_DURATION
            - KIOSK_PIN_REQUIRED
            - WHO_CAN_SEE_ALL_TIME_ENTRIES
            - WHO_CAN_SEE_PROJECT_STATUS
            - WHO_CAN_SEE_PUBLIC_PROJECTS_ENTRIES
            - WHO_CAN_SEE_TEAMS_DASHBOARD
            - WORKSPACE_LOCK_TIMEENTRIES
            - WORKSPACE_TIME_AUDIT
            - WORKSPACE_TIME_ROUNDING
            - KIOSK
            - FORECASTING
            - TIME_TRACKING
            - ATTENDANCE_REPORT
            - WORKSPACE_TRANSFER
            - FAVORITE_ENTRIES
            - SPLIT_TIME_ENTRY
            - CLIENT_CURRENCY
        KIOSK:
          type: string
          enum:
            - ADD_TIME_FOR_OTHERS
            - ADMIN_PANEL
            - ALERTS
            - APPROVAL
            - AUDIT_LOG
            - AUTOMATIC_LOCK
            - BRANDED_REPORTS
            - BULK_EDIT
            - CUSTOM_FIELDS
            - CUSTOM_REPORTING
            - CUSTOM_SUBDOMAIN
            - DECIMAL_FORMAT
            - DISABLE_MANUAL_MODE
            - EDIT_MEMBER_PROFILE
            - EXCLUDE_NON_BILLABLE_FROM_ESTIMATE
            - EXPENSES
            - FILE_IMPORT
            - HIDE_PAGES
            - HISTORIC_RATES
            - INVOICING
            - INVOICE_EMAILS
            - LABOR_COST
            - LOCATIONS
            - MANAGER_ROLE
            - MULTI_FACTOR_AUTHENTICATION
            - PROJECT_BUDGET
            - PROJECT_TEMPLATES
            - QUICKBOOKS_INTEGRATION
            - RECURRING_ESTIMATES
            - REQUIRED_FIELDS
            - SCHEDULED_REPORTS
            - SCHEDULING
            - SCREENSHOTS
            - SSO
            - SUMMARY_ESTIMATE
            - TARGETS_AND_REMINDERS
            - TASK_RATES
            - TIME_OFF
            - UNLIMITED_REPORTS
            - USER_CUSTOM_FIELDS
            - WHO_CAN_CHANGE_TIMEENTRY_BILLABILITY
            - BREAKS
            - KIOSK_SESSION_DURATION
            - KIOSK_PIN_REQUIRED
            - WHO_CAN_SEE_ALL_TIME_ENTRIES
            - WHO_CAN_SEE_PROJECT_STATUS
            - WHO_CAN_SEE_PUBLIC_PROJECTS_ENTRIES
            - WHO_CAN_SEE_TEAMS_DASHBOARD
            - WORKSPACE_LOCK_TIMEENTRIES
            - WORKSPACE_TIME_AUDIT
            - WORKSPACE_TIME_ROUNDING
            - KIOSK
            - FORECASTING
            - TIME_TRACKING
            - ATTENDANCE_REPORT
            - WORKSPACE_TRANSFER
            - FAVORITE_ENTRIES
            - SPLIT_TIME_ENTRY
            - CLIENT_CURRENCY
        KIOSK_PIN_REQUIRED:
          type: string
          enum:
            - ADD_TIME_FOR_OTHERS
            - ADMIN_PANEL
            - ALERTS
            - APPROVAL
            - AUDIT_LOG
            - AUTOMATIC_LOCK
            - BRANDED_REPORTS
            - BULK_EDIT
            - CUSTOM_FIELDS
            - CUSTOM_REPORTING
            - CUSTOM_SUBDOMAIN
            - DECIMAL_FORMAT
            - DISABLE_MANUAL_MODE
            - EDIT_MEMBER_PROFILE
            - EXCLUDE_NON_BILLABLE_FROM_ESTIMATE
            - EXPENSES
            - FILE_IMPORT
            - HIDE_PAGES
            - HISTORIC_RATES
            - INVOICING
            - INVOICE_EMAILS
            - LABOR_COST
            - LOCATIONS
            - MANAGER_ROLE
            - MULTI_FACTOR_AUTHENTICATION
            - PROJECT_BUDGET
            - PROJECT_TEMPLATES
            - QUICKBOOKS_INTEGRATION
            - RECURRING_ESTIMATES
            - REQUIRED_FIELDS
            - SCHEDULED_REPORTS
            - SCHEDULING
            - SCREENSHOTS
            - SSO
            - SUMMARY_ESTIMATE
            - TARGETS_AND_REMINDERS
            - TASK_RATES
            - TIME_OFF
            - UNLIMITED_REPORTS
            - USER_CUSTOM_FIELDS
            - WHO_CAN_CHANGE_TIMEENTRY_BILLABILITY
            - BREAKS
            - KIOSK_SESSION_DURATION
            - KIOSK_PIN_REQUIRED
            - WHO_CAN_SEE_ALL_TIME_ENTRIES
            - WHO_CAN_SEE_PROJECT_STATUS
            - WHO_CAN_SEE_PUBLIC_PROJECTS_ENTRIES
            - WHO_CAN_SEE_TEAMS_DASHBOARD
            - WORKSPACE_LOCK_TIMEENTRIES
            - WORKSPACE_TIME_AUDIT
            - WORKSPACE_TIME_ROUNDING
            - KIOSK
            - FORECASTING
            - TIME_TRACKING
            - ATTENDANCE_REPORT
            - WORKSPACE_TRANSFER
            - FAVORITE_ENTRIES
            - SPLIT_TIME_ENTRY
            - CLIENT_CURRENCY
        KIOSK_SESSION_DURATION:
          type: string
          enum:
            - ADD_TIME_FOR_OTHERS
            - ADMIN_PANEL
            - ALERTS
            - APPROVAL
            - AUDIT_LOG
            - AUTOMATIC_LOCK
            - BRANDED_REPORTS
            - BULK_EDIT
            - CUSTOM_FIELDS
            - CUSTOM_REPORTING
            - CUSTOM_SUBDOMAIN
            - DECIMAL_FORMAT
            - DISABLE_MANUAL_MODE
            - EDIT_MEMBER_PROFILE
            - EXCLUDE_NON_BILLABLE_FROM_ESTIMATE
            - EXPENSES
            - FILE_IMPORT
            - HIDE_PAGES
            - HISTORIC_RATES
            - INVOICING
            - INVOICE_EMAILS
            - LABOR_COST
            - LOCATIONS
            - MANAGER_ROLE
            - MULTI_FACTOR_AUTHENTICATION
            - PROJECT_BUDGET
            - PROJECT_TEMPLATES
            - QUICKBOOKS_INTEGRATION
            - RECURRING_ESTIMATES
            - REQUIRED_FIELDS
            - SCHEDULED_REPORTS
            - SCHEDULING
            - SCREENSHOTS
            - SSO
            - SUMMARY_ESTIMATE
            - TARGETS_AND_REMINDERS
            - TASK_RATES
            - TIME_OFF
            - UNLIMITED_REPORTS
            - USER_CUSTOM_FIELDS
            - WHO_CAN_CHANGE_TIMEENTRY_BILLABILITY
            - BREAKS
            - KIOSK_SESSION_DURATION
            - KIOSK_PIN_REQUIRED
            - WHO_CAN_SEE_ALL_TIME_ENTRIES
            - WHO_CAN_SEE_PROJECT_STATUS
            - WHO_CAN_SEE_PUBLIC_PROJECTS_ENTRIES
            - WHO_CAN_SEE_TEAMS_DASHBOARD
            - WORKSPACE_LOCK_TIMEENTRIES
            - WORKSPACE_TIME_AUDIT
            - WORKSPACE_TIME_ROUNDING
            - KIOSK
            - FORECASTING
            - TIME_TRACKING
            - ATTENDANCE_REPORT
            - WORKSPACE_TRANSFER
            - FAVORITE_ENTRIES
            - SPLIT_TIME_ENTRY
            - CLIENT_CURRENCY
        LABOR_COST:
          type: string
          enum:
            - ADD_TIME_FOR_OTHERS
            - ADMIN_PANEL
            - ALERTS
            - APPROVAL
            - AUDIT_LOG
            - AUTOMATIC_LOCK
            - BRANDED_REPORTS
            - BULK_EDIT
            - CUSTOM_FIELDS
            - CUSTOM_REPORTING
            - CUSTOM_SUBDOMAIN
            - DECIMAL_FORMAT
            - DISABLE_MANUAL_MODE
            - EDIT_MEMBER_PROFILE
            - EXCLUDE_NON_BILLABLE_FROM_ESTIMATE
            - EXPENSES
            - FILE_IMPORT
            - HIDE_PAGES
            - HISTORIC_RATES
            - INVOICING
            - INVOICE_EMAILS
            - LABOR_COST
            - LOCATIONS
            - MANAGER_ROLE
            - MULTI_FACTOR_AUTHENTICATION
            - PROJECT_BUDGET
            - PROJECT_TEMPLATES
            - QUICKBOOKS_INTEGRATION
            - RECURRING_ESTIMATES
            - REQUIRED_FIELDS
            - SCHEDULED_REPORTS
            - SCHEDULING
            - SCREENSHOTS
            - SSO
            - SUMMARY_ESTIMATE
            - TARGETS_AND_REMINDERS
            - TASK_RATES
            - TIME_OFF
            - UNLIMITED_REPORTS
            - USER_CUSTOM_FIELDS
            - WHO_CAN_CHANGE_TIMEENTRY_BILLABILITY
            - BREAKS
            - KIOSK_SESSION_DURATION
            - KIOSK_PIN_REQUIRED
            - WHO_CAN_SEE_ALL_TIME_ENTRIES
            - WHO_CAN_SEE_PROJECT_STATUS
            - WHO_CAN_SEE_PUBLIC_PROJECTS_ENTRIES
            - WHO_CAN_SEE_TEAMS_DASHBOARD
            - WORKSPACE_LOCK_TIMEENTRIES
            - WORKSPACE_TIME_AUDIT
            - WORKSPACE_TIME_ROUNDING
            - KIOSK
            - FORECASTING
            - TIME_TRACKING
            - ATTENDANCE_REPORT
            - WORKSPACE_TRANSFER
            - FAVORITE_ENTRIES
            - SPLIT_TIME_ENTRY
            - CLIENT_CURRENCY
        LOCATIONS:
          type: string
          enum:
            - ADD_TIME_FOR_OTHERS
            - ADMIN_PANEL
            - ALERTS
            - APPROVAL
            - AUDIT_LOG
            - AUTOMATIC_LOCK
            - BRANDED_REPORTS
            - BULK_EDIT
            - CUSTOM_FIELDS
            - CUSTOM_REPORTING
            - CUSTOM_SUBDOMAIN
            - DECIMAL_FORMAT
            - DISABLE_MANUAL_MODE
            - EDIT_MEMBER_PROFILE
            - EXCLUDE_NON_BILLABLE_FROM_ESTIMATE
            - EXPENSES
            - FILE_IMPORT
            - HIDE_PAGES
            - HISTORIC_RATES
            - INVOICING
            - INVOICE_EMAILS
            - LABOR_COST
            - LOCATIONS
            - MANAGER_ROLE
            - MULTI_FACTOR_AUTHENTICATION
            - PROJECT_BUDGET
            - PROJECT_TEMPLATES
            - QUICKBOOKS_INTEGRATION
            - RECURRING_ESTIMATES
            - REQUIRED_FIELDS
            - SCHEDULED_REPORTS
            - SCHEDULING
            - SCREENSHOTS
            - SSO
            - SUMMARY_ESTIMATE
            - TARGETS_AND_REMINDERS
            - TASK_RATES
            - TIME_OFF
            - UNLIMITED_REPORTS
            - USER_CUSTOM_FIELDS
            - WHO_CAN_CHANGE_TIMEENTRY_BILLABILITY
            - BREAKS
            - KIOSK_SESSION_DURATION
            - KIOSK_PIN_REQUIRED
            - WHO_CAN_SEE_ALL_TIME_ENTRIES
            - WHO_CAN_SEE_PROJECT_STATUS
            - WHO_CAN_SEE_PUBLIC_PROJECTS_ENTRIES
            - WHO_CAN_SEE_TEAMS_DASHBOARD
            - WORKSPACE_LOCK_TIMEENTRIES
            - WORKSPACE_TIME_AUDIT
            - WORKSPACE_TIME_ROUNDING
            - KIOSK
            - FORECASTING
            - TIME_TRACKING
            - ATTENDANCE_REPORT
            - WORKSPACE_TRANSFER
            - FAVORITE_ENTRIES
            - SPLIT_TIME_ENTRY
            - CLIENT_CURRENCY
        MANAGER_ROLE:
          type: string
          enum:
            - ADD_TIME_FOR_OTHERS
            - ADMIN_PANEL
            - ALERTS
            - APPROVAL
            - AUDIT_LOG
            - AUTOMATIC_LOCK
            - BRANDED_REPORTS
            - BULK_EDIT
            - CUSTOM_FIELDS
            - CUSTOM_REPORTING
            - CUSTOM_SUBDOMAIN
            - DECIMAL_FORMAT
            - DISABLE_MANUAL_MODE
            - EDIT_MEMBER_PROFILE
            - EXCLUDE_NON_BILLABLE_FROM_ESTIMATE
            - EXPENSES
            - FILE_IMPORT
            - HIDE_PAGES
            - HISTORIC_RATES
            - INVOICING
            - INVOICE_EMAILS
            - LABOR_COST
            - LOCATIONS
            - MANAGER_ROLE
            - MULTI_FACTOR_AUTHENTICATION
            - PROJECT_BUDGET
            - PROJECT_TEMPLATES
            - QUICKBOOKS_INTEGRATION
            - RECURRING_ESTIMATES
            - REQUIRED_FIELDS
            - SCHEDULED_REPORTS
            - SCHEDULING
            - SCREENSHOTS
            - SSO
            - SUMMARY_ESTIMATE
            - TARGETS_AND_REMINDERS
            - TASK_RATES
            - TIME_OFF
            - UNLIMITED_REPORTS
            - USER_CUSTOM_FIELDS
            - WHO_CAN_CHANGE_TIMEENTRY_BILLABILITY
            - BREAKS
            - KIOSK_SESSION_DURATION
            - KIOSK_PIN_REQUIRED
            - WHO_CAN_SEE_ALL_TIME_ENTRIES
            - WHO_CAN_SEE_PROJECT_STATUS
            - WHO_CAN_SEE_PUBLIC_PROJECTS_ENTRIES
            - WHO_CAN_SEE_TEAMS_DASHBOARD
            - WORKSPACE_LOCK_TIMEENTRIES
            - WORKSPACE_TIME_AUDIT
            - WORKSPACE_TIME_ROUNDING
            - KIOSK
            - FORECASTING
            - TIME_TRACKING
            - ATTENDANCE_REPORT
            - WORKSPACE_TRANSFER
            - FAVORITE_ENTRIES
            - SPLIT_TIME_ENTRY
            - CLIENT_CURRENCY
        MULTI_FACTOR_AUTHENTICATION:
          type: string
          enum:
            - ADD_TIME_FOR_OTHERS
            - ADMIN_PANEL
            - ALERTS
            - APPROVAL
            - AUDIT_LOG
            - AUTOMATIC_LOCK
            - BRANDED_REPORTS
            - BULK_EDIT
            - CUSTOM_FIELDS
            - CUSTOM_REPORTING
            - CUSTOM_SUBDOMAIN
            - DECIMAL_FORMAT
            - DISABLE_MANUAL_MODE
            - EDIT_MEMBER_PROFILE
            - EXCLUDE_NON_BILLABLE_FROM_ESTIMATE
            - EXPENSES
            - FILE_IMPORT
            - HIDE_PAGES
            - HISTORIC_RATES
            - INVOICING
            - INVOICE_EMAILS
            - LABOR_COST
            - LOCATIONS
            - MANAGER_ROLE
            - MULTI_FACTOR_AUTHENTICATION
            - PROJECT_BUDGET
            - PROJECT_TEMPLATES
            - QUICKBOOKS_INTEGRATION
            - RECURRING_ESTIMATES
            - REQUIRED_FIELDS
            - SCHEDULED_REPORTS
            - SCHEDULING
            - SCREENSHOTS
            - SSO
            - SUMMARY_ESTIMATE
            - TARGETS_AND_REMINDERS
            - TASK_RATES
            - TIME_OFF
            - UNLIMITED_REPORTS
            - USER_CUSTOM_FIELDS
            - WHO_CAN_CHANGE_TIMEENTRY_BILLABILITY
            - BREAKS
            - KIOSK_SESSION_DURATION
            - KIOSK_PIN_REQUIRED
            - WHO_CAN_SEE_ALL_TIME_ENTRIES
            - WHO_CAN_SEE_PROJECT_STATUS
            - WHO_CAN_SEE_PUBLIC_PROJECTS_ENTRIES
            - WHO_CAN_SEE_TEAMS_DASHBOARD
            - WORKSPACE_LOCK_TIMEENTRIES
            - WORKSPACE_TIME_AUDIT
            - WORKSPACE_TIME_ROUNDING
            - KIOSK
            - FORECASTING
            - TIME_TRACKING
            - ATTENDANCE_REPORT
            - WORKSPACE_TRANSFER
            - FAVORITE_ENTRIES
            - SPLIT_TIME_ENTRY
            - CLIENT_CURRENCY
        PROJECT_BUDGET:
          type: string
          enum:
            - ADD_TIME_FOR_OTHERS
            - ADMIN_PANEL
            - ALERTS
            - APPROVAL
            - AUDIT_LOG
            - AUTOMATIC_LOCK
            - BRANDED_REPORTS
            - BULK_EDIT
            - CUSTOM_FIELDS
            - CUSTOM_REPORTING
            - CUSTOM_SUBDOMAIN
            - DECIMAL_FORMAT
            - DISABLE_MANUAL_MODE
            - EDIT_MEMBER_PROFILE
            - EXCLUDE_NON_BILLABLE_FROM_ESTIMATE
            - EXPENSES
            - FILE_IMPORT
            - HIDE_PAGES
            - HISTORIC_RATES
            - INVOICING
            - INVOICE_EMAILS
            - LABOR_COST
            - LOCATIONS
            - MANAGER_ROLE
            - MULTI_FACTOR_AUTHENTICATION
            - PROJECT_BUDGET
            - PROJECT_TEMPLATES
            - QUICKBOOKS_INTEGRATION
            - RECURRING_ESTIMATES
            - REQUIRED_FIELDS
            - SCHEDULED_REPORTS
            - SCHEDULING
            - SCREENSHOTS
            - SSO
            - SUMMARY_ESTIMATE
            - TARGETS_AND_REMINDERS
            - TASK_RATES
            - TIME_OFF
            - UNLIMITED_REPORTS
            - USER_CUSTOM_FIELDS
            - WHO_CAN_CHANGE_TIMEENTRY_BILLABILITY
            - BREAKS
            - KIOSK_SESSION_DURATION
            - KIOSK_PIN_REQUIRED
            - WHO_CAN_SEE_ALL_TIME_ENTRIES
            - WHO_CAN_SEE_PROJECT_STATUS
            - WHO_CAN_SEE_PUBLIC_PROJECTS_ENTRIES
            - WHO_CAN_SEE_TEAMS_DASHBOARD
            - WORKSPACE_LOCK_TIMEENTRIES
            - WORKSPACE_TIME_AUDIT
            - WORKSPACE_TIME_ROUNDING
            - KIOSK
            - FORECASTING
            - TIME_TRACKING
            - ATTENDANCE_REPORT
            - WORKSPACE_TRANSFER
            - FAVORITE_ENTRIES
            - SPLIT_TIME_ENTRY
            - CLIENT_CURRENCY
        PROJECT_TEMPLATES:
          type: string
          enum:
            - ADD_TIME_FOR_OTHERS
            - ADMIN_PANEL
            - ALERTS
            - APPROVAL
            - AUDIT_LOG
            - AUTOMATIC_LOCK
            - BRANDED_REPORTS
            - BULK_EDIT
            - CUSTOM_FIELDS
            - CUSTOM_REPORTING
            - CUSTOM_SUBDOMAIN
            - DECIMAL_FORMAT
            - DISABLE_MANUAL_MODE
            - EDIT_MEMBER_PROFILE
            - EXCLUDE_NON_BILLABLE_FROM_ESTIMATE
            - EXPENSES
            - FILE_IMPORT
            - HIDE_PAGES
            - HISTORIC_RATES
            - INVOICING
            - INVOICE_EMAILS
            - LABOR_COST
            - LOCATIONS
            - MANAGER_ROLE
            - MULTI_FACTOR_AUTHENTICATION
            - PROJECT_BUDGET
            - PROJECT_TEMPLATES
            - QUICKBOOKS_INTEGRATION
            - RECURRING_ESTIMATES
            - REQUIRED_FIELDS
            - SCHEDULED_REPORTS
            - SCHEDULING
            - SCREENSHOTS
            - SSO
            - SUMMARY_ESTIMATE
            - TARGETS_AND_REMINDERS
            - TASK_RATES
            - TIME_OFF
            - UNLIMITED_REPORTS
            - USER_CUSTOM_FIELDS
            - WHO_CAN_CHANGE_TIMEENTRY_BILLABILITY
            - BREAKS
            - KIOSK_SESSION_DURATION
            - KIOSK_PIN_REQUIRED
            - WHO_CAN_SEE_ALL_TIME_ENTRIES
            - WHO_CAN_SEE_PROJECT_STATUS
            - WHO_CAN_SEE_PUBLIC_PROJECTS_ENTRIES
            - WHO_CAN_SEE_TEAMS_DASHBOARD
            - WORKSPACE_LOCK_TIMEENTRIES
            - WORKSPACE_TIME_AUDIT
            - WORKSPACE_TIME_ROUNDING
            - KIOSK
            - FORECASTING
            - TIME_TRACKING
            - ATTENDANCE_REPORT
            - WORKSPACE_TRANSFER
            - FAVORITE_ENTRIES
            - SPLIT_TIME_ENTRY
            - CLIENT_CURRENCY
        QUICKBOOKS_INTEGRATION:
          type: string
          enum:
            - ADD_TIME_FOR_OTHERS
            - ADMIN_PANEL
            - ALERTS
            - APPROVAL
            - AUDIT_LOG
            - AUTOMATIC_LOCK
            - BRANDED_REPORTS
            - BULK_EDIT
            - CUSTOM_FIELDS
            - CUSTOM_REPORTING
            - CUSTOM_SUBDOMAIN
            - DECIMAL_FORMAT
            - DISABLE_MANUAL_MODE
            - EDIT_MEMBER_PROFILE
            - EXCLUDE_NON_BILLABLE_FROM_ESTIMATE
            - EXPENSES
            - FILE_IMPORT
            - HIDE_PAGES
            - HISTORIC_RATES
            - INVOICING
            - INVOICE_EMAILS
            - LABOR_COST
            - LOCATIONS
            - MANAGER_ROLE
            - MULTI_FACTOR_AUTHENTICATION
            - PROJECT_BUDGET
            - PROJECT_TEMPLATES
            - QUICKBOOKS_INTEGRATION
            - RECURRING_ESTIMATES
            - REQUIRED_FIELDS
            - SCHEDULED_REPORTS
            - SCHEDULING
            - SCREENSHOTS
            - SSO
            - SUMMARY_ESTIMATE
            - TARGETS_AND_REMINDERS
            - TASK_RATES
            - TIME_OFF
            - UNLIMITED_REPORTS
            - USER_CUSTOM_FIELDS
            - WHO_CAN_CHANGE_TIMEENTRY_BILLABILITY
            - BREAKS
            - KIOSK_SESSION_DURATION
            - KIOSK_PIN_REQUIRED
            - WHO_CAN_SEE_ALL_TIME_ENTRIES
            - WHO_CAN_SEE_PROJECT_STATUS
            - WHO_CAN_SEE_PUBLIC_PROJECTS_ENTRIES
            - WHO_CAN_SEE_TEAMS_DASHBOARD
            - WORKSPACE_LOCK_TIMEENTRIES
            - WORKSPACE_TIME_AUDIT
            - WORKSPACE_TIME_ROUNDING
            - KIOSK
            - FORECASTING
            - TIME_TRACKING
            - ATTENDANCE_REPORT
            - WORKSPACE_TRANSFER
            - FAVORITE_ENTRIES
            - SPLIT_TIME_ENTRY
            - CLIENT_CURRENCY
        RECURRING_ESTIMATES:
          type: string
          enum:
            - ADD_TIME_FOR_OTHERS
            - ADMIN_PANEL
            - ALERTS
            - APPROVAL
            - AUDIT_LOG
            - AUTOMATIC_LOCK
            - BRANDED_REPORTS
            - BULK_EDIT
            - CUSTOM_FIELDS
            - CUSTOM_REPORTING
            - CUSTOM_SUBDOMAIN
            - DECIMAL_FORMAT
            - DISABLE_MANUAL_MODE
            - EDIT_MEMBER_PROFILE
            - EXCLUDE_NON_BILLABLE_FROM_ESTIMATE
            - EXPENSES
            - FILE_IMPORT
            - HIDE_PAGES
            - HISTORIC_RATES
            - INVOICING
            - INVOICE_EMAILS
            - LABOR_COST
            - LOCATIONS
            - MANAGER_ROLE
            - MULTI_FACTOR_AUTHENTICATION
            - PROJECT_BUDGET
            - PROJECT_TEMPLATES
            - QUICKBOOKS_INTEGRATION
            - RECURRING_ESTIMATES
            - REQUIRED_FIELDS
            - SCHEDULED_REPORTS
            - SCHEDULING
            - SCREENSHOTS
            - SSO
            - SUMMARY_ESTIMATE
            - TARGETS_AND_REMINDERS
            - TASK_RATES
            - TIME_OFF
            - UNLIMITED_REPORTS
            - USER_CUSTOM_FIELDS
            - WHO_CAN_CHANGE_TIMEENTRY_BILLABILITY
            - BREAKS
            - KIOSK_SESSION_DURATION
            - KIOSK_PIN_REQUIRED
            - WHO_CAN_SEE_ALL_TIME_ENTRIES
            - WHO_CAN_SEE_PROJECT_STATUS
            - WHO_CAN_SEE_PUBLIC_PROJECTS_ENTRIES
            - WHO_CAN_SEE_TEAMS_DASHBOARD
            - WORKSPACE_LOCK_TIMEENTRIES
            - WORKSPACE_TIME_AUDIT
            - WORKSPACE_TIME_ROUNDING
            - KIOSK
            - FORECASTING
            - TIME_TRACKING
            - ATTENDANCE_REPORT
            - WORKSPACE_TRANSFER
            - FAVORITE_ENTRIES
            - SPLIT_TIME_ENTRY
            - CLIENT_CURRENCY
        REQUIRED_FIELDS:
          type: string
          enum:
            - ADD_TIME_FOR_OTHERS
            - ADMIN_PANEL
            - ALERTS
            - APPROVAL
            - AUDIT_LOG
            - AUTOMATIC_LOCK
            - BRANDED_REPORTS
            - BULK_EDIT
            - CUSTOM_FIELDS
            - CUSTOM_REPORTING
            - CUSTOM_SUBDOMAIN
            - DECIMAL_FORMAT
            - DISABLE_MANUAL_MODE
            - EDIT_MEMBER_PROFILE
            - EXCLUDE_NON_BILLABLE_FROM_ESTIMATE
            - EXPENSES
            - FILE_IMPORT
            - HIDE_PAGES
            - HISTORIC_RATES
            - INVOICING
            - INVOICE_EMAILS
            - LABOR_COST
            - LOCATIONS
            - MANAGER_ROLE
            - MULTI_FACTOR_AUTHENTICATION
            - PROJECT_BUDGET
            - PROJECT_TEMPLATES
            - QUICKBOOKS_INTEGRATION
            - RECURRING_ESTIMATES
            - REQUIRED_FIELDS
            - SCHEDULED_REPORTS
            - SCHEDULING
            - SCREENSHOTS
            - SSO
            - SUMMARY_ESTIMATE
            - TARGETS_AND_REMINDERS
            - TASK_RATES
            - TIME_OFF
            - UNLIMITED_REPORTS
            - USER_CUSTOM_FIELDS
            - WHO_CAN_CHANGE_TIMEENTRY_BILLABILITY
            - BREAKS
            - KIOSK_SESSION_DURATION
            - KIOSK_PIN_REQUIRED
            - WHO_CAN_SEE_ALL_TIME_ENTRIES
            - WHO_CAN_SEE_PROJECT_STATUS
            - WHO_CAN_SEE_PUBLIC_PROJECTS_ENTRIES
            - WHO_CAN_SEE_TEAMS_DASHBOARD
            - WORKSPACE_LOCK_TIMEENTRIES
            - WORKSPACE_TIME_AUDIT
            - WORKSPACE_TIME_ROUNDING
            - KIOSK
            - FORECASTING
            - TIME_TRACKING
            - ATTENDANCE_REPORT
            - WORKSPACE_TRANSFER
            - FAVORITE_ENTRIES
            - SPLIT_TIME_ENTRY
            - CLIENT_CURRENCY
        SCHEDULED_REPORTS:
          type: string
          enum:
            - ADD_TIME_FOR_OTHERS
            - ADMIN_PANEL
            - ALERTS
            - APPROVAL
            - AUDIT_LOG
            - AUTOMATIC_LOCK
            - BRANDED_REPORTS
            - BULK_EDIT
            - CUSTOM_FIELDS
            - CUSTOM_REPORTING
            - CUSTOM_SUBDOMAIN
            - DECIMAL_FORMAT
            - DISABLE_MANUAL_MODE
            - EDIT_MEMBER_PROFILE
            - EXCLUDE_NON_BILLABLE_FROM_ESTIMATE
            - EXPENSES
            - FILE_IMPORT
            - HIDE_PAGES
            - HISTORIC_RATES
            - INVOICING
            - INVOICE_EMAILS
            - LABOR_COST
            - LOCATIONS
            - MANAGER_ROLE
            - MULTI_FACTOR_AUTHENTICATION
            - PROJECT_BUDGET
            - PROJECT_TEMPLATES
            - QUICKBOOKS_INTEGRATION
            - RECURRING_ESTIMATES
            - REQUIRED_FIELDS
            - SCHEDULED_REPORTS
            - SCHEDULING
            - SCREENSHOTS
            - SSO
            - SUMMARY_ESTIMATE
            - TARGETS_AND_REMINDERS
            - TASK_RATES
            - TIME_OFF
            - UNLIMITED_REPORTS
            - USER_CUSTOM_FIELDS
            - WHO_CAN_CHANGE_TIMEENTRY_BILLABILITY
            - BREAKS
            - KIOSK_SESSION_DURATION
            - KIOSK_PIN_REQUIRED
            - WHO_CAN_SEE_ALL_TIME_ENTRIES
            - WHO_CAN_SEE_PROJECT_STATUS
            - WHO_CAN_SEE_PUBLIC_PROJECTS_ENTRIES
            - WHO_CAN_SEE_TEAMS_DASHBOARD
            - WORKSPACE_LOCK_TIMEENTRIES
            - WORKSPACE_TIME_AUDIT
            - WORKSPACE_TIME_ROUNDING
            - KIOSK
            - FORECASTING
            - TIME_TRACKING
            - ATTENDANCE_REPORT
            - WORKSPACE_TRANSFER
            - FAVORITE_ENTRIES
            - SPLIT_TIME_ENTRY
            - CLIENT_CURRENCY
        SCHEDULING:
          type: string
          enum:
            - ADD_TIME_FOR_OTHERS
            - ADMIN_PANEL
            - ALERTS
            - APPROVAL
            - AUDIT_LOG
            - AUTOMATIC_LOCK
            - BRANDED_REPORTS
            - BULK_EDIT
            - CUSTOM_FIELDS
            - CUSTOM_REPORTING
            - CUSTOM_SUBDOMAIN
            - DECIMAL_FORMAT
            - DISABLE_MANUAL_MODE
            - EDIT_MEMBER_PROFILE
            - EXCLUDE_NON_BILLABLE_FROM_ESTIMATE
            - EXPENSES
            - FILE_IMPORT
            - HIDE_PAGES
            - HISTORIC_RATES
            - INVOICING
            - INVOICE_EMAILS
            - LABOR_COST
            - LOCATIONS
            - MANAGER_ROLE
            - MULTI_FACTOR_AUTHENTICATION
            - PROJECT_BUDGET
            - PROJECT_TEMPLATES
            - QUICKBOOKS_INTEGRATION
            - RECURRING_ESTIMATES
            - REQUIRED_FIELDS
            - SCHEDULED_REPORTS
            - SCHEDULING
            - SCREENSHOTS
            - SSO
            - SUMMARY_ESTIMATE
            - TARGETS_AND_REMINDERS
            - TASK_RATES
            - TIME_OFF
            - UNLIMITED_REPORTS
            - USER_CUSTOM_FIELDS
            - WHO_CAN_CHANGE_TIMEENTRY_BILLABILITY
            - BREAKS
            - KIOSK_SESSION_DURATION
            - KIOSK_PIN_REQUIRED
            - WHO_CAN_SEE_ALL_TIME_ENTRIES
            - WHO_CAN_SEE_PROJECT_STATUS
            - WHO_CAN_SEE_PUBLIC_PROJECTS_ENTRIES
            - WHO_CAN_SEE_TEAMS_DASHBOARD
            - WORKSPACE_LOCK_TIMEENTRIES
            - WORKSPACE_TIME_AUDIT
            - WORKSPACE_TIME_ROUNDING
            - KIOSK
            - FORECASTING
            - TIME_TRACKING
            - ATTENDANCE_REPORT
            - WORKSPACE_TRANSFER
            - FAVORITE_ENTRIES
            - SPLIT_TIME_ENTRY
            - CLIENT_CURRENCY
        SCREENSHOTS:
          type: string
          enum:
            - ADD_TIME_FOR_OTHERS
            - ADMIN_PANEL
            - ALERTS
            - APPROVAL
            - AUDIT_LOG
            - AUTOMATIC_LOCK
            - BRANDED_REPORTS
            - BULK_EDIT
            - CUSTOM_FIELDS
            - CUSTOM_REPORTING
            - CUSTOM_SUBDOMAIN
            - DECIMAL_FORMAT
            - DISABLE_MANUAL_MODE
            - EDIT_MEMBER_PROFILE
            - EXCLUDE_NON_BILLABLE_FROM_ESTIMATE
            - EXPENSES
            - FILE_IMPORT
            - HIDE_PAGES
            - HISTORIC_RATES
            - INVOICING
            - INVOICE_EMAILS
            - LABOR_COST
            - LOCATIONS
            - MANAGER_ROLE
            - MULTI_FACTOR_AUTHENTICATION
            - PROJECT_BUDGET
            - PROJECT_TEMPLATES
            - QUICKBOOKS_INTEGRATION
            - RECURRING_ESTIMATES
            - REQUIRED_FIELDS
            - SCHEDULED_REPORTS
            - SCHEDULING
            - SCREENSHOTS
            - SSO
            - SUMMARY_ESTIMATE
            - TARGETS_AND_REMINDERS
            - TASK_RATES
            - TIME_OFF
            - UNLIMITED_REPORTS
            - USER_CUSTOM_FIELDS
            - WHO_CAN_CHANGE_TIMEENTRY_BILLABILITY
            - BREAKS
            - KIOSK_SESSION_DURATION
            - KIOSK_PIN_REQUIRED
            - WHO_CAN_SEE_ALL_TIME_ENTRIES
            - WHO_CAN_SEE_PROJECT_STATUS
            - WHO_CAN_SEE_PUBLIC_PROJECTS_ENTRIES
            - WHO_CAN_SEE_TEAMS_DASHBOARD
            - WORKSPACE_LOCK_TIMEENTRIES
            - WORKSPACE_TIME_AUDIT
            - WORKSPACE_TIME_ROUNDING
            - KIOSK
            - FORECASTING
            - TIME_TRACKING
            - ATTENDANCE_REPORT
            - WORKSPACE_TRANSFER
            - FAVORITE_ENTRIES
            - SPLIT_TIME_ENTRY
            - CLIENT_CURRENCY
        SPLIT_TIME_ENTRY:
          type: string
          enum:
            - ADD_TIME_FOR_OTHERS
            - ADMIN_PANEL
            - ALERTS
            - APPROVAL
            - AUDIT_LOG
            - AUTOMATIC_LOCK
            - BRANDED_REPORTS
            - BULK_EDIT
            - CUSTOM_FIELDS
            - CUSTOM_REPORTING
            - CUSTOM_SUBDOMAIN
            - DECIMAL_FORMAT
            - DISABLE_MANUAL_MODE
            - EDIT_MEMBER_PROFILE
            - EXCLUDE_NON_BILLABLE_FROM_ESTIMATE
            - EXPENSES
            - FILE_IMPORT
            - HIDE_PAGES
            - HISTORIC_RATES
            - INVOICING
            - INVOICE_EMAILS
            - LABOR_COST
            - LOCATIONS
            - MANAGER_ROLE
            - MULTI_FACTOR_AUTHENTICATION
            - PROJECT_BUDGET
            - PROJECT_TEMPLATES
            - QUICKBOOKS_INTEGRATION
            - RECURRING_ESTIMATES
            - REQUIRED_FIELDS
            - SCHEDULED_REPORTS
            - SCHEDULING
            - SCREENSHOTS
            - SSO
            - SUMMARY_ESTIMATE
            - TARGETS_AND_REMINDERS
            - TASK_RATES
            - TIME_OFF
            - UNLIMITED_REPORTS
            - USER_CUSTOM_FIELDS
            - WHO_CAN_CHANGE_TIMEENTRY_BILLABILITY
            - BREAKS
            - KIOSK_SESSION_DURATION
            - KIOSK_PIN_REQUIRED
            - WHO_CAN_SEE_ALL_TIME_ENTRIES
            - WHO_CAN_SEE_PROJECT_STATUS
            - WHO_CAN_SEE_PUBLIC_PROJECTS_ENTRIES
            - WHO_CAN_SEE_TEAMS_DASHBOARD
            - WORKSPACE_LOCK_TIMEENTRIES
            - WORKSPACE_TIME_AUDIT
            - WORKSPACE_TIME_ROUNDING
            - KIOSK
            - FORECASTING
            - TIME_TRACKING
            - ATTENDANCE_REPORT
            - WORKSPACE_TRANSFER
            - FAVORITE_ENTRIES
            - SPLIT_TIME_ENTRY
            - CLIENT_CURRENCY
        SSO:
          type: string
          enum:
            - ADD_TIME_FOR_OTHERS
            - ADMIN_PANEL
            - ALERTS
            - APPROVAL
            - AUDIT_LOG
            - AUTOMATIC_LOCK
            - BRANDED_REPORTS
            - BULK_EDIT
            - CUSTOM_FIELDS
            - CUSTOM_REPORTING
            - CUSTOM_SUBDOMAIN
            - DECIMAL_FORMAT
            - DISABLE_MANUAL_MODE
            - EDIT_MEMBER_PROFILE
            - EXCLUDE_NON_BILLABLE_FROM_ESTIMATE
            - EXPENSES
            - FILE_IMPORT
            - HIDE_PAGES
            - HISTORIC_RATES
            - INVOICING
            - INVOICE_EMAILS
            - LABOR_COST
            - LOCATIONS
            - MANAGER_ROLE
            - MULTI_FACTOR_AUTHENTICATION
            - PROJECT_BUDGET
            - PROJECT_TEMPLATES
            - QUICKBOOKS_INTEGRATION
            - RECURRING_ESTIMATES
            - REQUIRED_FIELDS
            - SCHEDULED_REPORTS
            - SCHEDULING
            - SCREENSHOTS
            - SSO
            - SUMMARY_ESTIMATE
            - TARGETS_AND_REMINDERS
            - TASK_RATES
            - TIME_OFF
            - UNLIMITED_REPORTS
            - USER_CUSTOM_FIELDS
            - WHO_CAN_CHANGE_TIMEENTRY_BILLABILITY
            - BREAKS
            - KIOSK_SESSION_DURATION
            - KIOSK_PIN_REQUIRED
            - WHO_CAN_SEE_ALL_TIME_ENTRIES
            - WHO_CAN_SEE_PROJECT_STATUS
            - WHO_CAN_SEE_PUBLIC_PROJECTS_ENTRIES
            - WHO_CAN_SEE_TEAMS_DASHBOARD
            - WORKSPACE_LOCK_TIMEENTRIES
            - WORKSPACE_TIME_AUDIT
            - WORKSPACE_TIME_ROUNDING
            - KIOSK
            - FORECASTING
            - TIME_TRACKING
            - ATTENDANCE_REPORT
            - WORKSPACE_TRANSFER
            - FAVORITE_ENTRIES
            - SPLIT_TIME_ENTRY
            - CLIENT_CURRENCY
        SUMMARY_ESTIMATE:
          type: string
          enum:
            - ADD_TIME_FOR_OTHERS
            - ADMIN_PANEL
            - ALERTS
            - APPROVAL
            - AUDIT_LOG
            - AUTOMATIC_LOCK
            - BRANDED_REPORTS
            - BULK_EDIT
            - CUSTOM_FIELDS
            - CUSTOM_REPORTING
            - CUSTOM_SUBDOMAIN
            - DECIMAL_FORMAT
            - DISABLE_MANUAL_MODE
            - EDIT_MEMBER_PROFILE
            - EXCLUDE_NON_BILLABLE_FROM_ESTIMATE
            - EXPENSES
            - FILE_IMPORT
            - HIDE_PAGES
            - HISTORIC_RATES
            - INVOICING
            - INVOICE_EMAILS
            - LABOR_COST
            - LOCATIONS
            - MANAGER_ROLE
            - MULTI_FACTOR_AUTHENTICATION
            - PROJECT_BUDGET
            - PROJECT_TEMPLATES
            - QUICKBOOKS_INTEGRATION
            - RECURRING_ESTIMATES
            - REQUIRED_FIELDS
            - SCHEDULED_REPORTS
            - SCHEDULING
            - SCREENSHOTS
            - SSO
            - SUMMARY_ESTIMATE
            - TARGETS_AND_REMINDERS
            - TASK_RATES
            - TIME_OFF
            - UNLIMITED_REPORTS
            - USER_CUSTOM_FIELDS
            - WHO_CAN_CHANGE_TIMEENTRY_BILLABILITY
            - BREAKS
            - KIOSK_SESSION_DURATION
            - KIOSK_PIN_REQUIRED
            - WHO_CAN_SEE_ALL_TIME_ENTRIES
            - WHO_CAN_SEE_PROJECT_STATUS
            - WHO_CAN_SEE_PUBLIC_PROJECTS_ENTRIES
            - WHO_CAN_SEE_TEAMS_DASHBOARD
            - WORKSPACE_LOCK_TIMEENTRIES
            - WORKSPACE_TIME_AUDIT
            - WORKSPACE_TIME_ROUNDING
            - KIOSK
            - FORECASTING
            - TIME_TRACKING
            - ATTENDANCE_REPORT
            - WORKSPACE_TRANSFER
            - FAVORITE_ENTRIES
            - SPLIT_TIME_ENTRY
            - CLIENT_CURRENCY
        TARGETS_AND_REMINDERS:
          type: string
          enum:
            - ADD_TIME_FOR_OTHERS
            - ADMIN_PANEL
            - ALERTS
            - APPROVAL
            - AUDIT_LOG
            - AUTOMATIC_LOCK
            - BRANDED_REPORTS
            - BULK_EDIT
            - CUSTOM_FIELDS
            - CUSTOM_REPORTING
            - CUSTOM_SUBDOMAIN
            - DECIMAL_FORMAT
            - DISABLE_MANUAL_MODE
            - EDIT_MEMBER_PROFILE
            - EXCLUDE_NON_BILLABLE_FROM_ESTIMATE
            - EXPENSES
            - FILE_IMPORT
            - HIDE_PAGES
            - HISTORIC_RATES
            - INVOICING
            - INVOICE_EMAILS
            - LABOR_COST
            - LOCATIONS
            - MANAGER_ROLE
            - MULTI_FACTOR_AUTHENTICATION
            - PROJECT_BUDGET
            - PROJECT_TEMPLATES
            - QUICKBOOKS_INTEGRATION
            - RECURRING_ESTIMATES
            - REQUIRED_FIELDS
            - SCHEDULED_REPORTS
            - SCHEDULING
            - SCREENSHOTS
            - SSO
            - SUMMARY_ESTIMATE
            - TARGETS_AND_REMINDERS
            - TASK_RATES
            - TIME_OFF
            - UNLIMITED_REPORTS
            - USER_CUSTOM_FIELDS
            - WHO_CAN_CHANGE_TIMEENTRY_BILLABILITY
            - BREAKS
            - KIOSK_SESSION_DURATION
            - KIOSK_PIN_REQUIRED
            - WHO_CAN_SEE_ALL_TIME_ENTRIES
            - WHO_CAN_SEE_PROJECT_STATUS
            - WHO_CAN_SEE_PUBLIC_PROJECTS_ENTRIES
            - WHO_CAN_SEE_TEAMS_DASHBOARD
            - WORKSPACE_LOCK_TIMEENTRIES
            - WORKSPACE_TIME_AUDIT
            - WORKSPACE_TIME_ROUNDING
            - KIOSK
            - FORECASTING
            - TIME_TRACKING
            - ATTENDANCE_REPORT
            - WORKSPACE_TRANSFER
            - FAVORITE_ENTRIES
            - SPLIT_TIME_ENTRY
            - CLIENT_CURRENCY
        TASK_RATES:
          type: string
          enum:
            - ADD_TIME_FOR_OTHERS
            - ADMIN_PANEL
            - ALERTS
            - APPROVAL
            - AUDIT_LOG
            - AUTOMATIC_LOCK
            - BRANDED_REPORTS
            - BULK_EDIT
            - CUSTOM_FIELDS
            - CUSTOM_REPORTING
            - CUSTOM_SUBDOMAIN
            - DECIMAL_FORMAT
            - DISABLE_MANUAL_MODE
            - EDIT_MEMBER_PROFILE
            - EXCLUDE_NON_BILLABLE_FROM_ESTIMATE
            - EXPENSES
            - FILE_IMPORT
            - HIDE_PAGES
            - HISTORIC_RATES
            - INVOICING
            - INVOICE_EMAILS
            - LABOR_COST
            - LOCATIONS
            - MANAGER_ROLE
            - MULTI_FACTOR_AUTHENTICATION
            - PROJECT_BUDGET
            - PROJECT_TEMPLATES
            - QUICKBOOKS_INTEGRATION
            - RECURRING_ESTIMATES
            - REQUIRED_FIELDS
            - SCHEDULED_REPORTS
            - SCHEDULING
            - SCREENSHOTS
            - SSO
            - SUMMARY_ESTIMATE
            - TARGETS_AND_REMINDERS
            - TASK_RATES
            - TIME_OFF
            - UNLIMITED_REPORTS
            - USER_CUSTOM_FIELDS
            - WHO_CAN_CHANGE_TIMEENTRY_BILLABILITY
            - BREAKS
            - KIOSK_SESSION_DURATION
            - KIOSK_PIN_REQUIRED
            - WHO_CAN_SEE_ALL_TIME_ENTRIES
            - WHO_CAN_SEE_PROJECT_STATUS
            - WHO_CAN_SEE_PUBLIC_PROJECTS_ENTRIES
            - WHO_CAN_SEE_TEAMS_DASHBOARD
            - WORKSPACE_LOCK_TIMEENTRIES
            - WORKSPACE_TIME_AUDIT
            - WORKSPACE_TIME_ROUNDING
            - KIOSK
            - FORECASTING
            - TIME_TRACKING
            - ATTENDANCE_REPORT
            - WORKSPACE_TRANSFER
            - FAVORITE_ENTRIES
            - SPLIT_TIME_ENTRY
            - CLIENT_CURRENCY
        TIME_OFF:
          type: string
          enum:
            - ADD_TIME_FOR_OTHERS
            - ADMIN_PANEL
            - ALERTS
            - APPROVAL
            - AUDIT_LOG
            - AUTOMATIC_LOCK
            - BRANDED_REPORTS
            - BULK_EDIT
            - CUSTOM_FIELDS
            - CUSTOM_REPORTING
            - CUSTOM_SUBDOMAIN
            - DECIMAL_FORMAT
            - DISABLE_MANUAL_MODE
            - EDIT_MEMBER_PROFILE
            - EXCLUDE_NON_BILLABLE_FROM_ESTIMATE
            - EXPENSES
            - FILE_IMPORT
            - HIDE_PAGES
            - HISTORIC_RATES
            - INVOICING
            - INVOICE_EMAILS
            - LABOR_COST
            - LOCATIONS
            - MANAGER_ROLE
            - MULTI_FACTOR_AUTHENTICATION
            - PROJECT_BUDGET
            - PROJECT_TEMPLATES
            - QUICKBOOKS_INTEGRATION
            - RECURRING_ESTIMATES
            - REQUIRED_FIELDS
            - SCHEDULED_REPORTS
            - SCHEDULING
            - SCREENSHOTS
            - SSO
            - SUMMARY_ESTIMATE
            - TARGETS_AND_REMINDERS
            - TASK_RATES
            - TIME_OFF
            - UNLIMITED_REPORTS
            - USER_CUSTOM_FIELDS
            - WHO_CAN_CHANGE_TIMEENTRY_BILLABILITY
            - BREAKS
            - KIOSK_SESSION_DURATION
            - KIOSK_PIN_REQUIRED
            - WHO_CAN_SEE_ALL_TIME_ENTRIES
            - WHO_CAN_SEE_PROJECT_STATUS
            - WHO_CAN_SEE_PUBLIC_PROJECTS_ENTRIES
            - WHO_CAN_SEE_TEAMS_DASHBOARD
            - WORKSPACE_LOCK_TIMEENTRIES
            - WORKSPACE_TIME_AUDIT
            - WORKSPACE_TIME_ROUNDING
            - KIOSK
            - FORECASTING
            - TIME_TRACKING
            - ATTENDANCE_REPORT
            - WORKSPACE_TRANSFER
            - FAVORITE_ENTRIES
            - SPLIT_TIME_ENTRY
            - CLIENT_CURRENCY
        TIME_TRACKING:
          type: string
          enum:
            - ADD_TIME_FOR_OTHERS
            - ADMIN_PANEL
            - ALERTS
            - APPROVAL
            - AUDIT_LOG
            - AUTOMATIC_LOCK
            - BRANDED_REPORTS
            - BULK_EDIT
            - CUSTOM_FIELDS
            - CUSTOM_REPORTING
            - CUSTOM_SUBDOMAIN
            - DECIMAL_FORMAT
            - DISABLE_MANUAL_MODE
            - EDIT_MEMBER_PROFILE
            - EXCLUDE_NON_BILLABLE_FROM_ESTIMATE
            - EXPENSES
            - FILE_IMPORT
            - HIDE_PAGES
            - HISTORIC_RATES
            - INVOICING
            - INVOICE_EMAILS
            - LABOR_COST
            - LOCATIONS
            - MANAGER_ROLE
            - MULTI_FACTOR_AUTHENTICATION
            - PROJECT_BUDGET
            - PROJECT_TEMPLATES
            - QUICKBOOKS_INTEGRATION
            - RECURRING_ESTIMATES
            - REQUIRED_FIELDS
            - SCHEDULED_REPORTS
            - SCHEDULING
            - SCREENSHOTS
            - SSO
            - SUMMARY_ESTIMATE
            - TARGETS_AND_REMINDERS
            - TASK_RATES
            - TIME_OFF
            - UNLIMITED_REPORTS
            - USER_CUSTOM_FIELDS
            - WHO_CAN_CHANGE_TIMEENTRY_BILLABILITY
            - BREAKS
            - KIOSK_SESSION_DURATION
            - KIOSK_PIN_REQUIRED
            - WHO_CAN_SEE_ALL_TIME_ENTRIES
            - WHO_CAN_SEE_PROJECT_STATUS
            - WHO_CAN_SEE_PUBLIC_PROJECTS_ENTRIES
            - WHO_CAN_SEE_TEAMS_DASHBOARD
            - WORKSPACE_LOCK_TIMEENTRIES
            - WORKSPACE_TIME_AUDIT
            - WORKSPACE_TIME_ROUNDING
            - KIOSK
            - FORECASTING
            - TIME_TRACKING
            - ATTENDANCE_REPORT
            - WORKSPACE_TRANSFER
            - FAVORITE_ENTRIES
            - SPLIT_TIME_ENTRY
            - CLIENT_CURRENCY
        UNLIMITED_REPORTS:
          type: string
          enum:
            - ADD_TIME_FOR_OTHERS
            - ADMIN_PANEL
            - ALERTS
            - APPROVAL
            - AUDIT_LOG
            - AUTOMATIC_LOCK
            - BRANDED_REPORTS
            - BULK_EDIT
            - CUSTOM_FIELDS
            - CUSTOM_REPORTING
            - CUSTOM_SUBDOMAIN
            - DECIMAL_FORMAT
            - DISABLE_MANUAL_MODE
            - EDIT_MEMBER_PROFILE
            - EXCLUDE_NON_BILLABLE_FROM_ESTIMATE
            - EXPENSES
            - FILE_IMPORT
            - HIDE_PAGES
            - HISTORIC_RATES
            - INVOICING
            - INVOICE_EMAILS
            - LABOR_COST
            - LOCATIONS
            - MANAGER_ROLE
            - MULTI_FACTOR_AUTHENTICATION
            - PROJECT_BUDGET
            - PROJECT_TEMPLATES
            - QUICKBOOKS_INTEGRATION
            - RECURRING_ESTIMATES
            - REQUIRED_FIELDS
            - SCHEDULED_REPORTS
            - SCHEDULING
            - SCREENSHOTS
            - SSO
            - SUMMARY_ESTIMATE
            - TARGETS_AND_REMINDERS
            - TASK_RATES
            - TIME_OFF
            - UNLIMITED_REPORTS
            - USER_CUSTOM_FIELDS
            - WHO_CAN_CHANGE_TIMEENTRY_BILLABILITY
            - BREAKS
            - KIOSK_SESSION_DURATION
            - KIOSK_PIN_REQUIRED
            - WHO_CAN_SEE_ALL_TIME_ENTRIES
            - WHO_CAN_SEE_PROJECT_STATUS
            - WHO_CAN_SEE_PUBLIC_PROJECTS_ENTRIES
            - WHO_CAN_SEE_TEAMS_DASHBOARD
            - WORKSPACE_LOCK_TIMEENTRIES
            - WORKSPACE_TIME_AUDIT
            - WORKSPACE_TIME_ROUNDING
            - KIOSK
            - FORECASTING
            - TIME_TRACKING
            - ATTENDANCE_REPORT
            - WORKSPACE_TRANSFER
            - FAVORITE_ENTRIES
            - SPLIT_TIME_ENTRY
            - CLIENT_CURRENCY
        USER_CUSTOM_FIELDS:
          type: string
          enum:
            - ADD_TIME_FOR_OTHERS
            - ADMIN_PANEL
            - ALERTS
            - APPROVAL
            - AUDIT_LOG
            - AUTOMATIC_LOCK
            - BRANDED_REPORTS
            - BULK_EDIT
            - CUSTOM_FIELDS
            - CUSTOM_REPORTING
            - CUSTOM_SUBDOMAIN
            - DECIMAL_FORMAT
            - DISABLE_MANUAL_MODE
            - EDIT_MEMBER_PROFILE
            - EXCLUDE_NON_BILLABLE_FROM_ESTIMATE
            - EXPENSES
            - FILE_IMPORT
            - HIDE_PAGES
            - HISTORIC_RATES
            - INVOICING
            - INVOICE_EMAILS
            - LABOR_COST
            - LOCATIONS
            - MANAGER_ROLE
            - MULTI_FACTOR_AUTHENTICATION
            - PROJECT_BUDGET
            - PROJECT_TEMPLATES
            - QUICKBOOKS_INTEGRATION
            - RECURRING_ESTIMATES
            - REQUIRED_FIELDS
            - SCHEDULED_REPORTS
            - SCHEDULING
            - SCREENSHOTS
            - SSO
            - SUMMARY_ESTIMATE
            - TARGETS_AND_REMINDERS
            - TASK_RATES
            - TIME_OFF
            - UNLIMITED_REPORTS
            - USER_CUSTOM_FIELDS
            - WHO_CAN_CHANGE_TIMEENTRY_BILLABILITY
            - BREAKS
            - KIOSK_SESSION_DURATION
            - KIOSK_PIN_REQUIRED
            - WHO_CAN_SEE_ALL_TIME_ENTRIES
            - WHO_CAN_SEE_PROJECT_STATUS
            - WHO_CAN_SEE_PUBLIC_PROJECTS_ENTRIES
            - WHO_CAN_SEE_TEAMS_DASHBOARD
            - WORKSPACE_LOCK_TIMEENTRIES
            - WORKSPACE_TIME_AUDIT
            - WORKSPACE_TIME_ROUNDING
            - KIOSK
            - FORECASTING
            - TIME_TRACKING
            - ATTENDANCE_REPORT
            - WORKSPACE_TRANSFER
            - FAVORITE_ENTRIES
            - SPLIT_TIME_ENTRY
            - CLIENT_CURRENCY
        WHO_CAN_CHANGE_TIMEENTRY_BILLABILITY:
          type: string
          enum:
            - ADD_TIME_FOR_OTHERS
            - ADMIN_PANEL
            - ALERTS
            - APPROVAL
            - AUDIT_LOG
            - AUTOMATIC_LOCK
            - BRANDED_REPORTS
            - BULK_EDIT
            - CUSTOM_FIELDS
            - CUSTOM_REPORTING
            - CUSTOM_SUBDOMAIN
            - DECIMAL_FORMAT
            - DISABLE_MANUAL_MODE
            - EDIT_MEMBER_PROFILE
            - EXCLUDE_NON_BILLABLE_FROM_ESTIMATE
            - EXPENSES
            - FILE_IMPORT
            - HIDE_PAGES
            - HISTORIC_RATES
            - INVOICING
            - INVOICE_EMAILS
            - LABOR_COST
            - LOCATIONS
            - MANAGER_ROLE
            - MULTI_FACTOR_AUTHENTICATION
            - PROJECT_BUDGET
            - PROJECT_TEMPLATES
            - QUICKBOOKS_INTEGRATION
            - RECURRING_ESTIMATES
            - REQUIRED_FIELDS
            - SCHEDULED_REPORTS
            - SCHEDULING
            - SCREENSHOTS
            - SSO
            - SUMMARY_ESTIMATE
            - TARGETS_AND_REMINDERS
            - TASK_RATES
            - TIME_OFF
            - UNLIMITED_REPORTS
            - USER_CUSTOM_FIELDS
            - WHO_CAN_CHANGE_TIMEENTRY_BILLABILITY
            - BREAKS
            - KIOSK_SESSION_DURATION
            - KIOSK_PIN_REQUIRED
            - WHO_CAN_SEE_ALL_TIME_ENTRIES
            - WHO_CAN_SEE_PROJECT_STATUS
            - WHO_CAN_SEE_PUBLIC_PROJECTS_ENTRIES
            - WHO_CAN_SEE_TEAMS_DASHBOARD
            - WORKSPACE_LOCK_TIMEENTRIES
            - WORKSPACE_TIME_AUDIT
            - WORKSPACE_TIME_ROUNDING
            - KIOSK
            - FORECASTING
            - TIME_TRACKING
            - ATTENDANCE_REPORT
            - WORKSPACE_TRANSFER
            - FAVORITE_ENTRIES
            - SPLIT_TIME_ENTRY
            - CLIENT_CURRENCY
        WHO_CAN_SEE_ALL_TIME_ENTRIES:
          type: string
          enum:
            - ADD_TIME_FOR_OTHERS
            - ADMIN_PANEL
            - ALERTS
            - APPROVAL
            - AUDIT_LOG
            - AUTOMATIC_LOCK
            - BRANDED_REPORTS
            - BULK_EDIT
            - CUSTOM_FIELDS
            - CUSTOM_REPORTING
            - CUSTOM_SUBDOMAIN
            - DECIMAL_FORMAT
            - DISABLE_MANUAL_MODE
            - EDIT_MEMBER_PROFILE
            - EXCLUDE_NON_BILLABLE_FROM_ESTIMATE
            - EXPENSES
            - FILE_IMPORT
            - HIDE_PAGES
            - HISTORIC_RATES
            - INVOICING
            - INVOICE_EMAILS
            - LABOR_COST
            - LOCATIONS
            - MANAGER_ROLE
            - MULTI_FACTOR_AUTHENTICATION
            - PROJECT_BUDGET
            - PROJECT_TEMPLATES
            - QUICKBOOKS_INTEGRATION
            - RECURRING_ESTIMATES
            - REQUIRED_FIELDS
            - SCHEDULED_REPORTS
            - SCHEDULING
            - SCREENSHOTS
            - SSO
            - SUMMARY_ESTIMATE
            - TARGETS_AND_REMINDERS
            - TASK_RATES
            - TIME_OFF
            - UNLIMITED_REPORTS
            - USER_CUSTOM_FIELDS
            - WHO_CAN_CHANGE_TIMEENTRY_BILLABILITY
            - BREAKS
            - KIOSK_SESSION_DURATION
            - KIOSK_PIN_REQUIRED
            - WHO_CAN_SEE_ALL_TIME_ENTRIES
            - WHO_CAN_SEE_PROJECT_STATUS
            - WHO_CAN_SEE_PUBLIC_PROJECTS_ENTRIES
            - WHO_CAN_SEE_TEAMS_DASHBOARD
            - WORKSPACE_LOCK_TIMEENTRIES
            - WORKSPACE_TIME_AUDIT
            - WORKSPACE_TIME_ROUNDING
            - KIOSK
            - FORECASTING
            - TIME_TRACKING
            - ATTENDANCE_REPORT
            - WORKSPACE_TRANSFER
            - FAVORITE_ENTRIES
            - SPLIT_TIME_ENTRY
            - CLIENT_CURRENCY
        WHO_CAN_SEE_PROJECT_STATUS:
          type: string
          enum:
            - ADD_TIME_FOR_OTHERS
            - ADMIN_PANEL
            - ALERTS
            - APPROVAL
            - AUDIT_LOG
            - AUTOMATIC_LOCK
            - BRANDED_REPORTS
            - BULK_EDIT
            - CUSTOM_FIELDS
            - CUSTOM_REPORTING
            - CUSTOM_SUBDOMAIN
            - DECIMAL_FORMAT
            - DISABLE_MANUAL_MODE
            - EDIT_MEMBER_PROFILE
            - EXCLUDE_NON_BILLABLE_FROM_ESTIMATE
            - EXPENSES
            - FILE_IMPORT
            - HIDE_PAGES
            - HISTORIC_RATES
            - INVOICING
            - INVOICE_EMAILS
            - LABOR_COST
            - LOCATIONS
            - MANAGER_ROLE
            - MULTI_FACTOR_AUTHENTICATION
            - PROJECT_BUDGET
            - PROJECT_TEMPLATES
            - QUICKBOOKS_INTEGRATION
            - RECURRING_ESTIMATES
            - REQUIRED_FIELDS
            - SCHEDULED_REPORTS
            - SCHEDULING
            - SCREENSHOTS
            - SSO
            - SUMMARY_ESTIMATE
            - TARGETS_AND_REMINDERS
            - TASK_RATES
            - TIME_OFF
            - UNLIMITED_REPORTS
            - USER_CUSTOM_FIELDS
            - WHO_CAN_CHANGE_TIMEENTRY_BILLABILITY
            - BREAKS
            - KIOSK_SESSION_DURATION
            - KIOSK_PIN_REQUIRED
            - WHO_CAN_SEE_ALL_TIME_ENTRIES
            - WHO_CAN_SEE_PROJECT_STATUS
            - WHO_CAN_SEE_PUBLIC_PROJECTS_ENTRIES
            - WHO_CAN_SEE_TEAMS_DASHBOARD
            - WORKSPACE_LOCK_TIMEENTRIES
            - WORKSPACE_TIME_AUDIT
            - WORKSPACE_TIME_ROUNDING
            - KIOSK
            - FORECASTING
            - TIME_TRACKING
            - ATTENDANCE_REPORT
            - WORKSPACE_TRANSFER
            - FAVORITE_ENTRIES
            - SPLIT_TIME_ENTRY
            - CLIENT_CURRENCY
        WHO_CAN_SEE_PUBLIC_PROJECTS_ENTRIES:
          type: string
          enum:
            - ADD_TIME_FOR_OTHERS
            - ADMIN_PANEL
            - ALERTS
            - APPROVAL
            - AUDIT_LOG
            - AUTOMATIC_LOCK
            - BRANDED_REPORTS
            - BULK_EDIT
            - CUSTOM_FIELDS
            - CUSTOM_REPORTING
            - CUSTOM_SUBDOMAIN
            - DECIMAL_FORMAT
            - DISABLE_MANUAL_MODE
            - EDIT_MEMBER_PROFILE
            - EXCLUDE_NON_BILLABLE_FROM_ESTIMATE
            - EXPENSES
            - FILE_IMPORT
            - HIDE_PAGES
            - HISTORIC_RATES
            - INVOICING
            - INVOICE_EMAILS
            - LABOR_COST
            - LOCATIONS
            - MANAGER_ROLE
            - MULTI_FACTOR_AUTHENTICATION
            - PROJECT_BUDGET
            - PROJECT_TEMPLATES
            - QUICKBOOKS_INTEGRATION
            - RECURRING_ESTIMATES
            - REQUIRED_FIELDS
            - SCHEDULED_REPORTS
            - SCHEDULING
            - SCREENSHOTS
            - SSO
            - SUMMARY_ESTIMATE
            - TARGETS_AND_REMINDERS
            - TASK_RATES
            - TIME_OFF
            - UNLIMITED_REPORTS
            - USER_CUSTOM_FIELDS
            - WHO_CAN_CHANGE_TIMEENTRY_BILLABILITY
            - BREAKS
            - KIOSK_SESSION_DURATION
            - KIOSK_PIN_REQUIRED
            - WHO_CAN_SEE_ALL_TIME_ENTRIES
            - WHO_CAN_SEE_PROJECT_STATUS
            - WHO_CAN_SEE_PUBLIC_PROJECTS_ENTRIES
            - WHO_CAN_SEE_TEAMS_DASHBOARD
            - WORKSPACE_LOCK_TIMEENTRIES
            - WORKSPACE_TIME_AUDIT
            - WORKSPACE_TIME_ROUNDING
            - KIOSK
            - FORECASTING
            - TIME_TRACKING
            - ATTENDANCE_REPORT
            - WORKSPACE_TRANSFER
            - FAVORITE_ENTRIES
            - SPLIT_TIME_ENTRY
            - CLIENT_CURRENCY
        WHO_CAN_SEE_TEAMS_DASHBOARD:
          type: string
          enum:
            - ADD_TIME_FOR_OTHERS
            - ADMIN_PANEL
            - ALERTS
            - APPROVAL
            - AUDIT_LOG
            - AUTOMATIC_LOCK
            - BRANDED_REPORTS
            - BULK_EDIT
            - CUSTOM_FIELDS
            - CUSTOM_REPORTING
            - CUSTOM_SUBDOMAIN
            - DECIMAL_FORMAT
            - DISABLE_MANUAL_MODE
            - EDIT_MEMBER_PROFILE
            - EXCLUDE_NON_BILLABLE_FROM_ESTIMATE
            - EXPENSES
            - FILE_IMPORT
            - HIDE_PAGES
            - HISTORIC_RATES
            - INVOICING
            - INVOICE_EMAILS
            - LABOR_COST
            - LOCATIONS
            - MANAGER_ROLE
            - MULTI_FACTOR_AUTHENTICATION
            - PROJECT_BUDGET
            - PROJECT_TEMPLATES
            - QUICKBOOKS_INTEGRATION
            - RECURRING_ESTIMATES
            - REQUIRED_FIELDS
            - SCHEDULED_REPORTS
            - SCHEDULING
            - SCREENSHOTS
            - SSO
            - SUMMARY_ESTIMATE
            - TARGETS_AND_REMINDERS
            - TASK_RATES
            - TIME_OFF
            - UNLIMITED_REPORTS
            - USER_CUSTOM_FIELDS
            - WHO_CAN_CHANGE_TIMEENTRY_BILLABILITY
            - BREAKS
            - KIOSK_SESSION_DURATION
            - KIOSK_PIN_REQUIRED
            - WHO_CAN_SEE_ALL_TIME_ENTRIES
            - WHO_CAN_SEE_PROJECT_STATUS
            - WHO_CAN_SEE_PUBLIC_PROJECTS_ENTRIES
            - WHO_CAN_SEE_TEAMS_DASHBOARD
            - WORKSPACE_LOCK_TIMEENTRIES
            - WORKSPACE_TIME_AUDIT
            - WORKSPACE_TIME_ROUNDING
            - KIOSK
            - FORECASTING
            - TIME_TRACKING
            - ATTENDANCE_REPORT
            - WORKSPACE_TRANSFER
            - FAVORITE_ENTRIES
            - SPLIT_TIME_ENTRY
            - CLIENT_CURRENCY
        WORKSPACE_LOCK_TIMEENTRIES:
          type: string
          enum:
            - ADD_TIME_FOR_OTHERS
            - ADMIN_PANEL
            - ALERTS
            - APPROVAL
            - AUDIT_LOG
            - AUTOMATIC_LOCK
            - BRANDED_REPORTS
            - BULK_EDIT
            - CUSTOM_FIELDS
            - CUSTOM_REPORTING
            - CUSTOM_SUBDOMAIN
            - DECIMAL_FORMAT
            - DISABLE_MANUAL_MODE
            - EDIT_MEMBER_PROFILE
            - EXCLUDE_NON_BILLABLE_FROM_ESTIMATE
            - EXPENSES
            - FILE_IMPORT
            - HIDE_PAGES
            - HISTORIC_RATES
            - INVOICING
            - INVOICE_EMAILS
            - LABOR_COST
            - LOCATIONS
            - MANAGER_ROLE
            - MULTI_FACTOR_AUTHENTICATION
            - PROJECT_BUDGET
            - PROJECT_TEMPLATES
            - QUICKBOOKS_INTEGRATION
            - RECURRING_ESTIMATES
            - REQUIRED_FIELDS
            - SCHEDULED_REPORTS
            - SCHEDULING
            - SCREENSHOTS
            - SSO
            - SUMMARY_ESTIMATE
            - TARGETS_AND_REMINDERS
            - TASK_RATES
            - TIME_OFF
            - UNLIMITED_REPORTS
            - USER_CUSTOM_FIELDS
            - WHO_CAN_CHANGE_TIMEENTRY_BILLABILITY
            - BREAKS
            - KIOSK_SESSION_DURATION
            - KIOSK_PIN_REQUIRED
            - WHO_CAN_SEE_ALL_TIME_ENTRIES
            - WHO_CAN_SEE_PROJECT_STATUS
            - WHO_CAN_SEE_PUBLIC_PROJECTS_ENTRIES
            - WHO_CAN_SEE_TEAMS_DASHBOARD
            - WORKSPACE_LOCK_TIMEENTRIES
            - WORKSPACE_TIME_AUDIT
            - WORKSPACE_TIME_ROUNDING
            - KIOSK
            - FORECASTING
            - TIME_TRACKING
            - ATTENDANCE_REPORT
            - WORKSPACE_TRANSFER
            - FAVORITE_ENTRIES
            - SPLIT_TIME_ENTRY
            - CLIENT_CURRENCY
        WORKSPACE_TIME_AUDIT:
          type: string
          enum:
            - ADD_TIME_FOR_OTHERS
            - ADMIN_PANEL
            - ALERTS
            - APPROVAL
            - AUDIT_LOG
            - AUTOMATIC_LOCK
            - BRANDED_REPORTS
            - BULK_EDIT
            - CUSTOM_FIELDS
            - CUSTOM_REPORTING
            - CUSTOM_SUBDOMAIN
            - DECIMAL_FORMAT
            - DISABLE_MANUAL_MODE
            - EDIT_MEMBER_PROFILE
            - EXCLUDE_NON_BILLABLE_FROM_ESTIMATE
            - EXPENSES
            - FILE_IMPORT
            - HIDE_PAGES
            - HISTORIC_RATES
            - INVOICING
            - INVOICE_EMAILS
            - LABOR_COST
            - LOCATIONS
            - MANAGER_ROLE
            - MULTI_FACTOR_AUTHENTICATION
            - PROJECT_BUDGET
            - PROJECT_TEMPLATES
            - QUICKBOOKS_INTEGRATION
            - RECURRING_ESTIMATES
            - REQUIRED_FIELDS
            - SCHEDULED_REPORTS
            - SCHEDULING
            - SCREENSHOTS
            - SSO
            - SUMMARY_ESTIMATE
            - TARGETS_AND_REMINDERS
            - TASK_RATES
            - TIME_OFF
            - UNLIMITED_REPORTS
            - USER_CUSTOM_FIELDS
            - WHO_CAN_CHANGE_TIMEENTRY_BILLABILITY
            - BREAKS
            - KIOSK_SESSION_DURATION
            - KIOSK_PIN_REQUIRED
            - WHO_CAN_SEE_ALL_TIME_ENTRIES
            - WHO_CAN_SEE_PROJECT_STATUS
            - WHO_CAN_SEE_PUBLIC_PROJECTS_ENTRIES
            - WHO_CAN_SEE_TEAMS_DASHBOARD
            - WORKSPACE_LOCK_TIMEENTRIES
            - WORKSPACE_TIME_AUDIT
            - WORKSPACE_TIME_ROUNDING
            - KIOSK
            - FORECASTING
            - TIME_TRACKING
            - ATTENDANCE_REPORT
            - WORKSPACE_TRANSFER
            - FAVORITE_ENTRIES
            - SPLIT_TIME_ENTRY
            - CLIENT_CURRENCY
        WORKSPACE_TIME_ROUNDING:
          type: string
          enum:
            - ADD_TIME_FOR_OTHERS
            - ADMIN_PANEL
            - ALERTS
            - APPROVAL
            - AUDIT_LOG
            - AUTOMATIC_LOCK
            - BRANDED_REPORTS
            - BULK_EDIT
            - CUSTOM_FIELDS
            - CUSTOM_REPORTING
            - CUSTOM_SUBDOMAIN
            - DECIMAL_FORMAT
            - DISABLE_MANUAL_MODE
            - EDIT_MEMBER_PROFILE
            - EXCLUDE_NON_BILLABLE_FROM_ESTIMATE
            - EXPENSES
            - FILE_IMPORT
            - HIDE_PAGES
            - HISTORIC_RATES
            - INVOICING
            - INVOICE_EMAILS
            - LABOR_COST
            - LOCATIONS
            - MANAGER_ROLE
            - MULTI_FACTOR_AUTHENTICATION
            - PROJECT_BUDGET
            - PROJECT_TEMPLATES
            - QUICKBOOKS_INTEGRATION
            - RECURRING_ESTIMATES
            - REQUIRED_FIELDS
            - SCHEDULED_REPORTS
            - SCHEDULING
            - SCREENSHOTS
            - SSO
            - SUMMARY_ESTIMATE
            - TARGETS_AND_REMINDERS
            - TASK_RATES
            - TIME_OFF
            - UNLIMITED_REPORTS
            - USER_CUSTOM_FIELDS
            - WHO_CAN_CHANGE_TIMEENTRY_BILLABILITY
            - BREAKS
            - KIOSK_SESSION_DURATION
            - KIOSK_PIN_REQUIRED
            - WHO_CAN_SEE_ALL_TIME_ENTRIES
            - WHO_CAN_SEE_PROJECT_STATUS
            - WHO_CAN_SEE_PUBLIC_PROJECTS_ENTRIES
            - WHO_CAN_SEE_TEAMS_DASHBOARD
            - WORKSPACE_LOCK_TIMEENTRIES
            - WORKSPACE_TIME_AUDIT
            - WORKSPACE_TIME_ROUNDING
            - KIOSK
            - FORECASTING
            - TIME_TRACKING
            - ATTENDANCE_REPORT
            - WORKSPACE_TRANSFER
            - FAVORITE_ENTRIES
            - SPLIT_TIME_ENTRY
            - CLIENT_CURRENCY
        WORKSPACE_TRANSFER:
          type: string
          enum:
            - ADD_TIME_FOR_OTHERS
            - ADMIN_PANEL
            - ALERTS
            - APPROVAL
            - AUDIT_LOG
            - AUTOMATIC_LOCK
            - BRANDED_REPORTS
            - BULK_EDIT
            - CUSTOM_FIELDS
            - CUSTOM_REPORTING
            - CUSTOM_SUBDOMAIN
            - DECIMAL_FORMAT
            - DISABLE_MANUAL_MODE
            - EDIT_MEMBER_PROFILE
            - EXCLUDE_NON_BILLABLE_FROM_ESTIMATE
            - EXPENSES
            - FILE_IMPORT
            - HIDE_PAGES
            - HISTORIC_RATES
            - INVOICING
            - INVOICE_EMAILS
            - LABOR_COST
            - LOCATIONS
            - MANAGER_ROLE
            - MULTI_FACTOR_AUTHENTICATION
            - PROJECT_BUDGET
            - PROJECT_TEMPLATES
            - QUICKBOOKS_INTEGRATION
            - RECURRING_ESTIMATES
            - REQUIRED_FIELDS
            - SCHEDULED_REPORTS
            - SCHEDULING
            - SCREENSHOTS
            - SSO
            - SUMMARY_ESTIMATE
            - TARGETS_AND_REMINDERS
            - TASK_RATES
            - TIME_OFF
            - UNLIMITED_REPORTS
            - USER_CUSTOM_FIELDS
            - WHO_CAN_CHANGE_TIMEENTRY_BILLABILITY
            - BREAKS
            - KIOSK_SESSION_DURATION
            - KIOSK_PIN_REQUIRED
            - WHO_CAN_SEE_ALL_TIME_ENTRIES
            - WHO_CAN_SEE_PROJECT_STATUS
            - WHO_CAN_SEE_PUBLIC_PROJECTS_ENTRIES
            - WHO_CAN_SEE_TEAMS_DASHBOARD
            - WORKSPACE_LOCK_TIMEENTRIES
            - WORKSPACE_TIME_AUDIT
            - WORKSPACE_TIME_ROUNDING
            - KIOSK
            - FORECASTING
            - TIME_TRACKING
            - ATTENDANCE_REPORT
            - WORKSPACE_TRANSFER
            - FAVORITE_ENTRIES
            - SPLIT_TIME_ENTRY
            - CLIENT_CURRENCY
    FeatureSubscriptionType:
      type: object
      description: Represents a feature subscription type enum.
      example: PREMIUM
      oneOf:
        - type: string
          enum:
            - PREMIUM
            - PREMIUM_YEAR
            - SPECIAL
            - SPECIAL_YEAR
            - TRIAL
            - ENTERPRISE
            - ENTERPRISE_YEAR
            - BASIC_2021
            - BASIC_YEAR_2021
            - STANDARD_2021
            - STANDARD_YEAR_2021
            - PRO_2021
            - PRO_YEAR_2021
            - ENTERPRISE_2021
            - ENTERPRISE_YEAR_2021
            - BUNDLE_2024
            - BUNDLE_YEAR_2024
            - SELF_HOSTED
            - FREE
      properties:
        BASIC_2021:
          type: string
          enum:
            - PREMIUM
            - PREMIUM_YEAR
            - SPECIAL
            - SPECIAL_YEAR
            - TRIAL
            - ENTERPRISE
            - ENTERPRISE_YEAR
            - BASIC_2021
            - BASIC_YEAR_2021
            - STANDARD_2021
            - STANDARD_YEAR_2021
            - PRO_2021
            - PRO_YEAR_2021
            - ENTERPRISE_2021
            - ENTERPRISE_YEAR_2021
            - BUNDLE_2024
            - BUNDLE_YEAR_2024
            - SELF_HOSTED
            - FREE
        BASIC_YEAR_2021:
          type: string
          enum:
            - PREMIUM
            - PREMIUM_YEAR
            - SPECIAL
            - SPECIAL_YEAR
            - TRIAL
            - ENTERPRISE
            - ENTERPRISE_YEAR
            - BASIC_2021
            - BASIC_YEAR_2021
            - STANDARD_2021
            - STANDARD_YEAR_2021
            - PRO_2021
            - PRO_YEAR_2021
            - ENTERPRISE_2021
            - ENTERPRISE_YEAR_2021
            - BUNDLE_2024
            - BUNDLE_YEAR_2024
            - SELF_HOSTED
            - FREE
        BUNDLE_2024:
          type: string
          enum:
            - PREMIUM
            - PREMIUM_YEAR
            - SPECIAL
            - SPECIAL_YEAR
            - TRIAL
            - ENTERPRISE
            - ENTERPRISE_YEAR
            - BASIC_2021
            - BASIC_YEAR_2021
            - STANDARD_2021
            - STANDARD_YEAR_2021
            - PRO_2021
            - PRO_YEAR_2021
            - ENTERPRISE_2021
            - ENTERPRISE_YEAR_2021
            - BUNDLE_2024
            - BUNDLE_YEAR_2024
            - SELF_HOSTED
            - FREE
        BUNDLE_YEAR_2024:
          type: string
          enum:
            - PREMIUM
            - PREMIUM_YEAR
            - SPECIAL
            - SPECIAL_YEAR
            - TRIAL
            - ENTERPRISE
            - ENTERPRISE_YEAR
            - BASIC_2021
            - BASIC_YEAR_2021
            - STANDARD_2021
            - STANDARD_YEAR_2021
            - PRO_2021
            - PRO_YEAR_2021
            - ENTERPRISE_2021
            - ENTERPRISE_YEAR_2021
            - BUNDLE_2024
            - BUNDLE_YEAR_2024
            - SELF_HOSTED
            - FREE
        ENTERPRISE:
          type: string
          enum:
            - PREMIUM
            - PREMIUM_YEAR
            - SPECIAL
            - SPECIAL_YEAR
            - TRIAL
            - ENTERPRISE
            - ENTERPRISE_YEAR
            - BASIC_2021
            - BASIC_YEAR_2021
            - STANDARD_2021
            - STANDARD_YEAR_2021
            - PRO_2021
            - PRO_YEAR_2021
            - ENTERPRISE_2021
            - ENTERPRISE_YEAR_2021
            - BUNDLE_2024
            - BUNDLE_YEAR_2024
            - SELF_HOSTED
            - FREE
        ENTERPRISE_2021:
          type: string
          enum:
            - PREMIUM
            - PREMIUM_YEAR
            - SPECIAL
            - SPECIAL_YEAR
            - TRIAL
            - ENTERPRISE
            - ENTERPRISE_YEAR
            - BASIC_2021
            - BASIC_YEAR_2021
            - STANDARD_2021
            - STANDARD_YEAR_2021
            - PRO_2021
            - PRO_YEAR_2021
            - ENTERPRISE_2021
            - ENTERPRISE_YEAR_2021
            - BUNDLE_2024
            - BUNDLE_YEAR_2024
            - SELF_HOSTED
            - FREE
        ENTERPRISE_YEAR:
          type: string
          enum:
            - PREMIUM
            - PREMIUM_YEAR
            - SPECIAL
            - SPECIAL_YEAR
            - TRIAL
            - ENTERPRISE
            - ENTERPRISE_YEAR
            - BASIC_2021
            - BASIC_YEAR_2021
            - STANDARD_2021
            - STANDARD_YEAR_2021
            - PRO_2021
            - PRO_YEAR_2021
            - ENTERPRISE_2021
            - ENTERPRISE_YEAR_2021
            - BUNDLE_2024
            - BUNDLE_YEAR_2024
            - SELF_HOSTED
            - FREE
        ENTERPRISE_YEAR_2021:
          type: string
          enum:
            - PREMIUM
            - PREMIUM_YEAR
            - SPECIAL
            - SPECIAL_YEAR
            - TRIAL
            - ENTERPRISE
            - ENTERPRISE_YEAR
            - BASIC_2021
            - BASIC_YEAR_2021
            - STANDARD_2021
            - STANDARD_YEAR_2021
            - PRO_2021
            - PRO_YEAR_2021
            - ENTERPRISE_2021
            - ENTERPRISE_YEAR_2021
            - BUNDLE_2024
            - BUNDLE_YEAR_2024
            - SELF_HOSTED
            - FREE
        FREE:
          type: string
          enum:
            - PREMIUM
            - PREMIUM_YEAR
            - SPECIAL
            - SPECIAL_YEAR
            - TRIAL
            - ENTERPRISE
            - ENTERPRISE_YEAR
            - BASIC_2021
            - BASIC_YEAR_2021
            - STANDARD_2021
            - STANDARD_YEAR_2021
            - PRO_2021
            - PRO_YEAR_2021
            - ENTERPRISE_2021
            - ENTERPRISE_YEAR_2021
            - BUNDLE_2024
            - BUNDLE_YEAR_2024
            - SELF_HOSTED
            - FREE
        PREMIUM:
          type: string
          enum:
            - PREMIUM
            - PREMIUM_YEAR
            - SPECIAL
            - SPECIAL_YEAR
            - TRIAL
            - ENTERPRISE
            - ENTERPRISE_YEAR
            - BASIC_2021
            - BASIC_YEAR_2021
            - STANDARD_2021
            - STANDARD_YEAR_2021
            - PRO_2021
            - PRO_YEAR_2021
            - ENTERPRISE_2021
            - ENTERPRISE_YEAR_2021
            - BUNDLE_2024
            - BUNDLE_YEAR_2024
            - SELF_HOSTED
            - FREE
        PREMIUM_YEAR:
          type: string
          enum:
            - PREMIUM
            - PREMIUM_YEAR
            - SPECIAL
            - SPECIAL_YEAR
            - TRIAL
            - ENTERPRISE
            - ENTERPRISE_YEAR
            - BASIC_2021
            - BASIC_YEAR_2021
            - STANDARD_2021
            - STANDARD_YEAR_2021
            - PRO_2021
            - PRO_YEAR_2021
            - ENTERPRISE_2021
            - ENTERPRISE_YEAR_2021
            - BUNDLE_2024
            - BUNDLE_YEAR_2024
            - SELF_HOSTED
            - FREE
        PRO_2021:
          type: string
          enum:
            - PREMIUM
            - PREMIUM_YEAR
            - SPECIAL
            - SPECIAL_YEAR
            - TRIAL
            - ENTERPRISE
            - ENTERPRISE_YEAR
            - BASIC_2021
            - BASIC_YEAR_2021
            - STANDARD_2021
            - STANDARD_YEAR_2021
            - PRO_2021
            - PRO_YEAR_2021
            - ENTERPRISE_2021
            - ENTERPRISE_YEAR_2021
            - BUNDLE_2024
            - BUNDLE_YEAR_2024
            - SELF_HOSTED
            - FREE
        PRO_YEAR_2021:
          type: string
          enum:
            - PREMIUM
            - PREMIUM_YEAR
            - SPECIAL
            - SPECIAL_YEAR
            - TRIAL
            - ENTERPRISE
            - ENTERPRISE_YEAR
            - BASIC_2021
            - BASIC_YEAR_2021
            - STANDARD_2021
            - STANDARD_YEAR_2021
            - PRO_2021
            - PRO_YEAR_2021
            - ENTERPRISE_2021
            - ENTERPRISE_YEAR_2021
            - BUNDLE_2024
            - BUNDLE_YEAR_2024
            - SELF_HOSTED
            - FREE
        SELF_HOSTED:
          type: string
          enum:
            - PREMIUM
            - PREMIUM_YEAR
            - SPECIAL
            - SPECIAL_YEAR
            - TRIAL
            - ENTERPRISE
            - ENTERPRISE_YEAR
            - BASIC_2021
            - BASIC_YEAR_2021
            - STANDARD_2021
            - STANDARD_YEAR_2021
            - PRO_2021
            - PRO_YEAR_2021
            - ENTERPRISE_2021
            - ENTERPRISE_YEAR_2021
            - BUNDLE_2024
            - BUNDLE_YEAR_2024
            - SELF_HOSTED
            - FREE
        SPECIAL:
          type: string
          enum:
            - PREMIUM
            - PREMIUM_YEAR
            - SPECIAL
            - SPECIAL_YEAR
            - TRIAL
            - ENTERPRISE
            - ENTERPRISE_YEAR
            - BASIC_2021
            - BASIC_YEAR_2021
            - STANDARD_2021
            - STANDARD_YEAR_2021
            - PRO_2021
            - PRO_YEAR_2021
            - ENTERPRISE_2021
            - ENTERPRISE_YEAR_2021
            - BUNDLE_2024
            - BUNDLE_YEAR_2024
            - SELF_HOSTED
            - FREE
        SPECIAL_YEAR:
          type: string
          enum:
            - PREMIUM
            - PREMIUM_YEAR
            - SPECIAL
            - SPECIAL_YEAR
            - TRIAL
            - ENTERPRISE
            - ENTERPRISE_YEAR
            - BASIC_2021
            - BASIC_YEAR_2021
            - STANDARD_2021
            - STANDARD_YEAR_2021
            - PRO_2021
            - PRO_YEAR_2021
            - ENTERPRISE_2021
            - ENTERPRISE_YEAR_2021
            - BUNDLE_2024
            - BUNDLE_YEAR_2024
            - SELF_HOSTED
            - FREE
        STANDARD_2021:
          type: string
          enum:
            - PREMIUM
            - PREMIUM_YEAR
            - SPECIAL
            - SPECIAL_YEAR
            - TRIAL
            - ENTERPRISE
            - ENTERPRISE_YEAR
            - BASIC_2021
            - BASIC_YEAR_2021
            - STANDARD_2021
            - STANDARD_YEAR_2021
            - PRO_2021
            - PRO_YEAR_2021
            - ENTERPRISE_2021
            - ENTERPRISE_YEAR_2021
            - BUNDLE_2024
            - BUNDLE_YEAR_2024
            - SELF_HOSTED
            - FREE
        STANDARD_YEAR_2021:
          type: string
          enum:
            - PREMIUM
            - PREMIUM_YEAR
            - SPECIAL
            - SPECIAL_YEAR
            - TRIAL
            - ENTERPRISE
            - ENTERPRISE_YEAR
            - BASIC_2021
            - BASIC_YEAR_2021
            - STANDARD_2021
            - STANDARD_YEAR_2021
            - PRO_2021
            - PRO_YEAR_2021
            - ENTERPRISE_2021
            - ENTERPRISE_YEAR_2021
            - BUNDLE_2024
            - BUNDLE_YEAR_2024
            - SELF_HOSTED
            - FREE
        TRIAL:
          type: string
          enum:
            - PREMIUM
            - PREMIUM_YEAR
            - SPECIAL
            - SPECIAL_YEAR
            - TRIAL
            - ENTERPRISE
            - ENTERPRISE_YEAR
            - BASIC_2021
            - BASIC_YEAR_2021
            - STANDARD_2021
            - STANDARD_YEAR_2021
            - PRO_2021
            - PRO_YEAR_2021
            - ENTERPRISE_2021
            - ENTERPRISE_YEAR_2021
            - BUNDLE_2024
            - BUNDLE_YEAR_2024
            - SELF_HOSTED
            - FREE
        featurePermissions:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
              - ADD_TIME_FOR_OTHERS
              - ADMIN_PANEL
              - ALERTS
              - APPROVAL
              - AUDIT_LOG
              - AUTOMATIC_LOCK
              - BRANDED_REPORTS
              - BULK_EDIT
              - CUSTOM_FIELDS
              - CUSTOM_REPORTING
              - CUSTOM_SUBDOMAIN
              - DECIMAL_FORMAT
              - DISABLE_MANUAL_MODE
              - EDIT_MEMBER_PROFILE
              - EXCLUDE_NON_BILLABLE_FROM_ESTIMATE
              - EXPENSES
              - FILE_IMPORT
              - HIDE_PAGES
              - HISTORIC_RATES
              - INVOICING
              - INVOICE_EMAILS
              - LABOR_COST
              - LOCATIONS
              - MANAGER_ROLE
              - MULTI_FACTOR_AUTHENTICATION
              - PROJECT_BUDGET
              - PROJECT_TEMPLATES
              - QUICKBOOKS_INTEGRATION
              - RECURRING_ESTIMATES
              - REQUIRED_FIELDS
              - SCHEDULED_REPORTS
              - SCHEDULING
              - SCREENSHOTS
              - SSO
              - SUMMARY_ESTIMATE
              - TARGETS_AND_REMINDERS
              - TASK_RATES
              - TIME_OFF
              - UNLIMITED_REPORTS
              - USER_CUSTOM_FIELDS
              - WHO_CAN_CHANGE_TIMEENTRY_BILLABILITY
              - BREAKS
              - KIOSK_SESSION_DURATION
              - KIOSK_PIN_REQUIRED
              - WHO_CAN_SEE_ALL_TIME_ENTRIES
              - WHO_CAN_SEE_PROJECT_STATUS
              - WHO_CAN_SEE_PUBLIC_PROJECTS_ENTRIES
              - WHO_CAN_SEE_TEAMS_DASHBOARD
              - WORKSPACE_LOCK_TIMEENTRIES
              - WORKSPACE_TIME_AUDIT
              - WORKSPACE_TIME_ROUNDING
              - KIOSK
              - FORECASTING
              - TIME_TRACKING
              - ATTENDANCE_REPORT
              - WORKSPACE_TRANSFER
              - FAVORITE_ENTRIES
              - SPLIT_TIME_ENTRY
              - CLIENT_CURRENCY
        legacy:
          type: boolean
        regionalAllowed:
          type: boolean
        weight:
          type: integer
          format: int32
    FeatureSubscriptionsDto:
      type: object
      properties:
        endDate:
          type: string
          format: date-time
        status:
          type: string
          enum:
            - ACTIVE
            - TERMINATED
            - PAST_DUE
        type:
          type: string
          enum:
            - PREMIUM
            - PREMIUM_YEAR
            - SPECIAL
            - SPECIAL_YEAR
            - TRIAL
            - ENTERPRISE
            - ENTERPRISE_YEAR
            - BASIC_2021
            - BASIC_YEAR_2021
            - STANDARD_2021
            - STANDARD_YEAR_2021
            - PRO_2021
            - PRO_YEAR_2021
            - ENTERPRISE_2021
            - ENTERPRISE_YEAR_2021
            - BUNDLE_2024
            - BUNDLE_YEAR_2024
            - SELF_HOSTED
            - FREE
    FetchCustomAttributesRequest:
      required:
        - customAttributes
        - namespace
      type: object
      properties:
        customAttributes:
          type: object
          additionalProperties:
            type: string
        entityType:
          type: string
        namespace:
          type: string
    FileImportRequest:
      type: object
      properties:
        importDataId:
          type: string
    FilterActivitiesRequest:
      type: object
      properties:
        activityTypes:
          uniqueItems: true
          type: array
          items:
            type: string
        end:
          type: string
          format: date-time
        start:
          type: string
          format: date-time
        userEmails:
          uniqueItems: true
          type: array
          items:
            type: string
    FinishBreakRequest:
      required:
        - clockIn
      type: object
      properties:
        clockIn:
          $ref: '#/components/schemas/KioskEntryRequest'
        clockInRequest:
          $ref: '#/components/schemas/KioskEntryRequest'
        finishBreak:
          $ref: '#/components/schemas/KioskEntryRequest'
        finishBreakRequest:
          $ref: '#/components/schemas/KioskEntryRequest'
    GetApprovalTotalsRequest:
      type: object
      properties:
        end:
          type: string
        start:
          type: string
    GetApprovalsRequest:
      type: object
      properties:
        group-by:
          type: string
          writeOnly: true
        groupBy:
          type: string
        limit:
          type: integer
          format: int32
        offset:
          minimum: 0
          type: integer
          format: int32
        page:
          type: integer
          format: int32
          writeOnly: true
        page-size:
          type: integer
          format: int32
          writeOnly: true
        pageSize:
          type: integer
          format: int32
        states:
          type: array
          items:
            type: string
        userFilter:
          $ref: '#/components/schemas/ContainsUsersFilterRequest'
        userGroupFilter:
          $ref: '#/components/schemas/ContainsUserGroupFilterRequest'
    GetCountRequest:
      type: object
      properties:
        states:
          type: array
          items:
            type: string
        userFilter:
          $ref: '#/components/schemas/ContainsUsersFilterRequest'
        userGroupFilter:
          $ref: '#/components/schemas/ContainsUserGroupFilterRequest'
    GetDraftCountRequest:
      type: object
      properties:
        end:
          type: string
          format: date-time
        search:
          type: string
        start:
          type: string
          format: date-time
        userFilter:
          $ref: '#/components/schemas/ContainsUsersFilterRequest'
        userGroupFilter:
          $ref: '#/components/schemas/ContainsUserGroupFilterRequest'
        viewType:
          type: string
          enum:
            - PROJECTS
            - TEAM
            - ALL
    GetMainReportRequest:
      type: object
      properties:
        access:
          type: string
          enum:
            - ME
            - TEAM
        endDate:
          type: string
        startDate:
          type: string
        type:
          type: string
          enum:
            - PROJECT
            - BILLABILITY
        zoomLevel:
          type: string
          enum:
            - WEEK
            - MONTH
            - YEAR
    GetProjectsAuthorizationsForUserRequest:
      required:
        - projectIds
      type: object
      properties:
        projectIds:
          type: array
          items:
            type: string
    GetTimeOffRequestsRequest:
      type: object
      properties:
        end:
          type: string
          format: date-time
        limit:
          minimum: 0
          type: integer
          format: int32
        offset:
          minimum: 0
          type: integer
          format: int32
        page:
          minimum: 0
          type: integer
          format: int32
        pageSize:
          minimum: 0
          type: integer
          format: int32
        start:
          type: string
          format: date-time
        status:
          uniqueItems: true
          type: array
          writeOnly: true
          items:
            type: string
        statuses:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
              - PENDING
              - APPROVED
              - REJECTED
              - ALL
        userGroups:
          $ref: '#/components/schemas/ContainsFilterRequest'
        users:
          $ref: '#/components/schemas/ContainsFilterRequest'
    GetTimeOffRequestsV1Request:
      type: object
      properties:
        end:
          type: string
          description: Return time off requests created before the specified time in requester's time zone. Provide end in format YYYY-MM-DDTHH:MM:SS.ssssssZ
          format: date-time
          example: "2022-08-26T23:55:06.281873Z"
        page:
          maximum: 1000
          type: integer
          description: Page number.
          format: int32
          example: 1
          default: 1
        pageSize:
          maximum: 200
          type: integer
          description: Page size.
          format: int32
          example: 50
          default: 50
        start:
          type: string
          description: Return time off requests created after the specified time in requester's time zone. Provide start in format YYYY-MM-DDTHH:MM:SS.ssssssZ
          format: date-time
          example: "2022-08-26T08:00:06.281873Z"
        statuses:
          type: string
          description: Filters time off requests by status.
          example: '["APPROVED","PENDING"]'
          enum:
            - PENDING
            - APPROVED
            - REJECTED
            - ALL
        userGroups:
          uniqueItems: true
          type: array
          description: Provide the user group ids of time off requests.
          example:
            - 5b715612b079875110791342
            - 5b715612b079875110791324
            - 5b715612b079875110793142
          items:
            type: string
            description: Provide the user group ids of time off requests.
            example: '["5b715612b079875110791342","5b715612b079875110791324","5b715612b079875110793142"]'
        users:
          uniqueItems: true
          type: array
          description: Provide the user ids of time off requests. If empty, will return time off requests of all users (with a maximum of 5000 users).
          example:
            - 5b715612b079875110791432
            - b715612b079875110791234
          items:
            type: string
            description: Provide the user ids of time off requests. If empty, will return time off requests of all users (with a maximum of 5000 users).
            example: '["5b715612b079875110791432","b715612b079875110791234"]'
    GetTimelineRequest:
      type: object
      properties:
        end:
          type: string
          format: date-time
        forceFilter:
          type: boolean
        requestStatuses:
          uniqueItems: true
          type: array
          items:
            type: string
        start:
          type: string
          format: date-time
        userGroups:
          $ref: '#/components/schemas/ContainsFilterRequest'
        users:
          $ref: '#/components/schemas/ContainsFilterRequest'
    GetUnsubmittedEntriesDurationRequest:
      type: object
      properties:
        end:
          type: string
        showUsers:
          type: string
          enum:
            - TRACKED
            - UNTRACKED
            - ALL
        start:
          type: string
        userFilter:
          $ref: '#/components/schemas/ContainsUsersFilterRequest'
        userGroupFilter:
          $ref: '#/components/schemas/ContainsUserGroupFilterRequest'
    GetUserGroupByIdsRequest:
      type: object
      properties:
        excludeIds:
          uniqueItems: true
          type: array
          items:
            type: string
        userGroupIds:
          uniqueItems: true
          type: array
          items:
            type: string
    GetUserTotalsRequest:
      type: object
      properties:
        end:
          type: string
          format: date-time
        page:
          type: integer
          format: int32
        page-size:
          type: integer
          format: int32
          writeOnly: true
        pageSize:
          type: integer
          format: int32
        search:
          type: string
        start:
          type: string
          format: date-time
        statusFilter:
          type: string
          enum:
            - PUBLISHED
            - UNPUBLISHED
            - ALL
        userFilter:
          $ref: '#/components/schemas/ContainsUsersFilterRequest'
        userGroupFilter:
          $ref: '#/components/schemas/ContainsUserGroupFilterRequest'
    GetUserTotalsRequestV1:
      required:
        - end
        - start
      type: object
      properties:
        end:
          type: string
          description: Represents end date in yyyy-MM-ddThh:mm:ssZ format.
          format: date-time
          example: "2021-01-01T00:00:00Z"
        page:
          type: integer
          description: Page number.
          format: int32
          example: 1
        pageSize:
          maximum: 200
          type: integer
          description: Page size.
          format: int32
          example: 50
        search:
          type: string
          description: Represents keyword for searching users by name or email.
          example: keyword
        start:
          type: string
          description: Represents start date in yyyy-MM-ddThh:mm:ssZ format.
          format: date-time
          example: "2020-01-01T00:00:00Z"
        statusFilter:
          type: string
          description: Filters assignments by status.
          example: PUBLISHED
          enum:
            - PUBLISHED
            - UNPUBLISHED
            - ALL
        userFilter:
          $ref: '#/components/schemas/ContainsUsersFilterRequestV1'
        userGroupFilter:
          $ref: '#/components/schemas/ContainsUserGroupFilterRequestV1'
    GetUsersByIdsRequest:
      type: object
      properties:
        userIds:
          uniqueItems: true
          type: array
          items:
            type: string
    GetUsersRequestV1:
      type: object
      properties:
        accountStatuses:
          uniqueItems: true
          type: array
          description: If provided, you'll get a filtered list of users with the corresponding account status filter. If not, this will only filter ACTIVE, PENDING_EMAIL_VERIFICATION, and NOT_REGISTERED Users.
          example:
            - LIMITED
            - ACTIVE
          items:
            type: string
            description: If provided, you'll get a filtered list of users with the corresponding account status filter. If not, this will only filter ACTIVE, PENDING_EMAIL_VERIFICATION, and NOT_REGISTERED Users.
            example: '["LIMITED","ACTIVE"]'
        email:
          type: string
          description: If provided, you'll get a filtered list of users that contain the provided string in their email address.
          example: mail@example.com
        includeRoles:
          type: boolean
          description: If you pass along includeRoles=true, you'll get each user's detailed manager role (including projects and members for whom they're managers)
        memberships:
          type: string
          description: If provided, you'll get all users along with workspaces, groups, or projects they have access to.
          example: NONE
          enum:
            - ALL
            - NONE
            - WORKSPACE
            - PROJECT
            - USERGROUP
          default: NONE
        name:
          type: string
          description: If provided, you'll get a filtered list of users that contain the provided string in their name.
          example: John
        page:
          type: integer
          description: Page number.
          format: int32
          example: 1
        pageSize:
          type: integer
          description: Page size.
          format: int32
          example: 50
        projectId:
          type: string
          description: If provided, you'll get a list of users that have access to the project.
          example: 21a687e29ae1f428e7ebe606
        roles:
          uniqueItems: true
          type: array
          description: If provided, you'll get a filtered list of users that have any of the specified roles. Owners are counted as admins when filtering.
          example:
            - WORKSPACE_ADMIN
            - OWNER
          items:
            type: string
            description: If provided, you'll get a filtered list of users that have any of the specified roles. Owners are counted as admins when filtering.
            example: '["WORKSPACE_ADMIN","OWNER"]'
            enum:
              - WORKSPACE_ADMIN
              - OWNER
              - TEAM_MANAGER
              - PROJECT_MANAGER
        sortColumn:
          type: string
          description: Sorting criteria
          example: ID
          enum:
            - ID
            - EMAIL
            - NAME
            - NAME_LOWERCASE
            - ACCESS
            - HOURLYRATE
            - COSTRATE
        sortOrder:
          type: string
          description: Sorting mode
          example: ASCENDING
          enum:
            - ASCENDING
            - DESCENDING
        status:
          type: string
          description: If provided, you'll get a filtered list of users with the corresponding status.
          example: ACTIVE
          enum:
            - PENDING
            - ACTIVE
            - DECLINED
            - INACTIVE
            - ALL
        userGroups:
          uniqueItems: true
          type: array
          description: If provided, you'll get a list of users that belong to the specified user group IDs.
          example:
            - 5a0ab5acb07987125438b60f
            - 72wab5acb07987125438b564
          items:
            type: string
            description: If provided, you'll get a list of users that belong to the specified user group IDs.
            example: '["5a0ab5acb07987125438b60f","72wab5acb07987125438b564"]'
    GetWorkspacesAuthorizationsForUserRequest:
      type: object
      properties:
        workspaceIds:
          maxItems: 250
          minItems: 1
          type: array
          items:
            type: string
    GoogleAnalyticsEventUserProperties:
      required:
        - clientId
      type: object
      properties:
        clientId:
          type: string
        client_id:
          type: string
          writeOnly: true
        userId:
          type: string
        user_id:
          type: string
          writeOnly: true
        workspaceId:
          type: string
        workspace_id:
          type: string
          writeOnly: true
    GroupsAndCountDto:
      type: object
      properties:
        count:
          type: integer
          format: int64
        groups:
          type: array
          items:
            $ref: '#/components/schemas/UserGroupDto'
    HolidayDto:
      type: object
      properties:
        automaticTimeEntryCreation:
          $ref: '#/components/schemas/AutomaticTimeEntryCreationDto'
        color:
          type: string
          description: 'Provide color in format ^#(?:[0-9a-fA-F]{6}){1}$. Explanation: A valid color code should start with ''#'' and consist of six hexadecimal characters, representing a color in hexadecimal format. Color value is in standard RGB hexadecimal format.'
          example: '#8BC34A'
        datePeriod:
          $ref: '#/components/schemas/DatePeriod'
        everyoneIncludingNew:
          type: boolean
          description: Indicates whether the holiday is shown to new users.
          example: false
        id:
          type: string
          description: Represents holiday identifier across the system.
          example: 5b715612b079875110791111
        name:
          type: string
          description: Represents the name of the holiday.
          example: New Year's Day
        occursAnnually:
          type: boolean
          description: Indicates whether the holiday occurs annually.
          example: true
        userGroupIds:
          uniqueItems: true
          type: array
          description: Indicates which user groups are included.
          example:
            - 5b715612b079875110791342
            - 5b715612b079875110791324
            - 5b715612b079875110793142
          items:
            type: string
            description: Indicates which user groups are included.
            example: '["5b715612b079875110791342","5b715612b079875110791324","5b715612b079875110793142"]'
        userIds:
          uniqueItems: true
          type: array
          description: Indicates which users are included.
          example:
            - 5b715612b079875110791432
            - 5b715612b079875110791234
          items:
            type: string
            description: Indicates which users are included.
            example: '["5b715612b079875110791432","5b715612b079875110791234"]'
        workspaceId:
          type: string
          description: Represents workspace identifier across the system.
          example: 5b715612b079875110792222
    HolidayDtoV1:
      type: object
      properties:
        automaticTimeEntryCreation:
          type: boolean
          description: Indicates that time entries will be automatically created for this holiday.
          example: false
        datePeriod:
          $ref: '#/components/schemas/DatePeriod'
        everyoneIncludingNew:
          type: boolean
          description: Indicates whether the holiday is shown to new users.
          example: false
        id:
          type: string
          description: Represents holiday identifier across the system.
          example: 5b715612b079875110791111
        name:
          type: string
          description: Represents the name of the holiday.
          example: New Year's Day
        occursAnnually:
          type: boolean
          description: Indicates whether the holiday occurs annually.
          example: true
        projectId:
          type: string
          description: Represents projectId for automatic time entry creation.
          example: 65b36d3c525e243c48f9150f
        taskId:
          type: string
          description: Represents taskId for automatic time entry creation.
          example: 65b36d46fa3df8607e42d21a
        userGroupIds:
          uniqueItems: true
          type: array
          description: Indicates which user groups are included.
          example:
            - 5b715612b079875110791342
            - 5b715612b079875110791324
            - 5b715612b079875110793142
          items:
            type: string
            description: Indicates which user groups are included.
            example: '["5b715612b079875110791342","5b715612b079875110791324","5b715612b079875110793142"]'
        userIds:
          uniqueItems: true
          type: array
          description: Indicates which users are included.
          example:
            - 5b715612b079875110791432
            - 5b715612b079875110791234
          items:
            type: string
            description: Indicates which users are included.
            example: '["5b715612b079875110791432","5b715612b079875110791234"]'
        workspaceId:
          type: string
          description: Represents workspace identifier across the system.
          example: 5b715612b079875110792222
    HolidayProjection:
      type: object
      properties:
        color:
          type: string
        name:
          type: string
    HolidayRequest:
      required:
        - datePeriod
        - name
      type: object
      properties:
        automaticTimeEntryCreation:
          $ref: '#/components/schemas/AutomaticTimeEntryCreationRequest'
        automaticTimeEntryCreationEnabled:
          type: boolean
        color:
          pattern: ^#(?:[0-9a-fA-F]{6}){1}$
          type: string
        datePeriod:
          $ref: '#/components/schemas/DatePeriodRequest'
        datePeriodRequest:
          $ref: '#/components/schemas/DatePeriodRequest'
        everyoneIncludingNew:
          type: boolean
        name:
          maxLength: 100
          minLength: 2
          type: string
        occursAnnually:
          type: boolean
        projectId:
          type: string
        taskId:
          type: string
        userGroups:
          $ref: '#/components/schemas/ContainsUserGroupFilterRequest'
        users:
          $ref: '#/components/schemas/ContainsUsersFilterRequestForHoliday'
    HourlyRateDtoV1:
      type: object
      properties:
        amount:
          type: integer
          description: Represents an amount as integer.
          format: int32
          example: 10500
        currency:
          type: string
          description: Represents a currency.
          example: USD
      description: Represents an hourly rate object.
    HourlyRateRequest:
      required:
        - amount
      type: object
      properties:
        amount:
          minimum: 0
          type: integer
          description: Represents a cost rate amount as integer.
          format: int32
          example: 20000
        since:
          type: string
          description: Represents a datetime in yyyy-MM-ddThh:mm:ssZ format.
          example: "2020-01-01T00:00:00Z"
    HourlyRateRequestV1:
      required:
        - amount
      type: object
      properties:
        amount:
          minimum: 0
          type: integer
          description: Represents an hourly rate amount as integer.
          format: int32
          example: 20000
        since:
          type: string
          description: Represents a date and time in yyyy-MM-ddThh:mm:ssZ format.
          example: "2020-01-01T00:00:00Z"
    IdNamePairDto:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    ImportTimeEntriesAndExpensesRequest:
      type: object
      properties:
        expenseDescriptionConfig:
          type: array
          writeOnly: true
          items:
            type: string
        expenseDescriptionConfigs:
          type: array
          items:
            type: string
        expensesGroupBy:
          type: string
        expensesGroupType:
          type: string
        fieldsForDetailed:
          type: array
          items:
            type: string
        from:
          type: string
        groupEntries:
          type: string
        includeExpenses:
          type: boolean
        primaryGroupBy:
          type: string
        projectsFilter:
          $ref: '#/components/schemas/ContainsProjectsFilterRequest'
        roundEntries:
          type: boolean
          writeOnly: true
        roundEntryDuration:
          type: boolean
        secondaryGroupBy:
          type: string
        to:
          type: string
    InitialPriceRequest:
      required:
        - quantity
        - type
      type: object
      properties:
        address1:
          type: string
        city:
          type: string
        country:
          type: string
        customerType:
          type: string
        limitedQuantity:
          minimum: 0
          type: integer
          format: int32
        quantity:
          minimum: 0
          type: integer
          format: int32
        source:
          type: string
        state:
          type: string
        taxIds:
          type: object
          additionalProperties:
            type: string
        type:
          type: string
        zip:
          type: string
    IntegrationPublicKeyDto:
      type: object
      properties:
        publicKey:
          type: string
    IntegrationTokenDto:
      type: object
      properties:
        integrationToken:
          type: string
    InvalidateTokenRequest:
      required:
        - refreshToken
        - token
      type: object
      properties:
        refreshToken:
          type: string
        token:
          type: string
    InvisibleReCaptchaRequest:
      type: object
      properties:
        captchaValue:
          $ref: '#/components/schemas/CaptchaResponseDto'
    InvitationDto:
      type: object
      properties:
        creation:
          type: string
          format: date-time
        invitationCode:
          type: string
        invitedBy:
          type: string
        lang:
          type: string
        userId:
          type: string
        workspaceId:
          type: string
        workspaceName:
          type: string
    InvitedUserDto:
      type: object
      properties:
        email:
          type: string
        id:
          type: string
        invitation:
          $ref: '#/components/schemas/InvitationDto'
        memberships:
          type: array
          items:
            $ref: '#/components/schemas/MembershipDto'
    InvoiceDefaultSettingsDto:
      type: object
      properties:
        companyId:
          type: string
          description: Represents company identifier across the system.
          example: 34a687e29ae1f428e7ebe101
        defaultImportExpenseItemTypeId:
          type: string
          description: Represents item type identifier across the system.
          example: 88a687e29ae1f428e7ebe303
        defaultImportTimeItemTypeId:
          type: string
          description: Represents item type identifier across the system.
          example: 18a687e29ae1f428e7ebe303
        dueDays:
          type: integer
          description: Represents an invoice number of due days.
          format: int32
          example: 2
        itemType:
          type: string
          writeOnly: true
        itemTypeId:
          type: string
          description: Represents item type identifier across the system.
          example: 78a687e29ae1f428e7ebe303
        notes:
          type: string
          description: Represents an invoice note.
          example: This is a sample note for this invoice.
        subject:
          type: string
          description: Represents an invoice subject.
          example: January salary
        tax:
          type: integer
          format: int64
          deprecated: true
        tax2:
          type: integer
          format: int64
          deprecated: true
        tax2Percent:
          type: number
          description: Represents a tax amount in percentage.
          format: double
          example: 1
        taxPercent:
          type: number
          description: Represents a tax amount in percentage.
          format: double
          example: 5
        taxType:
          type: string
          description: Represents a tax type.
          example: COMPOUND
          enum:
            - COMPOUND
            - SIMPLE
            - NONE
    InvoiceDefaultSettingsRequest:
      required:
        - notes
        - subject
      type: object
      properties:
        companyId:
          type: string
        dueDays:
          type: integer
          format: int32
        itemTypeId:
          type: string
        notes:
          type: string
        subject:
          type: string
        tax2Percent:
          type: number
          format: double
        taxPercent:
          type: number
          format: double
        taxType:
          type: string
          enum:
            - COMPOUND
            - SIMPLE
            - NONE
    InvoiceDefaultSettingsRequestV1:
      required:
        - notes
        - subject
      type: object
      properties:
        companyId:
          type: string
          description: Represents company identifier across the system.
          example: 34a687e29ae1f428e7ebe101
        dueDays:
          type: integer
          description: Represents an invoice number of due days.
          format: int32
          example: 2
        itemTypeId:
          type: string
          description: Represents item type identifier across the system.
          example: 78a687e29ae1f428e7ebe303
        notes:
          type: string
          description: Represents an invoice note.
          example: This is a sample note for this invoice.
        subject:
          type: string
          description: Represents an invoice subject.
          example: January salary
        tax2Percent:
          type: number
          description: Represents a tax amount in percentage.
          format: double
          example: 5
        taxPercent:
          type: number
          description: Represents a tax amount in percentage.
          format: double
          example: 5
        taxType:
          type: string
          description: Represents a tax type.
          example: COMPOUND
          enum:
            - COMPOUND
            - SIMPLE
            - NONE
      description: Represents an invoice default settings object.
    InvoiceDtoV1:
      type: object
      properties:
        amount:
          type: integer
          description: Represents an invoice amount as long.
          format: int64
          example: 100
        balance:
          type: integer
          description: Represents an invoice balance amount as long.
          format: int64
          example: 50
        clientId:
          type: string
          description: Represents client identifier across the system.
          example: 98h687e29ae1f428e7ebe707
        clientName:
          type: string
          description: Represents client name for an invoice.
          example: Client X
        currency:
          type: string
          description: Represents the currency used by the invoice.
          example: USD
        dueDate:
          type: string
          description: Represents an invoice due date in yyyy-MM-ddThh:mm:ssZ format.
          format: date-time
          example: "2020-06-01T08:00:00Z"
        id:
          type: string
          description: Represents invoice identifier across the system.
          example: 78a687e29ae1f428e7ebe303
        issuedDate:
          type: string
          description: Represents an invoice issued date in yyyy-MM-ddThh:mm:ssZ format.
          format: date-time
          example: "2020-01-01T08:00:00Z"
        number:
          type: string
          description: Represents an invoice number.
          example: "202306121129"
        paid:
          type: integer
          description: Represents an invoice paid amount as long.
          format: int64
          example: 50
        status:
          type: string
          description: Represents the status of an invoice.
          example: PAID
          enum:
            - UNSENT
            - SENT
            - PAID
            - PARTIALLY_PAID
            - VOID
            - OVERDUE
      description: Represents a list of invoices.
    InvoiceEmailDataDto:
      required:
        - body
        - fromEmail
        - subject
        - toEmail
      type: object
      properties:
        body:
          type: string
        fromEmail:
          type: string
        subject:
          type: string
        toEmail:
          type: string
    InvoiceEmailDataRequest:
      required:
        - body
        - subject
      type: object
      properties:
        body:
          type: string
        subject:
          type: string
        toEmail:
          type: string
    InvoiceEmailLinkDto:
      type: object
      properties:
        blockExpiresAt:
          type: string
          format: date-time
        linkExpiresAt:
          type: string
          format: date-time
    InvoiceEmailLinkPinRequest:
      type: object
      properties:
        enteredPin:
          type: string
    InvoiceEmailLinkPinValidationDto:
      type: object
      properties:
        blockExpiresAt:
          type: string
          format: date-time
        validPin:
          type: boolean
    InvoiceEmailTemplateDto:
      type: object
      properties:
        _id:
          type: string
          writeOnly: true
        emailContent:
          $ref: '#/components/schemas/EmailContentDto'
        identity:
          type: string
        invoiceEmailTemplateType:
          type: string
          writeOnly: true
          enum:
            - INVOICE
            - REMINDER
        invoiceEmailType:
          type: string
          enum:
            - INVOICE
            - REMINDER
        workspaceId:
          type: string
    InvoiceExportFields:
      type: object
      properties:
        RTL:
          type: boolean
          writeOnly: true
        itemType:
          type: boolean
        quantity:
          type: boolean
        rtl:
          type: boolean
        unitPrice:
          type: boolean
    InvoiceExportFieldsRequest:
      type: object
      properties:
        itemType:
          type: boolean
          description: Indicates whether to export item type.
        quantity:
          type: boolean
          description: Indicates whether to export quantity.
        rtl:
          type: boolean
          description: Indicates whether to export RTL.
        unitPrice:
          type: boolean
          description: Indicates whether to export unit price.
    InvoiceFilterNumericData:
      type: object
      properties:
        exactValue:
          type: integer
          format: int64
        greaterThanValue:
          type: integer
          format: int64
        lessThanValue:
          type: integer
          format: int64
    InvoiceFilterRequest:
      required:
        - page
        - pageSize
      type: object
      properties:
        amountFilterData:
          $ref: '#/components/schemas/InvoiceFilterNumericData'
        balanceFilterData:
          $ref: '#/components/schemas/InvoiceFilterNumericData'
        clients:
          $ref: '#/components/schemas/ContainsClientsFilterRequest'
        companies:
          $ref: '#/components/schemas/ContainsCompaniesFilterRequest'
        containsClientsFilterRequest:
          $ref: '#/components/schemas/ContainsClientsFilterRequest'
        containsCompaniesFilterRequest:
          $ref: '#/components/schemas/ContainsCompaniesFilterRequest'
        exact-amount:
          type: integer
          format: int64
          writeOnly: true
        exact-balance:
          type: integer
          format: int64
          writeOnly: true
        greater-than-amount:
          type: integer
          format: int64
          writeOnly: true
        greater-than-balance:
          type: integer
          format: int64
          writeOnly: true
        invoice-number:
          type: string
          writeOnly: true
        invoiceNumber:
          type: string
        issue-date:
          $ref: '#/components/schemas/TimeRangeRequest'
        less-than-amount:
          type: integer
          format: int64
          writeOnly: true
        less-than-balance:
          type: integer
          format: int64
          writeOnly: true
        page:
          type: integer
          format: int32
        page-size:
          type: integer
          format: int32
          writeOnly: true
        pageSize:
          type: integer
          format: int32
        sort-column:
          type: string
          writeOnly: true
        sort-order:
          type: string
          writeOnly: true
        sortColumn:
          type: string
        sortOrder:
          type: string
        statuses:
          type: array
          items:
            type: string
            enum:
              - UNSENT
              - SENT
              - PAID
              - PARTIALLY_PAID
              - VOID
              - OVERDUE
        strict-id-search:
          type: boolean
          writeOnly: true
        strictSearch:
          type: boolean
        timeRangeRequest:
          $ref: '#/components/schemas/TimeRangeRequest'
    InvoiceFilterRequestV1:
      required:
        - page
        - page-size
        - pageSize
      type: object
      properties:
        clients:
          $ref: '#/components/schemas/ContainsClientsFilterRequest'
        companies:
          $ref: '#/components/schemas/ContainsCompaniesFilterRequest'
        exactAmount:
          type: integer
          description: Represents an invoice amount. If provided, you'll get a filtered list of invoices that has the equal amount as specified.
          format: int64
          example: 1000
        exactBalance:
          type: integer
          description: Represents an invoice balance. If provided, you'll get a filtered list of invoices that has the equal balance as specified.
          format: int64
          example: 1000
        greaterThanAmount:
          type: integer
          description: Represents an invoice amount. If provided, you'll get a filtered list of invoices that has amount greater than specified.
          format: int64
          example: 500
        greaterThanBalance:
          type: integer
          description: Represents an invoice balance. If provided, you'll get a filtered list of invoices that has balance greater than specified.
          format: int64
          example: 500
        invoiceNumber:
          type: string
          description: If provided, you'll get a filtered list of invoices that contain the provided string in their invoice number.
          example: Invoice-01
        issueDate:
          $ref: '#/components/schemas/TimeRangeRequestDtoV1'
        lessThanAmount:
          type: integer
          description: Represents an invoice amount. If provided, you'll get a filtered list of invoices that has amount less than specified.
          format: int64
          example: 500
        lessThanBalance:
          type: integer
          description: Represents an invoice balance. If provided, you'll get a filtered list of invoices that has balance less than specified.
          format: int64
          example: 500
        page:
          type: integer
          description: Page number.
          format: int32
          example: 1
        pageSize:
          type: integer
          description: Page size.
          format: int32
          example: 50
        sortColumn:
          type: string
          description: Represents the column name to be used as sorting criteria.
          example: ID
          enum:
            - ID
            - CLIENT
            - DUE_ON
            - ISSUE_DATE
            - AMOUNT
            - BALANCE
        sortOrder:
          type: string
          description: Represents the sorting order.
          example: ASCENDING
          enum:
            - ASCENDING
            - DESCENDING
        statuses:
          type: array
          description: Represents a list of invoice statuses. If provided, you'll get a filtered list of invoices that matches any of the invoice status provided.
          example:
            - SENT
            - PAID
            - PARTIALLY_PAID
          items:
            type: string
            description: Represents a list of invoice statuses. If provided, you'll get a filtered list of invoices that matches any of the invoice status provided.
            example: '["SENT","PAID","PARTIALLY_PAID"]'
            enum:
              - UNSENT
              - SENT
              - PAID
              - PARTIALLY_PAID
              - VOID
              - OVERDUE
        strictSearch:
          type: boolean
          description: Flag to toggle on/off strict search mode. When set to true, search by invoice number only will return invoices whose number exactly matches the string value given for the 'invoiceNumber' parameter. When set to false, results will also include invoices whose number contain the string value, but could be longer than the string value itself. For example, if there is an invoice with the number '123456', and the search value is '123', setting strict-name-search to true will not return that invoice in the results, whereas setting it to false will.
    InvoiceInfoDto:
      type: object
      properties:
        amount:
          type: integer
          format: int64
        balance:
          type: integer
          format: int64
        billFrom:
          type: string
        clientId:
          type: string
        clientName:
          type: string
        currency:
          type: string
        daysOverdue:
          type: integer
          format: int64
        dueDate:
          type: string
          format: date-time
        hasPayments:
          type: boolean
        id:
          type: string
        issuedDate:
          type: string
          format: date-time
        number:
          type: string
        paid:
          type: integer
          format: int64
        status:
          type: string
          enum:
            - UNSENT
            - SENT
            - PAID
            - PARTIALLY_PAID
            - VOID
            - OVERDUE
        visibleZeroFields:
          type: array
          items:
            type: string
            enum:
              - TAX
              - TAX_2
              - DISCOUNT
    InvoiceInfoResponseDto:
      type: object
      properties:
        invoices:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceInfoDto'
        total:
          type: integer
          format: int64
    InvoiceInfoResponseDtoV1:
      type: object
      properties:
        invoices:
          type: array
          description: Represents a list of invoice info.
          items:
            $ref: '#/components/schemas/InvoiceInfoV1'
        total:
          type: integer
          description: Represents the total invoice count.
          format: int64
          example: 100
    InvoiceInfoV1:
      type: object
      properties:
        amount:
          type: integer
          description: Represents an invoice amount as long.
          format: int64
          example: 100
        balance:
          type: integer
          description: Represents an invoice balance amount as long.
          format: int64
          example: 50
        billFrom:
          type: string
          description: Represents to whom an invoice is billed from.
          example: Company XYZ
        clientId:
          type: string
          description: Represents client identifier across the system.
          example: 98h687e29ae1f428e7ebe707
        clientName:
          type: string
          description: Represents client name for an invoice.
          example: Client X
        currency:
          type: string
          description: Represents the currency used by the invoice.
          example: USD
        daysOverdue:
          type: integer
          description: Represents the number of days an invoice is overdue.
          format: int64
          example: 10
        dueDate:
          type: string
          description: Represents an invoice due date in yyyy-MM-ddThh:mm:ssZ format.
          format: date-time
          example: "2020-06-01T08:00:00Z"
        id:
          type: string
          description: Represents invoice identifier across the system.
          example: 78a687e29ae1f428e7ebe303
        issuedDate:
          type: string
          description: Represents an invoice issued date in yyyy-MM-ddThh:mm:ssZ format.
          format: date-time
          example: "2020-01-01T08:00:00Z"
        number:
          type: string
          description: Represents an invoice number.
          example: "202306121129"
        paid:
          type: integer
          description: Represents an invoice paid amount as long.
          format: int64
          example: 50
        status:
          type: string
          description: Represents the status of an invoice.
          example: PAID
          enum:
            - UNSENT
            - SENT
            - PAID
            - PARTIALLY_PAID
            - VOID
            - OVERDUE
        visibleZeroFields:
          $ref: '#/components/schemas/VisibleZeroFieldsInvoice'
      description: Represents a list of invoice info.
    InvoiceItemDto:
      type: object
      properties:
        amount:
          type: integer
          description: Represents item amount.
          format: int64
          example: 5000
        description:
          type: string
          description: Represents an invoice item description.
          example: This is a description of an invoice item.
        itemType:
          type: string
          description: Represents item type.
          example: Goods
        order:
          type: integer
          description: Represents an integer.
          format: int32
          example: 100
        quantity:
          type: integer
          description: Represents item quantity.
          format: int64
          example: 10
        timeEntryIds:
          type: array
          description: Represents a list of time entrry IDs.
          example:
            - 5b715448b0798751107918ab
            - 5b641568b07987035750505e
          items:
            type: string
            description: Represents a list of time entrry IDs.
            example: '["5b715448b0798751107918ab","5b641568b07987035750505e"]'
        unitPrice:
          type: integer
          description: Represents item unit price.
          format: int64
          example: 500
    InvoiceItemTypeDto:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    InvoiceOverviewDto:
      type: object
      properties:
        amount:
          type: integer
          format: int64
        balance:
          type: integer
          format: int64
        billFrom:
          type: string
        clientAddress:
          type: string
        clientArchived:
          type: boolean
        clientId:
          type: string
        clientName:
          type: string
        companyId:
          type: string
        containsAttachedReceipts:
          type: boolean
        containsImportedExpenses:
          type: boolean
        containsImportedTimes:
          type: boolean
        currency:
          type: string
        daysOverdue:
          type: integer
          format: int64
        discount:
          type: number
          format: double
          deprecated: true
        discountAmount:
          type: integer
          format: int64
        discountPercent:
          type: number
          format: double
        dueDate:
          type: string
          format: date-time
        hasPayments:
          type: boolean
        id:
          type: string
        issuedDate:
          type: string
          format: date-time
        items:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceItemDto'
        note:
          type: string
        number:
          type: string
        paid:
          type: integer
          format: int64
        status:
          type: string
          enum:
            - UNSENT
            - SENT
            - PAID
            - PARTIALLY_PAID
            - VOID
            - OVERDUE
        subject:
          type: string
        subtotal:
          type: integer
          format: int64
        tax:
          type: number
          format: double
          deprecated: true
        tax2:
          type: number
          format: double
          deprecated: true
        tax2Amount:
          type: integer
          format: int64
        tax2Percent:
          type: number
          format: double
        taxAmount:
          type: integer
          format: int64
        taxPercent:
          type: number
          format: double
        userId:
          type: string
        visibleZeroFields:
          type: array
          items:
            type: string
            enum:
              - TAX
              - TAX_2
              - DISCOUNT
    InvoiceOverviewDtoV1:
      type: object
      properties:
        amount:
          type: integer
          description: Represents an invoice amount as long.
          format: int64
          example: 100
        balance:
          type: integer
          description: Represents an invoice balance amount as long.
          format: int64
          example: 50
        billFrom:
          type: string
          description: Represents to whom the invoice should be billed from.
          example: Business X
        clientAddress:
          type: string
          description: Represents client address.
          example: Ground Floor, ABC Bldg., Palo Alto, California, USA 94020
        clientId:
          type: string
          description: Represents client identifier across the system.
          example: 98h687e29ae1f428e7ebe707
        clientName:
          type: string
          description: Represents client name for an invoice.
          example: Client X
        companyId:
          type: string
          description: Represents company identifier across the system.
          example: 04g687e29ae1f428e7ebe123
        containsImportedExpenses:
          type: boolean
          description: Indicates whether invoice contains imported expenses.
        containsImportedTimes:
          type: boolean
          description: Indicates whether invoice contains imported items.
        currency:
          type: string
          description: Represents the currency used by the invoice.
          example: USD
        discount:
          type: number
          description: Represents an invoice discount amount as double.
          format: double
          example: 10.5
        discountAmount:
          type: integer
          description: Represents an invoice discount amount as long.
          format: int64
          example: 11
        dueDate:
          type: string
          description: Represents an invoice due date in yyyy-MM-ddThh:mm:ssZ format.
          format: date-time
          example: "2020-06-01T08:00:00Z"
        id:
          type: string
          description: Represents invoice identifier across the system.
          example: 78a687e29ae1f428e7ebe303
        issuedDate:
          type: string
          description: Represents an invoice issued date in yyyy-MM-ddThh:mm:ssZ format.
          format: date-time
          example: "2020-01-01T08:00:00Z"
        items:
          type: array
          description: Represents a list of invoice item datatransfer objects.
          items:
            $ref: '#/components/schemas/InvoiceItemDto'
        note:
          type: string
          description: Represents an invoice note.
          example: This is a sample note for this invoice.
        number:
          type: string
          description: Represents an invoice number.
          example: "202306121129"
        paid:
          type: integer
          description: Represents an invoice paid amount as long.
          format: int64
          example: 50
        status:
          type: string
          description: Represents the status of an invoice.
          example: PAID
          enum:
            - UNSENT
            - SENT
            - PAID
            - PARTIALLY_PAID
            - VOID
            - OVERDUE
        subject:
          type: string
          description: Represents an invoice subject.
          example: January salary
        subtotal:
          type: integer
          description: Represents an invoice subtotal as long.
          format: int64
          example: 5000
        tax:
          type: number
          description: Represents an invoice tax amount as double.
          format: double
          example: 1.5
        tax2:
          type: number
          description: Represents an invoice tax amount as double.
          format: double
          example: 0.0
        tax2Amount:
          type: integer
          description: Represents an invoice tax amount as long.
          format: int64
          example: 0
        taxAmount:
          type: integer
          description: Represents an invoice tax amount as long.
          format: int64
          example: 1
        userId:
          type: string
          description: Represents user identifier across the system.
          example: 12t687e29ae1f428e7ebe202
        visibleZeroFields:
          $ref: '#/components/schemas/VisibleZeroFieldsInvoice'
    InvoicePaymentDto:
      type: object
      properties:
        amount:
          type: integer
          format: int64
        author:
          type: string
        date:
          type: string
          format: date-time
        id:
          type: string
        note:
          type: string
    InvoicePaymentDtoV1:
      type: object
      properties:
        amount:
          type: integer
          description: Represents an invoice payment amount as long.
          format: int64
          example: 100
        author:
          type: string
          description: Represents an invoice payment author.
          example: John Doe
        date:
          type: string
          description: Represents an invoice payment date in yyyy-MM-ddThh:mm:ssZ format.
          format: date-time
          example: "2021-01-01T12:00:00Z"
        id:
          type: string
          description: Represents invoice payment identifier across the system.
          example: 78a687e29ae1f428e7ebe303
        note:
          type: string
          description: Represents an invoice payment note.
          example: This is a sample note for this invoice payment.
    InvoicePermissionsDto:
      type: object
      properties:
        everyoneIncludingNew:
          type: boolean
        selectedUsersCount:
          type: integer
          format: int32
        specificMembersAllowed:
          type: boolean
        userGroupIds:
          uniqueItems: true
          type: array
          items:
            type: string
        userIds:
          uniqueItems: true
          type: array
          items:
            type: string
        workspaceId:
          type: string
    InvoicePermissionsRequest:
      type: object
      properties:
        everyoneIncludingNew:
          type: boolean
        specificMembersAllowed:
          type: boolean
        userGroupIds:
          uniqueItems: true
          type: array
          items:
            type: string
        userIds:
          uniqueItems: true
          type: array
          items:
            type: string
        workspaceId:
          type: string
    InvoiceSettingsDto:
      type: object
      properties:
        defaults:
          $ref: '#/components/schemas/InvoiceDefaultSettingsDto'
        exportFields:
          $ref: '#/components/schemas/InvoiceExportFields'
        labels:
          $ref: '#/components/schemas/LabelsCustomization'
    InvoiceSettingsDtoV1:
      type: object
      properties:
        defaults:
          $ref: '#/components/schemas/InvoiceDefaultSettingsDto'
        exportFields:
          $ref: '#/components/schemas/InvoiceExportFields'
        labels:
          $ref: '#/components/schemas/LabelsCustomization'
    InvoicesListDtoV1:
      type: object
      properties:
        invoices:
          type: array
          description: Represents a list of invoices.
          items:
            $ref: '#/components/schemas/InvoiceDtoV1'
        total:
          type: integer
          description: Represents the total invoice count.
          format: int64
          example: 100
    KioskAuthenticationCodeRequest:
      type: object
      properties:
        currentLang:
          type: string
        email:
          type: string
        timeZone:
          type: string
    KioskAuthenticationRequest:
      type: object
      properties:
        email:
          $ref: '#/components/schemas/EmailAddress'
    KioskClockInRequest:
      type: object
      properties:
        isSwitched:
          type: boolean
          writeOnly: true
        notEmptyRequest:
          type: boolean
        projectId:
          type: string
        switched:
          type: boolean
        taskId:
          type: string
    KioskDefault:
      required:
        - kioskId
        - projectId
      type: object
      properties:
        kioskId:
          type: string
        projectId:
          type: string
        taskId:
          type: string
    KioskDto:
      type: object
      properties:
        defaultEntities:
          $ref: '#/components/schemas/DefaultEntitiesDto'
        everyoneIncludingNew:
          type: boolean
        groupIds:
          uniqueItems: true
          type: array
          items:
            type: string
        id:
          type: string
        name:
          type: string
        pin:
          $ref: '#/components/schemas/PinSettingDto'
        sessionDuration:
          type: integer
          format: int32
        status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
            - DELETED
        urlSlug:
          type: string
        userIds:
          uniqueItems: true
          type: array
          items:
            type: string
        workspaceId:
          type: string
    KioskEntryRequest:
      type: object
      properties:
        notEmptyRequest:
          type: boolean
        projectId:
          type: string
        taskId:
          type: string
    KioskHydratedDto:
      type: object
      properties:
        defaultEntities:
          $ref: '#/components/schemas/DefaultEntitiesDto'
        everyoneIncludingNew:
          type: boolean
        groups:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/UserGroupInfoDto'
        id:
          type: string
        name:
          type: string
        pin:
          $ref: '#/components/schemas/PinSettingDto'
        sessionDuration:
          type: integer
          format: int32
        status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
            - DELETED
        urlSlug:
          type: string
        urlToken:
          type: string
        users:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/UserInfoWithMembershipStatusDto'
        workspaceId:
          type: string
    KioskHydratedWithCountDto:
      type: object
      properties:
        count:
          type: integer
          format: int32
        kiosks:
          type: array
          items:
            $ref: '#/components/schemas/KioskHydratedDto'
    KioskLoginSettingsDto:
      type: object
      properties:
        autoLogin:
          type: string
        kioskAutoLoginEnabled:
          type: boolean
        kioskAutologinEnabled:
          type: boolean
          writeOnly: true
        kioskId:
          type: string
        loginPreferences:
          uniqueItems: true
          type: array
          items:
            type: string
        logoUrl:
          type: string
          writeOnly: true
        name:
          type: string
        oAuthConfiguration:
          $ref: '#/components/schemas/OAuthConfigurationDto'
        saml2Settings:
          $ref: '#/components/schemas/SAML2LoginSettingsDto'
        ssoLogoUrl:
          type: string
        status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
            - DELETED
        urlSlug:
          type: string
        workspaceId:
          type: string
        workspaceLogoUrl:
          type: string
    KioskLogoutRequest:
      required:
        - userId
      type: object
      properties:
        pinCode:
          type: string
        userId:
          type: string
    KioskMemberDetailsDto:
      type: object
      properties:
        belongsToKiosk:
          type: boolean
        dayTotal:
          $ref: '#/components/schemas/KioskSummaryDto'
        email:
          type: string
        entries:
          type: array
          items:
            $ref: '#/components/schemas/TimeEntryKioskInfoDto'
        id:
          type: string
        imageUrl:
          type: string
        isAdmin:
          type: boolean
        isProjectManager:
          type: boolean
        isTeamManager:
          type: boolean
        mostRecentProject:
          $ref: '#/components/schemas/MostRecentKioskProjectDto'
        name:
          type: string
        runningEntry:
          $ref: '#/components/schemas/TimeEntryKioskInfoDto'
        status:
          type: string
          enum:
            - CLOCKED_IN
            - ON_BREAK
            - CLOCKED_OUT
        weekTotal:
          $ref: '#/components/schemas/KioskSummaryDto'
    KioskMemberDto:
      type: object
      properties:
        belongsToKiosk:
          type: boolean
        email:
          type: string
        id:
          type: string
        imageUrl:
          type: string
        isAdmin:
          type: boolean
        isProjectManager:
          type: boolean
        isTeamManager:
          type: boolean
        name:
          type: string
        status:
          type: string
          enum:
            - CLOCKED_IN
            - ON_BREAK
            - CLOCKED_OUT
    KioskProjectDto:
      type: object
      properties:
        clientId:
          type: string
        clientName:
          type: string
        favorite:
          type: boolean
        projectColor:
          type: string
        projectId:
          type: string
        projectName:
          type: string
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/KioskTaskDto'
    KioskProjectDtoList:
      type: object
      properties:
        hasMoreData:
          type: boolean
        projects:
          type: array
          items:
            $ref: '#/components/schemas/KioskProjectDto'
    KioskSummaryDto:
      type: object
      properties:
        breakDuration:
          type: object
          properties:
            nano:
              type: integer
              format: int32
            negative:
              type: boolean
            positive:
              type: boolean
            seconds:
              type: integer
              format: int64
            units:
              type: array
              items:
                type: object
                properties:
                  dateBased:
                    type: boolean
                  duration:
                    type: object
                    properties:
                      nano:
                        type: integer
                        format: int32
                      negative:
                        type: boolean
                      positive:
                        type: boolean
                      seconds:
                        type: integer
                        format: int64
                      zero:
                        type: boolean
                  durationEstimated:
                    type: boolean
                  timeBased:
                    type: boolean
            zero:
              type: boolean
        totalDuration:
          type: object
          properties:
            nano:
              type: integer
              format: int32
            negative:
              type: boolean
            positive:
              type: boolean
            seconds:
              type: integer
              format: int64
            units:
              type: array
              items:
                type: object
                properties:
                  dateBased:
                    type: boolean
                  duration:
                    type: object
                    properties:
                      nano:
                        type: integer
                        format: int32
                      negative:
                        type: boolean
                      positive:
                        type: boolean
                      seconds:
                        type: integer
                        format: int64
                      zero:
                        type: boolean
                  durationEstimated:
                    type: boolean
                  timeBased:
                    type: boolean
            zero:
              type: boolean
        workDuration:
          type: object
          properties:
            nano:
              type: integer
              format: int32
            negative:
              type: boolean
            positive:
              type: boolean
            seconds:
              type: integer
              format: int64
            units:
              type: array
              items:
                type: object
                properties:
                  dateBased:
                    type: boolean
                  duration:
                    type: object
                    properties:
                      nano:
                        type: integer
                        format: int32
                      negative:
                        type: boolean
                      positive:
                        type: boolean
                      seconds:
                        type: integer
                        format: int64
                      zero:
                        type: boolean
                  durationEstimated:
                    type: boolean
                  timeBased:
                    type: boolean
            zero:
              type: boolean
    KioskTaskDto:
      type: object
      properties:
        favorite:
          type: boolean
        taskId:
          type: string
        taskName:
          type: string
    KioskTokenDto:
      type: object
      properties:
        token:
          type: string
        userId:
          type: string
        workspaceId:
          type: string
    KioskUserLoginRequest:
      required:
        - userId
      type: object
      properties:
        pinCode:
          type: string
        userId:
          type: string
    KioskUserPinCodeDto:
      type: object
      properties:
        id:
          type: string
        pinCode:
          $ref: '#/components/schemas/PinCode'
        pinCodeContext:
          type: string
          enum:
            - ADMIN
            - UNIVERSAL
            - USER
            - INITIAL
        userId:
          type: string
        workspaceId:
          type: string
    LabelsCustomization:
      type: object
      properties:
        amount:
          type: string
          description: Represents invoice amount.
          example: "1000"
        billFrom:
          type: string
          description: Represents a string an invoice is billed from.
          example: Entity A
        billTo:
          type: string
          description: Represents a string an invoice is billed to.
          example: Entity B
        description:
          type: string
          description: Represents a description of an invoice.
          example: This is a sample description for this invoice.
        discount:
          type: string
          description: Represents invoice discount amount.
          example: "0"
        dueDate:
          type: string
          description: Represents a due date in yyyy-MM-dd format.
          example: "2020-01-01"
        issueDate:
          type: string
          description: Represents an issue date in yyyy-MM-dd format.
          example: "2020-01-01"
        itemType:
          type: string
          description: Represents an item type.
          example: Service
        notes:
          type: string
          description: Represents notes for an invoice.
          example: This is a sample note for this invoice.
        paid:
          type: string
          description: Represents invoice paid amount.
          example: "1000"
        quantity:
          type: string
          description: Represents quantity.
          example: "10"
        subtotal:
          type: string
          description: Represents invoice subtotal.
          example: "1000"
        tax:
          type: string
          description: Represents invoice tax amount.
          example: "10"
        tax2:
          type: string
          description: Represents invoice tax amount.
          example: "0"
        total:
          type: string
          description: Represents invoice total amount.
          example: "1010"
        totalAmount:
          type: string
          description: Represents invoice total amount.
          example: "1010"
        unitPrice:
          type: string
          description: Represents unit price.
          example: "100"
    LabelsCustomizationRequest:
      required:
        - amount
        - billFrom
        - billTo
        - description
        - discount
        - dueDate
        - issueDate
        - itemType
        - notes
        - paid
        - quantity
        - subtotal
        - tax
        - tax2
        - total
        - totalAmountDue
        - unitPrice
      type: object
      properties:
        amount:
          maxLength: 20
          minLength: 0
          type: string
          description: Represents invoice amount label.
          example: AMOUNT
        billFrom:
          maxLength: 20
          minLength: 0
          type: string
          description: Represents invoice bill from label.
          example: BILL FROM
        billTo:
          maxLength: 20
          minLength: 0
          type: string
          description: Represents invoice bill to label.
          example: BILL TO
        description:
          maxLength: 20
          minLength: 0
          type: string
          description: Represents invoice description label.
          example: DESCRIPTION
        discount:
          maxLength: 20
          minLength: 0
          type: string
          description: Represents invoice discount amount label.
          example: DISCOUNT
        dueDate:
          maxLength: 20
          minLength: 0
          type: string
          description: Represents invoice due date label.
          example: DUE DATE
        issueDate:
          maxLength: 20
          minLength: 0
          type: string
          description: Represents invoice issue date label.
          example: ISSUE DATE
        itemType:
          maxLength: 20
          minLength: 0
          type: string
          description: Represents invoice item type label.
          example: ITEM TYPE
        notes:
          maxLength: 20
          minLength: 0
          type: string
          description: Represents invoice notes label.
          example: NOTES
        paid:
          maxLength: 20
          minLength: 0
          type: string
          description: Represents invoice paid amount label.
          example: PAID
        quantity:
          maxLength: 20
          minLength: 0
          type: string
          description: Represents invoice quantity label.
          example: QUANTITY
        subtotal:
          maxLength: 20
          minLength: 0
          type: string
          description: Represents invoice subtotal label.
          example: SUBTOTAL
        tax:
          maxLength: 20
          minLength: 0
          type: string
          description: Represents invoice tax amount label.
          example: TAX
        tax2:
          maxLength: 20
          minLength: 0
          type: string
          description: Represents invoice tax 2 amount label.
          example: TAX2
        total:
          maxLength: 20
          minLength: 0
          type: string
          description: Represents invoice total amount label.
          example: AMOUNT
        totalAmountDue:
          maxLength: 20
          minLength: 0
          type: string
          description: Represents invoice total amount due label.
          example: TOTAL AMOUNT DUE
        unitPrice:
          maxLength: 20
          minLength: 0
          type: string
          description: Represents invoice unit price label.
          example: UNIT PRICE
    LatestActivityItemDto:
      type: object
      properties:
        clientName:
          type: string
        color:
          type: string
        duration:
          type: object
          properties:
            nano:
              type: integer
              format: int32
            negative:
              type: boolean
            positive:
              type: boolean
            seconds:
              type: integer
              format: int64
            units:
              type: array
              items:
                type: object
                properties:
                  dateBased:
                    type: boolean
                  duration:
                    type: object
                    properties:
                      nano:
                        type: integer
                        format: int32
                      negative:
                        type: boolean
                      positive:
                        type: boolean
                      seconds:
                        type: integer
                        format: int64
                      zero:
                        type: boolean
                  durationEstimated:
                    type: boolean
                  timeBased:
                    type: boolean
            zero:
              type: boolean
        label:
          type: string
        percentage:
          type: string
        projectName:
          type: string
        transformedLabel:
          type: string
          writeOnly: true
        transformedProjectName:
          type: string
          writeOnly: true
    LegacyPlanUpgradeDataDto:
      type: object
      properties:
        hasLegacyWorkspace:
          type: boolean
        isAcknowledged:
          type: boolean
        isCurrentWorkspaceLegacy:
          type: boolean
        isNextSubscriptionTypeLegacyForCurrentWorkspace:
          type: boolean
    Link:
      type: object
      properties:
        copy:
          type: string
        uri:
          type: string
    LinkDto:
      type: object
      properties:
        copy:
          type: string
        uri:
          type: string
    LinkRequest:
      type: object
      properties:
        copy:
          type: string
        uri:
          type: string
    LoggedInKioskInfoDto:
      type: object
      properties:
        kiosk:
          $ref: '#/components/schemas/KioskHydratedDto'
        user:
          $ref: '#/components/schemas/UserDto'
        workspace:
          $ref: '#/components/schemas/WorkspaceDto'
    LoginPreferenceRequest:
      type: object
      properties:
        loginPreference:
          uniqueItems: true
          type: array
          items:
            type: string
    LoginSettingsDto:
      type: object
      properties:
        autoLogin:
          type: string
        getoAuthConfiguration:
          $ref: '#/components/schemas/OAuthConfigurationDto'
        isoAuthAutomaticJoinWorkspace:
          type: boolean
        loginPreferences:
          uniqueItems: true
          type: array
          items:
            type: string
        logoURL:
          type: string
        oauth2Forced:
          type: boolean
        registrationLocked:
          type: boolean
        saml2AutomaticJoinWorkspace:
          type: boolean
        saml2Forced:
          type: boolean
        saml2Settings:
          $ref: '#/components/schemas/SAML2LoginSettingsDto'
    MainReportDto:
      type: object
      properties:
        billableAndTotalTime:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/TotalTimeItemDto'
        dateAndTotalTime:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/TotalTimeItemDto'
        earningByUserMap:
          type: object
          additionalProperties:
            type: integer
            format: int64
        earningWithCurrencyByUserMap:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/AmountWithCurrencyDto'
        projectAndTotalTime:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/TotalTimeItemDto'
        topClient:
          type: string
        topProject:
          type: string
        totalBillable:
          type: string
        totalEarned:
          type: integer
          format: int64
        totalEarnedByCurrency:
          type: array
          items:
            $ref: '#/components/schemas/AmountWithCurrencyDto'
        totalTime:
          type: string
        workspaceId:
          type: string
    MemberProfileDto:
      type: object
      properties:
        email:
          type: string
        hasPassword:
          type: boolean
        hasPendingApprovalRequest:
          type: boolean
        imageUrl:
          type: string
        name:
          type: string
        userCustomFieldValues:
          type: array
          items:
            $ref: '#/components/schemas/UserCustomFieldValueFullDto'
        weekStart:
          type: string
        workCapacity:
          type: string
        workingDays:
          type: array
          items:
            type: string
        workspaceNumber:
          type: integer
          format: int32
    MemberProfileDtoV1:
      type: object
      properties:
        email:
          type: string
          description: Represents email address of the user.
          example: johndoe@example.com
        hasPassword:
          type: boolean
          description: Indicates whether user has password or none.
        hasPendingApprovalRequest:
          type: boolean
          description: Indicates whether user has pending approval request.
        imageUrl:
          type: string
          description: Represents an image url.
          example: https://www.url.com/imageurl-1234567890.jpg
        name:
          type: string
          description: Represents name of the user.
          example: John Doe
        userCustomFieldValues:
          type: array
          description: Represents a list of value objects for user’s custom fields.
          items:
            $ref: '#/components/schemas/UserCustomFieldValueFullDtoV1'
        weekStart:
          $ref: '#/components/schemas/DayOfWeek'
        workCapacity:
          type: string
          description: Represents work capacity as duration.
          example: "50000"
        workingDays:
          $ref: '#/components/schemas/DayOfWeek'
        workspaceNumber:
          type: integer
          description: Represents the number of workspace(s) the user is associated to.
          format: int32
          example: 3
    MemberProfileFullRequest:
      type: object
      properties:
        imageUrl:
          $ref: '#/components/schemas/Url'
        name:
          type: string
        removeProfileImage:
          type: boolean
        userCustomFields:
          type: array
          items:
            $ref: '#/components/schemas/UpsertUserCustomFieldRequest'
        userCustomFieldsOptional:
          type: array
          items:
            $ref: '#/components/schemas/UpsertUserCustomFieldRequest'
        weekStart:
          type: string
          enum:
            - MONDAY
            - TUESDAY
            - WEDNESDAY
            - THURSDAY
            - FRIDAY
            - SATURDAY
            - SUNDAY
        workCapacity:
          type: object
          properties:
            nano:
              type: integer
              format: int32
            negative:
              type: boolean
            positive:
              type: boolean
            seconds:
              type: integer
              format: int64
            units:
              type: array
              items:
                type: object
                properties:
                  dateBased:
                    type: boolean
                  duration:
                    type: object
                    properties:
                      nano:
                        type: integer
                        format: int32
                      negative:
                        type: boolean
                      positive:
                        type: boolean
                      seconds:
                        type: integer
                        format: int64
                      zero:
                        type: boolean
                  durationEstimated:
                    type: boolean
                  timeBased:
                    type: boolean
            zero:
              type: boolean
        workingDays:
          type: array
          items:
            type: string
            enum:
              - MONDAY
              - TUESDAY
              - WEDNESDAY
              - THURSDAY
              - FRIDAY
              - SATURDAY
              - SUNDAY
    MemberProfileFullRequestV1:
      type: object
      properties:
        imageUrl:
          type: string
          description: Represents an image url.
          example: https://www.url.com/imageurl-1234567890.jpg
        name:
          maxLength: 250
          minLength: 2
          type: string
          description: Represents name of the user.
          example: John Doe
        removeProfileImage:
          type: boolean
          description: Indicates whether to remove profile image or not.
        userCustomFields:
          type: array
          description: Represents a list of upsert user custom field objects.
          items:
            $ref: '#/components/schemas/UpsertUserCustomFieldRequest'
        weekStart:
          type: string
          description: Represents a day of the week.
          example: MONDAY
          enum:
            - MONDAY
            - TUESDAY
            - WEDNESDAY
            - THURSDAY
            - FRIDAY
            - SATURDAY
            - SUNDAY
        workCapacity:
          type: string
          description: Represents work capacity as duration in seconds. For example, for a 7hr work day, input should be 25200.
          example: "25200"
        workingDays:
          $ref: '#/components/schemas/DayOfWeek'
    MemberProfileRequest:
      type: object
      properties:
        imageUrl:
          $ref: '#/components/schemas/Url'
        name:
          type: string
        removeProfileImage:
          type: boolean
        weekStart:
          type: string
          enum:
            - MONDAY
            - TUESDAY
            - WEDNESDAY
            - THURSDAY
            - FRIDAY
            - SATURDAY
            - SUNDAY
        workCapacity:
          type: object
          properties:
            nano:
              type: integer
              format: int32
            negative:
              type: boolean
            positive:
              type: boolean
            seconds:
              type: integer
              format: int64
            units:
              type: array
              items:
                type: object
                properties:
                  dateBased:
                    type: boolean
                  duration:
                    type: object
                    properties:
                      nano:
                        type: integer
                        format: int32
                      negative:
                        type: boolean
                      positive:
                        type: boolean
                      seconds:
                        type: integer
                        format: int64
                      zero:
                        type: boolean
                  durationEstimated:
                    type: boolean
                  timeBased:
                    type: boolean
            zero:
              type: boolean
        workingDays:
          type: array
          items:
            type: string
            enum:
              - MONDAY
              - TUESDAY
              - WEDNESDAY
              - THURSDAY
              - FRIDAY
              - SATURDAY
              - SUNDAY
    MemberSettingsRequest:
      type: object
      properties:
        weekStart:
          type: string
          enum:
            - MONDAY
            - TUESDAY
            - WEDNESDAY
            - THURSDAY
            - FRIDAY
            - SATURDAY
            - SUNDAY
        workCapacity:
          type: object
          properties:
            nano:
              type: integer
              format: int32
            negative:
              type: boolean
            positive:
              type: boolean
            seconds:
              type: integer
              format: int64
            units:
              type: array
              items:
                type: object
                properties:
                  dateBased:
                    type: boolean
                  duration:
                    type: object
                    properties:
                      nano:
                        type: integer
                        format: int32
                      negative:
                        type: boolean
                      positive:
                        type: boolean
                      seconds:
                        type: integer
                        format: int64
                      zero:
                        type: boolean
                  durationEstimated:
                    type: boolean
                  timeBased:
                    type: boolean
            zero:
              type: boolean
        workingDays:
          type: array
          items:
            type: string
            enum:
              - MONDAY
              - TUESDAY
              - WEDNESDAY
              - THURSDAY
              - FRIDAY
              - SATURDAY
              - SUNDAY
    MembersCountDto:
      type: object
      properties:
        activeLimitedMembersCount:
          type: integer
          format: int32
        activeMembersCount:
          type: integer
          format: int32
        inactiveMembersCount:
          type: integer
          format: int32
    MembershipDto:
      type: object
      properties:
        costRate:
          $ref: '#/components/schemas/RateDto'
        hourlyRate:
          $ref: '#/components/schemas/RateDto'
        membershipStatus:
          type: string
          enum:
            - PENDING
            - ACTIVE
            - DECLINED
            - INACTIVE
            - ALL
        membershipType:
          type: string
        targetId:
          type: string
        userId:
          type: string
    MembershipDtoV1:
      type: object
      properties:
        costRate:
          $ref: '#/components/schemas/RateDtoV1'
        hourlyRate:
          $ref: '#/components/schemas/HourlyRateDtoV1'
        membershipStatus:
          type: string
          description: Represents a membership status enum.
          example: PENDING
          enum:
            - PENDING
            - ACTIVE
            - DECLINED
            - INACTIVE
            - ALL
        membershipType:
          type: string
          description: Represents membership type enum.
          example: PROJECT
          enum:
            - WORKSPACE
            - PROJECT
            - USERGROUP
        targetId:
          type: string
          description: Represents target identifier across the system.
          example: 64c777ddd3fcab07cfbb210c
        userId:
          type: string
          description: Represents user identifier across the system.
          example: 5a0ab5acb07987125438b60f
      description: Represents a list of membership objects.
    MembershipRequest:
      type: object
      properties:
        hourlyRate:
          $ref: '#/components/schemas/HourlyRateRequest'
        membershipStatus:
          type: string
          description: Represents a membership status enum.
          example: PENDING
          enum:
            - PENDING
            - ACTIVE
            - DECLINED
            - INACTIVE
            - ALL
        membershipType:
          type: string
          description: Represents membership type enum.
          example: PROJECT
          enum:
            - WORKSPACE
            - PROJECT
            - USERGROUP
        userId:
          type: string
          description: Represents user identifier across the system.
          example: 12t687e29ae1f428e7ebe202
    MilestoneCreateRequest:
      required:
        - projectId
      type: object
      properties:
        date:
          type: string
        name:
          type: string
        projectId:
          type: string
    MilestoneDateRequest:
      type: object
      properties:
        date:
          type: string
          format: date-time
    MilestoneDto:
      type: object
      properties:
        date:
          type: string
          description: Represents a date in yyyy-MM-ddThh:mm:ssZ format.
          format: date-time
          example: "2020-01-01T08:00:00Z"
        id:
          type: string
          description: Represents milestone identifier across the system.
          example: 34a687e29ae1f428e7ebe303
        name:
          type: string
          description: Represents milestone name.
          example: Q3
        projectId:
          type: string
          description: Represents project identifier across the system.
          example: 5b641568b07987035750505e
        workspaceId:
          type: string
          description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
    MilestoneUpdateRequest:
      type: object
      properties:
        date:
          type: string
          format: date-time
        name:
          type: string
    MostRecentKioskProjectDto:
      type: object
      properties:
        clientId:
          type: string
        clientName:
          type: string
        projectColor:
          type: string
        projectId:
          type: string
        projectName:
          type: string
        taskId:
          type: string
        taskName:
          type: string
    MostTrackedDto:
      type: object
      properties:
        billable:
          type: boolean
        clientName:
          type: string
        description:
          type: string
        duration:
          type: object
          properties:
            nano:
              type: integer
              format: int32
            negative:
              type: boolean
            positive:
              type: boolean
            seconds:
              type: integer
              format: int64
            units:
              type: array
              items:
                type: object
                properties:
                  dateBased:
                    type: boolean
                  duration:
                    type: object
                    properties:
                      nano:
                        type: integer
                        format: int32
                      negative:
                        type: boolean
                      positive:
                        type: boolean
                      seconds:
                        type: integer
                        format: int64
                      zero:
                        type: boolean
                  durationEstimated:
                    type: boolean
                  timeBased:
                    type: boolean
            zero:
              type: boolean
        id:
          type: string
        projectColor:
          type: string
        projectId:
          type: string
        projectName:
          type: string
        tagIds:
          type: array
          items:
            type: string
        taskId:
          type: string
        taskName:
          type: string
    MultiFactorAuthUserDto:
      type: object
      properties:
        auth:
          $ref: '#/components/schemas/AuthDto'
        user:
          $ref: '#/components/schemas/UserDto'
    MultiFactorCodeConfirmationRequest:
      required:
        - code
        - multiFactorToken
      type: object
      properties:
        code:
          type: string
        multiFactorToken:
          type: string
    MultiFactorConfirmation:
      type: object
      properties:
        code:
          type: string
        multiFactorEnabled:
          type: boolean
    MultiFactorRequest:
      type: object
      properties:
        multiFactorEnabled:
          type: boolean
    MultiFactorResendCodeLoginRequest:
      required:
        - multiFactorToken
      type: object
      properties:
        action:
          type: string
        multiFactorToken:
          type: string
    MultiFactorResendCodeOptionalActionRequest:
      type: object
      properties:
        action:
          type: string
    MultiFactorUserSettingsCodeConfirmationRequest:
      required:
        - code
        - multiFactorEnabled
      type: object
      properties:
        code:
          type: string
        multiFactorEnabled:
          type: boolean
    MultiFactorWorkspaceConfirmationRequest:
      required:
        - code
      type: object
      properties:
        code:
          type: string
        multiFactorEnabled:
          type: boolean
    NegativeBalanceDto:
      type: object
      properties:
        amount:
          type: number
          format: double
        period:
          type: string
        timeUnit:
          type: string
    NegativeBalanceRequest:
      required:
        - amount
      type: object
      properties:
        amount:
          minimum: 0
          type: number
          description: Represents negative balance amount.
          format: double
          example: 2.0
        amountValidForTimeUnit:
          type: boolean
        period:
          type: string
          description: Represents negative balance period.
          example: MONTH
          enum:
            - MONTH
            - YEAR
        timeUnit:
          type: string
          description: Represents negative balance time unit.
          example: DAYS
          enum:
            - DAYS
            - HOURS
    NewUserJoinsRequest:
      required:
        - invitationCode
        - lang
      type: object
      properties:
        invitationCode:
          type: string
        lang:
          type: string
        name:
          type: string
        newsletter:
          type: boolean
        password:
          type: string
        terms:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/TermDto'
        timeZone:
          type: string
    NewsDto:
      type: object
      properties:
        id:
          type: string
        image:
          $ref: '#/components/schemas/NewsImageInfo'
        link:
          type: string
        linkText:
          type: string
        message:
          type: string
        title:
          type: string
        userRole:
          type: string
          enum:
            - USER
            - MANAGER
            - ADMIN
            - NOTIFIER
            - SUPPORT_AGENT
            - SALES_AGENT
            - SALES_ADMIN
            - SALES_PANEL
            - BILLING
        workspacePlan:
          type: string
          enum:
            - ALL
            - PAID
            - FREE
    NewsImageInfo:
      type: object
      properties:
        imageName:
          type: string
        imagePath:
          type: string
    NewsRequest:
      type: object
      properties:
        body:
          type: string
        header:
          type: string
        image:
          $ref: '#/components/schemas/NewsImageInfo'
        link:
          type: string
        linkText:
          type: string
        role:
          type: string
          enum:
            - USER
            - MANAGER
            - ADMIN
            - NOTIFIER
            - SUPPORT_AGENT
            - SALES_AGENT
            - SALES_ADMIN
            - SALES_PANEL
            - BILLING
        workspaceIds:
          type: array
          items:
            type: string
        workspacePlan:
          type: string
          enum:
            - ALL
            - PAID
            - FREE
    NextCustomerInformationDto:
      type: object
      properties:
        billingAddress:
          type: string
        billingAddress2:
          type: string
        billingCity:
          type: string
        billingCountry:
          type: string
        billingState:
          type: string
        billingZip:
          type: string
        currency:
          type: string
    NextInvoiceNumberDto:
      type: object
      properties:
        nextNumber:
          type: string
        workspaceId:
          type: string
    NotificationDataDto:
      type: object
      properties:
        type:
          type: string
          enum:
            - WORKSPACE_INVITATION
            - FEATURE_SUBSCRIPTION
            - ACCOUNT_VERIFICATION
            - WORKSPACE_CHANGED
            - USER_SETTINGS
            - PAYMENT_FAILED
            - NEWS
            - MONITORING
            - CONTACT_SALES
            - FILE_IMPORT_COMPLETED
            - PUMBLE_COUPON
            - EMAIL_VERIFICATION
    NotificationDto:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/NotificationDataDto'
        id:
          type: string
        status:
          type: string
          enum:
            - UNREAD
            - READ
        type:
          type: string
          enum:
            - WORKSPACE_INVITATION
            - FEATURE_SUBSCRIPTION
            - ACCOUNT_VERIFICATION
            - WORKSPACE_CHANGED
            - USER_SETTINGS
            - PAYMENT_FAILED
            - NEWS
            - MONITORING
            - CONTACT_SALES
            - FILE_IMPORT_COMPLETED
            - PUMBLE_COUPON
            - EMAIL_VERIFICATION
        userId:
          type: string
    OAuth2AuthenticationRequest:
      required:
        - code
        - nonce
        - redirectURI
        - state
      type: object
      properties:
        code:
          type: string
        invitationCode:
          type: string
        lang:
          type: string
        nonce:
          type: string
        organizationName:
          type: string
        redirectURI:
          type: string
        state:
          type: string
        terms:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/TermDto'
        timeZone:
          type: string
    OAuth2ConfigurationDto:
      type: object
      properties:
        accessTokenPath:
          type: string
        active:
          type: boolean
        authorizationCodePath:
          type: string
        clientId:
          type: string
        clientSecret:
          type: string
        emailTokenField:
          type: string
        firstNameTokenField:
          type: string
        forceSSO:
          type: boolean
        isActive:
          type: boolean
          writeOnly: true
        lastNameTokenField:
          type: string
        logoUri:
          type: string
        scope:
          type: string
        userInfoOpenIdPath:
          type: string
        usernameTokenField:
          type: string
    OAuthConfigurationDto:
      type: object
      properties:
        active:
          type: boolean
        forceSSO:
          type: boolean
        isActive:
          type: boolean
          writeOnly: true
        logoUri:
          type: string
        url:
          type: string
    OAuthConfigurationRequest:
      required:
        - accessTokenPath
        - authorizationCodePath
        - clientId
        - clientSecret
        - emailTokenField
        - scope
        - userInfoOpenIdPath
      type: object
      properties:
        accessTokenPath:
          type: string
        active:
          type: boolean
        authorizationCodePath:
          type: string
        clientId:
          type: string
        clientSecret:
          type: string
        emailTokenField:
          type: string
        firstNameTokenField:
          type: string
        forceSSO:
          type: boolean
        lastNameTokenField:
          type: string
        logoUri:
          type: string
        scope:
          type: string
        userInfoOpenIdPath:
          type: string
        usernameTokenField:
          type: string
    OrganizationDto:
      type: object
      properties:
        auth:
          $ref: '#/components/schemas/AuthDto'
        autoLogin:
          type: string
          enum:
            - SAML2
            - OAUTH2
            - "OFF"
        customSupportLinksSettings:
          $ref: '#/components/schemas/CustomSupportLinksSettingsDto'
        domainName:
          type: string
        id:
          type: string
        loginPreferences:
          type: array
          items:
            type: string
        logoURL:
          type: string
        oAuthAutomaticJoinWorkspace:
          type: boolean
        saml2AutomaticJoinWorkspace:
          type: boolean
        workspaceIds:
          type: array
          items:
            type: string
    OrganizationNameDto:
      type: object
      properties:
        domainName:
          type: string
    OrganizationRequest:
      type: object
      properties:
        autoLogin:
          type: string
          enum:
            - SAML2
            - OAUTH2
            - "OFF"
        convertedCustomLinks:
          $ref: '#/components/schemas/CustomSupportLinksSettings'
        customSupportLinksSettings:
          $ref: '#/components/schemas/CustomSupportLinksSettingsRequest'
        domainName:
          type: string
        loginPreferences:
          uniqueItems: true
          type: array
          items:
            type: string
        logoURL:
          type: string
        oAuthAutomaticJoinWorkspace:
          type: boolean
        saml2AutomaticJoinWorkspace:
          type: boolean
        workspaceId:
          type: string
    OwnerIdResponse:
      type: object
      properties:
        ownerId:
          type: string
    OwnerTimeZoneResponse:
      type: object
      properties:
        ownerTimeZone:
          type: string
    PageProjectDto:
      type: object
      properties:
        count:
          type: integer
          format: int32
        list:
          type: array
          items:
            $ref: '#/components/schemas/ProjectDto'
    PasswordResetEmailRequest:
      required:
        - email
      type: object
      properties:
        email:
          maxLength: 100
          minLength: 0
          type: string
    PasswordResetRequest:
      type: object
      properties:
        newPassword:
          type: string
          writeOnly: true
        password:
          type: string
    PasswordResetTokenDto:
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
        identity:
          type: string
        userEmail:
          type: string
    PatchProjectRequest:
      type: object
      properties:
        archived:
          type: boolean
        billable:
          type: boolean
        changeFields:
          type: array
          items:
            type: string
            enum:
              - ARCHIVED
              - BILLABLE
              - CLIENT
              - COLOR
              - ESTIMATE
              - HOURLY_RATE
              - MEMBERS
              - MEMBERS_ADD
              - TASK
              - VISIBILITY
        clientId:
          type: string
        color:
          pattern: ^#(?:[0-9a-fA-F]{6}){1}$
          type: string
        estimate:
          $ref: '#/components/schemas/EstimateRequest'
        hourlyRate:
          $ref: '#/components/schemas/HourlyRateRequest'
        isPublic:
          type: boolean
        overwriteTasks:
          type: boolean
        projectIds:
          maxItems: 1000
          minItems: 0
          type: array
          items:
            type: string
        public:
          type: boolean
        tasks:
          maxItems: 20
          minItems: 0
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/BulkTaskInfoRequest'
        userGroupIds:
          type: array
          deprecated: true
          items:
            type: string
            deprecated: true
        userGroups:
          $ref: '#/components/schemas/ContainsUsersFilterRequest'
        userIds:
          type: array
          deprecated: true
          items:
            type: string
            deprecated: true
        users:
          $ref: '#/components/schemas/ContainsUsersFilterRequest'
    PatchProjectTemplateRequest:
      type: object
      properties:
        isTemplate:
          type: boolean
          description: Indicates whether project is a template or not.
    PaymentCardInformation:
      type: object
      properties:
        cardHolder:
          type: string
        last4digits:
          type: integer
          format: int64
        month:
          type: string
          enum:
            - JANUARY
            - FEBRUARY
            - MARCH
            - APRIL
            - MAY
            - JUNE
            - JULY
            - AUGUST
            - SEPTEMBER
            - OCTOBER
            - NOVEMBER
            - DECEMBER
        paymentMethodId:
          type: string
        year:
          type: object
          properties:
            leap:
              type: boolean
            value:
              type: integer
              format: int32
    PaymentConfigurationRequest:
      required:
        - country
        - currency
        - operation
        - source
      type: object
      properties:
        country:
          type: string
        currency:
          type: string
        operation:
          type: string
        source:
          type: string
    PaymentMethodAddressRequest:
      type: object
      properties:
        invoiceCountry:
          type: string
          writeOnly: true
        invoiceState:
          type: string
          writeOnly: true
        paymentAddress:
          type: string
          writeOnly: true
        paymentCity:
          type: string
          writeOnly: true
        paymentZip:
          type: string
          writeOnly: true
        pmAddress:
          type: string
        pmCity:
          type: string
        pmCountry:
          type: string
        pmState:
          type: string
        pmZip:
          type: string
    PaymentRequest:
      type: object
      properties:
        cardHolder:
          type: string
          writeOnly: true
        last4:
          type: integer
          format: int64
          writeOnly: true
        month:
          type: integer
          format: int32
          writeOnly: true
        paymentCardInformation:
          $ref: '#/components/schemas/PaymentCardInformation'
        paymentMethodId:
          type: string
          writeOnly: true
        type:
          type: string
          enum:
            - PREMIUM
            - PREMIUM_YEAR
            - SPECIAL
            - SPECIAL_YEAR
            - TRIAL
            - ENTERPRISE
            - ENTERPRISE_YEAR
            - BASIC_2021
            - BASIC_YEAR_2021
            - STANDARD_2021
            - STANDARD_YEAR_2021
            - PRO_2021
            - PRO_YEAR_2021
            - ENTERPRISE_2021
            - ENTERPRISE_YEAR_2021
            - BUNDLE_2024
            - BUNDLE_YEAR_2024
            - SELF_HOSTED
            - FREE
        year:
          type: integer
          format: int32
          writeOnly: true
    PenalizeTimeEntryRequest:
      required:
        - penalty
      type: object
      properties:
        penalty:
          minimum: 0
          type: integer
          format: int64
        penaltyTimePoint:
          type: string
        penaltyType:
          type: string
          enum:
            - START
            - END
            - DELETE
            - SPLIT
    PendingChangeEmailRequestDto:
      type: object
      properties:
        email:
          type: string
        hasActivePendingRequest:
          type: boolean
    Period:
      type: object
      properties:
        end:
          type: string
          format: date-time
        start:
          type: string
          format: date-time
    PeriodRequest:
      type: object
      properties:
        end:
          type: string
          writeOnly: true
        endAsInstant:
          type: string
          format: date-time
        start:
          type: string
          writeOnly: true
        startAsInstant:
          type: string
          format: date-time
    PeriodV1Request:
      type: object
      properties:
        days:
          maximum: 999
          minimum: 1
          type: integer
          description: Provide number of days.
          format: int32
          example: 3
        end:
          type: string
          description: Provide end date in YYYY-MM-DD format.
          example: "2021-12-25"
        start:
          type: string
          description: Provide start date in YYYY-MM-DD format.
          example: "2021-12-23"
      description: Represents period of time off request including start and end date.
    PickerOptions:
      type: object
    PinCode:
      type: object
      properties:
        code:
          type: string
    PinCodeDto:
      type: object
      properties:
        code:
          type: string
    PinSettingDto:
      type: object
      properties:
        code:
          type: string
        required:
          type: boolean
    PinSettingRequest:
      required:
        - code
      type: object
      properties:
        code:
          type: string
        required:
          type: boolean
    PolicyAssignmentFullDto:
      type: object
      properties:
        balance:
          type: number
          format: double
        id:
          type: string
        policy:
          $ref: '#/components/schemas/PolicyDto'
        policyId:
          type: string
        status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
        used:
          type: number
          format: double
        userId:
          type: string
        workspaceId:
          type: string
    PolicyDto:
      type: object
      description: PolicyDto
      oneOf:
        - $ref: '#/components/schemas/PolicyFullDto'
        - $ref: '#/components/schemas/PolicyRedactedDto'
      properties:
        allowHalfDay:
          type: boolean
        allowNegativeBalance:
          type: boolean
        color:
          type: string
        id:
          type: string
        name:
          type: string
        negativeBalance:
          $ref: '#/components/schemas/NegativeBalanceDto'
        timeUnit:
          type: string
          enum:
            - DAYS
            - HOURS
        workspaceId:
          type: string
    PolicyDtoV1:
      type: object
      properties:
        allowHalfDay:
          type: boolean
          description: Indicates whether the half day is allowed.
          example: false
        allowNegativeBalance:
          type: boolean
          description: Indicates whether the negative balance is allowed.
          example: true
        approve:
          $ref: '#/components/schemas/ApproveDto'
        archived:
          type: boolean
          description: Indicates whether the policy is archived.
          example: true
        automaticAccrual:
          $ref: '#/components/schemas/AutomaticAccrualDto'
        automaticTimeEntryCreation:
          $ref: '#/components/schemas/AutomaticTimeEntryCreationDto'
        everyoneIncludingNew:
          type: boolean
          description: Indicates whether the policy is applied to future new users.
          example: false
        id:
          type: string
          description: Represents policy identifier across the system.
          example: 5b715612b079875110791111
        name:
          type: string
          description: Represents the name of the policy.
          example: Days
        negativeBalance:
          $ref: '#/components/schemas/NegativeBalanceDto'
        projectId:
          type: string
          description: Represents project identifier across the system.
        timeUnit:
          type: string
          description: Represents the time unit of the policy.
          example: DAYS
          enum:
            - DAYS
            - HOURS
        userGroupIds:
          uniqueItems: true
          type: array
          description: Represents user groups' identifiers across the system. Indicates which user groups are included in the policy.
          example:
            - 5b715612b079875110791342
            - 5b715612b079875110791324
            - 5b715612b079875110793142
          items:
            type: string
            description: Represents user groups' identifiers across the system. Indicates which user groups are included in the policy.
            example: '["5b715612b079875110791342","5b715612b079875110791324","5b715612b079875110793142"]'
        userIds:
          uniqueItems: true
          type: array
          description: Represents users' identifiers across the system. Indicates which users are included in the policy.
          example:
            - 5b715612b079875110791432
            - 5b715612b079875110791234
          items:
            type: string
            description: Represents users' identifiers across the system. Indicates which users are included in the policy.
            example: '["5b715612b079875110791432","5b715612b079875110791234"]'
        workspaceId:
          type: string
          description: Represents workspace identifier across the system.
          example: 5b715612b079875110792222
    PolicyFullDto:
      type: object
      properties:
        allowHalfDay:
          type: boolean
        allowNegativeBalance:
          type: boolean
        approve:
          $ref: '#/components/schemas/ApproveDto'
        archived:
          type: boolean
        automaticAccrual:
          $ref: '#/components/schemas/AutomaticAccrualDto'
        automaticTimeEntryCreation:
          $ref: '#/components/schemas/AutomaticTimeEntryCreationDto'
        color:
          type: string
        everyoneIncludingNew:
          type: boolean
        id:
          type: string
        name:
          type: string
        negativeBalance:
          $ref: '#/components/schemas/NegativeBalanceDto'
        timeUnit:
          type: string
          enum:
            - DAYS
            - HOURS
        userGroupIds:
          uniqueItems: true
          type: array
          items:
            type: string
        userIds:
          uniqueItems: true
          type: array
          items:
            type: string
        workspaceId:
          type: string
    PolicyProjection:
      type: object
      properties:
        color:
          type: string
        name:
          type: string
    PolicyRedactedDto:
      type: object
      properties:
        allowHalfDay:
          type: boolean
        allowNegativeBalance:
          type: boolean
        color:
          type: string
        id:
          type: string
        name:
          type: string
        negativeBalance:
          $ref: '#/components/schemas/NegativeBalanceDto'
        timeUnit:
          type: string
          enum:
            - DAYS
            - HOURS
        workspaceId:
          type: string
    ProductExchangeTokenDto:
      type: object
      properties:
        token:
          type: string
    ProjectDto:
      type: object
      properties:
        color:
          type: string
        duration:
          type: object
          properties:
            nano:
              type: integer
              format: int32
            negative:
              type: boolean
            positive:
              type: boolean
            seconds:
              type: integer
              format: int64
            units:
              type: array
              items:
                type: object
                properties:
                  dateBased:
                    type: boolean
                  durationEstimated:
                    type: boolean
                  timeBased:
                    type: boolean
            zero:
              type: boolean
        id:
          type: string
        memberships:
          type: array
          items:
            $ref: '#/components/schemas/MembershipDto'
        name:
          type: string
        note:
          type: string
        public:
          type: boolean
        workspaceId:
          type: string
    ProjectDtoImpl:
      type: object
      properties:
        archived:
          type: boolean
        billable:
          type: boolean
        budgetEstimate:
          $ref: '#/components/schemas/EstimateWithOptionsDto'
        clientId:
          type: string
        clientName:
          type: string
        color:
          type: string
        costRate:
          $ref: '#/components/schemas/RateDto'
        currency:
          $ref: '#/components/schemas/CurrencyDto'
        duration:
          type: object
          properties:
            nano:
              type: integer
              format: int32
            negative:
              type: boolean
            positive:
              type: boolean
            seconds:
              type: integer
              format: int64
            units:
              type: array
              items:
                type: object
                properties:
                  dateBased:
                    type: boolean
                  duration:
                    type: object
                    properties:
                      nano:
                        type: integer
                        format: int32
                      negative:
                        type: boolean
                      positive:
                        type: boolean
                      seconds:
                        type: integer
                        format: int64
                      zero:
                        type: boolean
                  durationEstimated:
                    type: boolean
                  timeBased:
                    type: boolean
            zero:
              type: boolean
        estimate:
          $ref: '#/components/schemas/EstimateDto'
        estimateReset:
          $ref: '#/components/schemas/EstimateResetDto'
        hourlyRate:
          $ref: '#/components/schemas/RateDto'
        id:
          type: string
        isPublic:
          type: boolean
          writeOnly: true
        isTemplate:
          type: boolean
          writeOnly: true
        memberships:
          type: array
          items:
            $ref: '#/components/schemas/MembershipDto'
        name:
          type: string
        note:
          type: string
        public:
          type: boolean
        template:
          type: boolean
        timeEstimate:
          $ref: '#/components/schemas/TimeEstimateDto'
        workspaceId:
          type: string
    ProjectDtoImplV1:
      type: object
      properties:
        archived:
          type: boolean
          description: Indicates whether project is archived or not.
        billable:
          type: boolean
          description: Indicates whether project is billable or not.
        budgetEstimate:
          $ref: '#/components/schemas/EstimateWithOptionsDto'
        clientId:
          type: string
          description: Represents client identifier across the system.
          example: 9t641568b07987035750704
        clientName:
          type: string
          description: Represents client name.
          example: Client X
        color:
          type: string
          description: 'Color format ^#(?:[0-9a-fA-F]{6}){1}$. Explanation: A valid color code should start with ''#'' and consist of six hexadecimal characters, representing a color in hexadecimal format. Color value is in standard RGB hexadecimal format.'
          example: '#000000'
        costRate:
          $ref: '#/components/schemas/RateDtoV1'
        duration:
          type: string
          description: Represents project duration in milliseconds.
          example: "60000"
        estimate:
          $ref: '#/components/schemas/EstimateDtoV1'
        estimateReset:
          $ref: '#/components/schemas/EstimateResetDto'
        hourlyRate:
          $ref: '#/components/schemas/RateDtoV1'
        id:
          type: string
          description: Represents project identifier across the system.
          example: 5b641568b07987035750505e
        isPublic:
          type: boolean
          writeOnly: true
        isTemplate:
          type: boolean
          writeOnly: true
        memberships:
          type: array
          description: Represents a list of membership objects.
          items:
            $ref: '#/components/schemas/MembershipDtoV1'
        name:
          type: string
          description: Represents a project name.
          example: Software Development
        note:
          type: string
          description: Represents project note.
          example: This is a sample note for the project.
        public:
          type: boolean
          description: Indicates whether project is public or not.
        template:
          type: boolean
        timeEstimate:
          $ref: '#/components/schemas/TimeEstimateDto'
        workspaceId:
          type: string
          description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
    ProjectDtoV1:
      type: object
      properties:
        color:
          type: string
          description: 'Color format ^#(?:[0-9a-fA-F]{6}){1}$. Explanation: A valid color code should start with ''#'' and consist of six hexadecimal characters, representing a color in hexadecimal format. Color value is in standard RGB hexadecimal format.'
          example: '#000000'
        duration:
          type: string
          description: Represents project duration in milliseconds.
          example: "60000"
        id:
          type: string
          description: Represents project identifier across the system.
          example: 5b641568b07987035750505e
        memberships:
          type: array
          description: Represents a list of membership objects.
          items:
            $ref: '#/components/schemas/MembershipDtoV1'
        name:
          type: string
          description: Represents a project name.
          example: Software Development
        note:
          type: string
          description: Represents project note.
          example: This is a sample note for the project.
        public:
          type: boolean
          description: Indicates whether project is public or not.
        workspaceId:
          type: string
          description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
    ProjectEstimateRequest:
      type: object
      properties:
        budgetEstimate:
          $ref: '#/components/schemas/EstimateWithOptionsRequest'
        estimateReset:
          $ref: '#/components/schemas/EstimateResetRequest'
        timeEstimate:
          $ref: '#/components/schemas/TimeEstimateRequest'
    ProjectFavoritesDto:
      type: object
      properties:
        id:
          type: string
        projectId:
          type: string
    ProjectFilterRequest:
      required:
        - search
        - sortColumn
        - sortOrder
      type: object
      properties:
        archived:
          type: boolean
        billable:
          type: boolean
        clientIds:
          uniqueItems: true
          type: array
          items:
            type: string
        page:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        search:
          type: string
        sortColumn:
          type: string
        sortOrder:
          type: string
        userFilterIds:
          uniqueItems: true
          type: array
          items:
            type: string
    ProjectFilteredAndCountDto:
      type: object
      properties:
        count:
          type: integer
          format: int32
        project:
          type: array
          items:
            $ref: '#/components/schemas/ProjectDtoImpl'
    ProjectFullDto:
      type: object
      properties:
        archived:
          type: boolean
        billable:
          type: boolean
        billableDuration:
          type: object
          properties:
            nano:
              type: integer
              format: int32
            negative:
              type: boolean
            positive:
              type: boolean
            seconds:
              type: integer
              format: int64
            units:
              type: array
              items:
                type: object
                properties:
                  dateBased:
                    type: boolean
                  duration:
                    type: object
                    properties:
                      nano:
                        type: integer
                        format: int32
                      negative:
                        type: boolean
                      positive:
                        type: boolean
                      seconds:
                        type: integer
                        format: int64
                      zero:
                        type: boolean
                  durationEstimated:
                    type: boolean
                  timeBased:
                    type: boolean
            zero:
              type: boolean
        billableTime:
          type: number
          format: double
        budget:
          type: number
          format: double
        budgetEstimate:
          $ref: '#/components/schemas/EstimateWithOptionsDto'
        client:
          $ref: '#/components/schemas/ClientDto'
        clientId:
          type: string
        color:
          type: string
        costRate:
          $ref: '#/components/schemas/RateDto'
        currency:
          $ref: '#/components/schemas/CurrencyDto'
        duration:
          type: object
          properties:
            nano:
              type: integer
              format: int32
            negative:
              type: boolean
            positive:
              type: boolean
            seconds:
              type: integer
              format: int64
            units:
              type: array
              items:
                type: object
                properties:
                  dateBased:
                    type: boolean
                  duration:
                    type: object
                    properties:
                      nano:
                        type: integer
                        format: int32
                      negative:
                        type: boolean
                      positive:
                        type: boolean
                      seconds:
                        type: integer
                        format: int64
                      zero:
                        type: boolean
                  durationEstimated:
                    type: boolean
                  timeBased:
                    type: boolean
            zero:
              type: boolean
        entriesProgress:
          type: number
          format: double
        estimate:
          $ref: '#/components/schemas/EstimateDto'
        estimateReset:
          $ref: '#/components/schemas/EstimateResetDto'
        estimateResetDto:
          $ref: '#/components/schemas/EstimateResetDto'
        expenseBillableAmount:
          type: number
          format: double
        expenseNonBillableAmount:
          type: number
          format: double
        expensesProgress:
          type: number
          format: double
        favorite:
          type: boolean
        hourlyRate:
          $ref: '#/components/schemas/RateDto'
        id:
          type: string
        isFavorite:
          type: boolean
          writeOnly: true
        isPublic:
          type: boolean
          writeOnly: true
        isTemplate:
          type: boolean
          writeOnly: true
        memberships:
          type: array
          items:
            $ref: '#/components/schemas/MembershipDto'
        name:
          type: string
        nonBillableDuration:
          type: object
          properties:
            nano:
              type: integer
              format: int32
            negative:
              type: boolean
            positive:
              type: boolean
            seconds:
              type: integer
              format: int64
            units:
              type: array
              items:
                type: object
                properties:
                  dateBased:
                    type: boolean
                  duration:
                    type: object
                    properties:
                      nano:
                        type: integer
                        format: int32
                      negative:
                        type: boolean
                      positive:
                        type: boolean
                      seconds:
                        type: integer
                        format: int64
                      zero:
                        type: boolean
                  durationEstimated:
                    type: boolean
                  timeBased:
                    type: boolean
            zero:
              type: boolean
        note:
          type: string
        permissions:
          $ref: '#/components/schemas/ProjectFullDto'
        progress:
          type: number
          format: double
        public:
          type: boolean
        taskCount:
          type: integer
          format: int32
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/TaskDto'
        template:
          type: boolean
        timeEstimate:
          $ref: '#/components/schemas/TimeEstimateDto'
        workspaceId:
          type: string
    ProjectId:
      type: object
      properties:
        dateOfCreationFromObjectId:
          type: string
          format: date-time
    ProjectIdsRequest:
      type: object
      properties:
        excludedIds:
          type: array
          items:
            type: string
        ids:
          type: array
          items:
            type: string
        searchValue:
          type: string
    ProjectInfoDto:
      type: object
      properties:
        clientId:
          type: string
          description: Represents client identifier across the system.
          example: 64c777ddd3fcab07cfbb210c
        clientName:
          type: string
          description: Represents client name.
          example: Client X
        color:
          type: string
          description: 'Color format ^#(?:[0-9a-fA-F]{6}){1}$. Explanation: A valid color code should start with ''#'' and consist of six hexadecimal characters, representing a color in hexadecimal format. Color value is in standard RGB hexadecimal format.'
          example: '#000000'
        id:
          type: string
          description: Represents project identifier across the system.
          example: 5b641568b07987035750505e
        name:
          type: string
          description: Represents a project name.
          example: Software Development
    ProjectPatchRequest:
      type: object
      properties:
        archived:
          type: boolean
        billable:
          type: boolean
        clientId:
          type: string
        color:
          pattern: ^#(?:[0-9a-fA-F]{6}){1}$
          type: string
        isPublic:
          type: boolean
        name:
          type: string
        note:
          type: string
    ProjectReportFilterRequest:
      type: object
      properties:
        archived:
          type: string
        clients:
          $ref: '#/components/schemas/ContainsArchivedFilterRequest'
        excludedIds:
          uniqueItems: true
          type: array
          items:
            type: string
        filterOptions:
          $ref: '#/components/schemas/ReportFilterOptions'
        ignoreResultGrouping:
          type: boolean
        includedIds:
          uniqueItems: true
          type: array
          items:
            type: string
        name:
          type: string
        options:
          $ref: '#/components/schemas/ReportFilterOptions'
        page:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        status:
          type: string
          writeOnly: true
    ProjectRequest:
      required:
        - name
      type: object
      properties:
        billable:
          type: boolean
          description: Indicates whether project is billable or not.
        clientId:
          type: string
          description: Represents client identifier across the system.
          example: 9t641568b07987035750704
        color:
          pattern: ^#(?:[0-9a-fA-F]{6}){1}$
          type: string
          description: 'Color format ^#(?:[0-9a-fA-F]{6}){1}$. Explanation: A valid color code should start with ''#'' and consist of six hexadecimal characters, representing a color in hexadecimal format. Color value is in standard RGB hexadecimal format.'
          example: '#000000'
        costRate:
          $ref: '#/components/schemas/CostRateRequestV1'
        estimate:
          $ref: '#/components/schemas/EstimateRequest'
        hourlyRate:
          $ref: '#/components/schemas/HourlyRateRequestV1'
        isPublic:
          type: boolean
          description: Indicates whether project is public or not.
        memberships:
          type: array
          description: Represents a list of membership request objects.
          items:
            $ref: '#/components/schemas/MembershipRequest'
        name:
          maxLength: 250
          minLength: 2
          type: string
          description: Represents a project name.
          example: Software Development
        note:
          maxLength: 16384
          type: string
          description: Represents project note.
          example: This is a sample note for the project.
        tasks:
          type: array
          description: Represents a list of task request objects.
          items:
            $ref: '#/components/schemas/TaskRequest'
    ProjectStatus:
      type: object
      properties:
        billable:
          type: object
          properties:
            nano:
              type: integer
              format: int32
            negative:
              type: boolean
            positive:
              type: boolean
            seconds:
              type: integer
              format: int64
            units:
              type: array
              items:
                type: object
                properties:
                  dateBased:
                    type: boolean
                  duration:
                    type: object
                    properties:
                      nano:
                        type: integer
                        format: int32
                      negative:
                        type: boolean
                      positive:
                        type: boolean
                      seconds:
                        type: integer
                        format: int64
                      zero:
                        type: boolean
                  durationEstimated:
                    type: boolean
                  timeBased:
                    type: boolean
            zero:
              type: boolean
        billableExpenses:
          type: number
          format: double
        nonBillable:
          type: object
          properties:
            nano:
              type: integer
              format: int32
            negative:
              type: boolean
            positive:
              type: boolean
            seconds:
              type: integer
              format: int64
            units:
              type: array
              items:
                type: object
                properties:
                  dateBased:
                    type: boolean
                  duration:
                    type: object
                    properties:
                      nano:
                        type: integer
                        format: int32
                      negative:
                        type: boolean
                      positive:
                        type: boolean
                      seconds:
                        type: integer
                        format: int64
                      zero:
                        type: boolean
                  durationEstimated:
                    type: boolean
                  timeBased:
                    type: boolean
            zero:
              type: boolean
        nonBillableExpenses:
          type: number
          format: double
        progress:
          type: number
          format: double
        taskStatus:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/DurationAndAmount'
        totalAmount:
          type: number
          format: double
        totalExpensesAmount:
          type: number
          format: double
    ProjectSummaryDto:
      type: object
      properties:
        color:
          type: string
        id:
          type: string
        name:
          type: string
    ProjectTaskRequest:
      required:
        - projectName
        - taskName
      type: object
      properties:
        projectName:
          type: string
        taskName:
          type: string
    ProjectTaskTupleDto:
      type: object
      properties:
        projectId:
          type: string
        taskId:
          type: string
    ProjectTaskTupleFullDto:
      type: object
      properties:
        project:
          $ref: '#/components/schemas/ProjectDtoImpl'
        projectId:
          $ref: '#/components/schemas/ProjectDtoImpl'
        task:
          $ref: '#/components/schemas/TaskDtoImpl'
        taskId:
          $ref: '#/components/schemas/TaskDtoImpl'
        type:
          type: string
    ProjectTaskTupleRequest:
      required:
        - projectId
      type: object
      properties:
        projectId:
          type: string
        taskId:
          type: string
        type:
          type: string
    ProjectTotalsRequest:
      type: object
      properties:
        end:
          type: string
          format: date-time
        page:
          type: integer
          format: int32
        pageSize:
          maximum: 200
          type: integer
          format: int32
        search:
          type: string
        start:
          type: string
          format: date-time
        statusFilter:
          type: string
          enum:
            - PUBLISHED
            - UNPUBLISHED
            - ALL
    ProjectTotalsRequestV1:
      required:
        - end
        - start
      type: object
      properties:
        end:
          type: string
          description: Represents end date in yyyy-MM-ddThh:mm:ssZ format.
          format: date-time
          example: "2021-01-01T00:00:00Z"
        page:
          type: integer
          description: Page number.
          format: int32
          example: 1
        pageSize:
          maximum: 200
          type: integer
          description: Page size.
          format: int32
          example: 50
        search:
          type: string
          description: Represents term for searching projects and clients by name.
          example: Project name
        start:
          type: string
          description: Represents start date in yyyy-MM-ddThh:mm:ssZ format.
          format: date-time
          example: "2020-01-01T00:00:00Z"
        statusFilter:
          type: string
          description: Filters assignments by status.
          example: PUBLISHED
          enum:
            - PUBLISHED
            - UNPUBLISHED
            - ALL
    ProjectsByClientDto:
      type: object
      properties:
        client:
          $ref: '#/components/schemas/ClientDto'
        projects:
          type: array
          items:
            $ref: '#/components/schemas/ProjectFullDto'
        projectsCount:
          type: integer
          format: int32
    PtoRequestPeriodDto:
      type: object
      properties:
        halfDay:
          type: boolean
        halfDayHours:
          $ref: '#/components/schemas/Period'
        halfDayPeriod:
          type: string
        period:
          $ref: '#/components/schemas/Period'
    PtoTeamMemberDto:
      type: object
      properties:
        email:
          type: string
        id:
          type: string
        name:
          type: string
    PtoTeamMembersAndCountDto:
      type: object
      properties:
        count:
          type: integer
          format: int64
        members:
          type: array
          items:
            $ref: '#/components/schemas/PtoTeamMemberDto'
    PublishAssignmentsRequest:
      type: object
      properties:
        end:
          type: string
        notifyUsers:
          type: boolean
        search:
          type: string
        start:
          type: string
        userFilter:
          $ref: '#/components/schemas/ContainsUsersFilterRequest'
        userGroupFilter:
          $ref: '#/components/schemas/ContainsUserGroupFilterRequest'
        viewType:
          type: string
          enum:
            - PROJECTS
            - TEAM
            - ALL
    PublishAssignmentsRequestV1:
      required:
        - end
        - start
      type: object
      properties:
        end:
          type: string
          description: Represents end date in yyyy-MM-ddThh:mm:ssZ format.
          example: "2021-01-01T00:00:00Z"
        notifyUsers:
          type: boolean
          description: Indicates whether to notify users when assignment is published.
        search:
          type: string
          description: Represents a search string.
          example: search keyword
        start:
          type: string
          description: Represents start date in yyyy-MM-ddThh:mm:ssZ format.
          example: "2020-01-01T00:00:00Z"
        userFilter:
          $ref: '#/components/schemas/ContainsUsersFilterRequestV1'
        userGroupFilter:
          $ref: '#/components/schemas/ContainsUserGroupFilterRequestV1'
        viewType:
          type: string
          description: Represents view type.
          example: PROJECTS
          enum:
            - PROJECTS
            - TEAM
            - ALL
    PumbleConnectedDto:
      type: object
      properties:
        connected:
          type: boolean
        isConnected:
          type: boolean
          writeOnly: true
        pumbleWorkspaceId:
          type: string
        pumbleWorkspaceName:
          type: string
    PumbleInitialConnectionDto:
      type: object
      properties:
        skippedUsers:
          type: integer
          format: int32
    PumbleIntegrationRequest:
      type: object
      properties:
        pumbleWorkspaceId:
          type: string
    PumbleIntegrationSettingsDto:
      type: object
      properties:
        showChatWidget:
          type: boolean
    RateDto:
      type: object
      properties:
        amount:
          type: integer
          description: Represents an amount as integer.
          format: int32
          example: 10500
        currency:
          type: string
          description: Represents a currency.
          example: USD
    RateDtoV1:
      type: object
      properties:
        amount:
          type: integer
          description: Represents an amount as integer.
          format: int32
          example: 10500
        currency:
          type: string
          description: Represents a currency.
          example: USD
      description: Represents a cost rate object.
    RateWithCurrencyRequestV1:
      required:
        - amount
        - currency
      type: object
      properties:
        amount:
          minimum: 0
          type: integer
          description: Represents an amount as integer.
          format: int32
          example: 2000
        currency:
          maxLength: 100
          minLength: 1
          type: string
          description: Represents a currency.
          example: USD
          default: USD
        since:
          type: string
          description: Represents a date and time in yyyy-MM-ddThh:mm:ssZ format.
          example: "2020-01-01T00:00:00Z"
    ReadNewsRequest:
      required:
        - newsIds
      type: object
      properties:
        newsIds:
          uniqueItems: true
          type: array
          items:
            type: string
    RecurringAssignmentDto:
      type: object
      properties:
        repeat:
          type: boolean
          description: Indicates whether assignment is recurring or not.
        seriesId:
          type: string
          description: Represents series identifier.
          example: 64c777ddd3fcab07cfbb210c
        weeks:
          type: integer
          description: Represents number of weeks for thhis assignment.
          format: int32
          example: 5
    RecurringAssignmentRequest:
      type: object
      properties:
        repeat:
          type: boolean
          description: Indicates whether assignment is recurring or not.
        weeks:
          maximum: 99
          minimum: 1
          type: integer
          description: Indicates number of weeks for assignment.
          format: int32
          example: 5
    RecurringAssignmentRequestV1:
      required:
        - weeks
      type: object
      properties:
        repeat:
          type: boolean
          description: Indicates whether assignment is recurring or not.
        weeks:
          maximum: 99
          minimum: 1
          type: integer
          description: Indicates number of weeks for assignment.
          format: int32
          example: 5
    RefreshTokenRequest:
      required:
        - refreshToken
      type: object
      properties:
        refreshToken:
          type: string
        userId:
          type: string
    RegionDto:
      type: object
      properties:
        currentlyActive:
          type: boolean
        name:
          type: string
        region:
          type: string
          writeOnly: true
        url:
          type: string
    RejectTimeOffRequestRequest:
      required:
        - rejectionNote
      type: object
      properties:
        rejectionNote:
          type: string
    RemindToApproveRequest:
      type: object
      properties:
        userFilter:
          $ref: '#/components/schemas/ContainsUsersFilterRequest'
        userGroupFilter:
          $ref: '#/components/schemas/ContainsUserGroupFilterRequest'
    RemindToSubmitAndTrackRequest:
      type: object
      properties:
        end:
          type: string
        remindToTrack:
          type: boolean
        start:
          type: string
        userFilter:
          $ref: '#/components/schemas/ContainsUsersFilterRequest'
        userGroupFilter:
          $ref: '#/components/schemas/ContainsUserGroupFilterRequest'
    ReminderDto:
      type: object
      properties:
        dateRange:
          type: string
          enum:
            - DAY
            - WEEK
            - MONTH
        days:
          type: array
          items:
            type: integer
            format: int32
        hours:
          type: number
          format: double
        id:
          type: string
        less:
          type: boolean
        receivers:
          uniqueItems: true
          type: array
          items:
            type: string
        users:
          type: array
          items:
            type: string
        workspaceId:
          type: string
    ReorderFavoriteEntriesRequest:
      type: object
      properties:
        ids:
          type: array
          items:
            type: string
    ReorderInvoiceItemRequest:
      required:
        - currentPosition
        - newPosition
      type: object
      properties:
        currentPosition:
          minimum: 1
          type: integer
          format: int32
        newPosition:
          minimum: 1
          type: integer
          format: int32
    ReportFilterOptions:
      type: object
      properties:
        scope:
          type: string
    ReportFilterUsersWithCountDto:
      type: object
      properties:
        count:
          type: integer
          format: int32
        idNamePairs:
          type: array
          items:
            $ref: '#/components/schemas/IdNamePairDto'
    ResendUnlockAccountEmailForKiosk:
      required:
        - email
      type: object
      properties:
        email:
          type: string
    RoleDetailsDtoV1:
      type: object
      properties:
        role:
          $ref: '#/components/schemas/RoleDtoV1'
        userId:
          type: string
          description: Represents workspace identifier across the system.
          example: 5a0ab5acb07987125438b60f
        workspaceId:
          type: string
          description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
    RoleDtoV1:
      type: object
      properties:
        id:
          type: string
          description: Represents role identifier across the system.
          example: 60f91b3ffdaf031696ec61a8
        name:
          type: string
          description: Represents a role name.
          example: Administrator
        source:
          $ref: '#/components/schemas/AuthorizationSourceDtoV1'
      description: Represents a role data transfer object.
    RoleEntityDto:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        source:
          $ref: '#/components/schemas/AuthorizationSourceDto'
    RoleInfoDto:
      type: object
      properties:
        entities:
          type: array
          items:
            $ref: '#/components/schemas/RoleEntityDto'
        formatterRoleName:
          type: string
        role:
          type: string
    RoleNameDto:
      type: object
      properties:
        role:
          type: string
    RoleRequestV1:
      required:
        - entityId
        - role
        - sourceType
      type: object
      properties:
        entityId:
          type: string
          description: Represents entity identifier across the system.
          example: 60f924bafdaf031696ec6218
        role:
          type: string
          description: Represents valid role.
          example: WORKSPACE_ADMIN
          enum:
            - WORKSPACE_ADMIN
            - TEAM_MANAGER
            - PROJECT_MANAGER
        sourceType:
          type: string
          description: |-
            Represents the source type of this request.
            This helps the API to determine on where to select this 'entity', and applies a corresponding
            action base on the endpoint.
            The entityId should be relative to this source, and can be used whenever the endpoint needs to
            access a certain resource. e.g. User group (USER_GROUP)
          example: USER_GROUP
          enum:
            - USER_GROUP
    RoundDto:
      type: object
      properties:
        minutes:
          type: string
          example: "15"
        round:
          type: string
          example: Round to nearest
    SAML2ConfigurationDto:
      type: object
      properties:
        assertionConsumerServiceUrl:
          type: string
        certificates:
          type: array
          items:
            type: string
        enabled:
          type: boolean
        forceSAML2:
          type: boolean
        loginUrl:
          type: string
        logoutUrl:
          type: string
        metadataUrl:
          type: string
        relyingPartyIdentifier:
          type: string
    SAML2ConfigurationRequest:
      required:
        - assertionConsumerServiceUrl
        - loginUrl
        - metadataUrl
        - relyingPartyIdentifier
      type: object
      properties:
        assertionConsumerServiceUrl:
          type: string
        certificates:
          type: array
          items:
            type: string
        enabled:
          type: boolean
        forceSAML2:
          type: boolean
        loginUrl:
          type: string
        logoutUrl:
          type: string
        metadataUrl:
          type: string
        relyingPartyIdentifier:
          type: string
    SAML2LoginSettingsDto:
      type: object
      properties:
        active:
          type: boolean
        forceSAML2:
          type: boolean
        loginUrl:
          type: string
        logoutUrl:
          type: string
        samlRequest:
          type: string
    SEOEventsTrackingRequest:
      type: object
      properties:
        analyticsUserId:
          type: string
        pageUrl:
          type: string
    SMTPConfigurationDto:
      type: object
      properties:
        debugEnabled:
          type: boolean
        emailAddress:
          type: string
        enabled:
          type: boolean
        fromName:
          type: string
        host:
          type: string
        password:
          type: string
        port:
          type: integer
          format: int32
        startTlsEnabled:
          type: boolean
        username:
          type: string
    SalesPanelUserDto:
      type: object
      properties:
        email:
          type: string
        type:
          type: string
          enum:
            - REGULAR
            - LIMITED
    SalesPanelWorkspaceUsersDto:
      type: object
      properties:
        domainName:
          type: string
        users:
          type: array
          items:
            $ref: '#/components/schemas/SalesPanelUserDto'
        workspaceId:
          type: string
    SchedulingExcludeDay:
      type: object
      properties:
        date:
          type: string
          description: Represents a datetimr in yyyy-MM-ddThh:mm:ssZ format.
          format: date-time
          example: "2020-01-01T08:00:00Z"
        type:
          type: string
          description: Represents the scheduling exclude day enum.
          example: WEEKEND
          enum:
            - WEEKEND
            - HOLIDAY
            - TIME_OFF
    SchedulingProjectsBaseDto:
      type: object
    SchedulingProjectsDto:
      type: object
      properties:
        assignments:
          type: array
          items:
            type: object
        clientName:
          type: string
        hasProjectAccess:
          type: boolean
        projectArchived:
          type: boolean
        projectBillable:
          type: boolean
        projectColor:
          type: string
        projectId:
          type: string
        projectName:
          type: string
        totalHours:
          type: number
          format: double
        userId:
          type: string
        workspaceId:
          type: string
    SchedulingProjectsTotalsDtoV1:
      type: object
      properties:
        assignments:
          type: array
          description: Represents a list of assignment per day objects.
          items:
            $ref: '#/components/schemas/AssignmentPerDayDto'
        clientName:
          type: string
          description: Represents project name.
          example: Software Development
        milestones:
          type: array
          description: Represents a list of milestone objects.
          items:
            $ref: '#/components/schemas/MilestoneDto'
        projectArchived:
          type: boolean
          description: Indicates whether project is archived or not.
        projectBillable:
          type: boolean
          description: Indicates whether project is billable or not.
        projectColor:
          type: string
          description: 'Color format ^#(?:[0-9a-fA-F]{6}){1}$. Explanation: A valid color code should start with ''#'' and consist of six hexadecimal characters, representing a color in hexadecimal format. Color value is in standard RGB hexadecimal format.'
          example: '#000000'
        projectId:
          type: string
          description: Represents project identifier across the system.
          example: 56b687e29ae1f428e7ebe504
        projectName:
          type: string
          description: Represents project name.
          example: Software Development
        totalHours:
          type: number
          description: Represents project total hours as double.
          format: double
          example: 490.5
        workspaceId:
          type: string
          description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
    SchedulingProjectsTotalsWithoutBillableDto:
      type: object
      properties:
        assignments:
          type: array
          items:
            $ref: '#/components/schemas/AssignmentPerDayDto'
        clientName:
          type: string
        milestones:
          type: array
          items:
            $ref: '#/components/schemas/MilestoneDto'
        projectArchived:
          type: boolean
        projectBillable:
          type: boolean
        projectColor:
          type: string
        projectId:
          type: string
        projectName:
          type: string
        totalHours:
          type: number
          format: double
        workspaceId:
          type: string
    SchedulingSettingsDto:
      type: object
      properties:
        canSeeBillableAndCostAmount:
          type: boolean
        enabled:
          type: boolean
        everyoneCanSeeAllAssignments:
          type: boolean
        whoCanCreateAssignments:
          type: string
          enum:
            - ADMINS
            - ADMINS_AND_PROJECT_MANAGERS
            - ANYONE
    SchedulingUsersBaseDto:
      type: object
    SchedulingUsersTotalsDtoV1:
      type: object
      properties:
        capacityPerDay:
          type: number
          description: Represents capacity per day in seconds. For a 7hr work day, value is 25200.
          format: double
          example: 25200
        totalHoursPerDay:
          type: array
          description: Represents total hours per day object.
          items:
            $ref: '#/components/schemas/TotalsPerDayDto'
        userId:
          type: string
          description: Represents user identifier across the system.
          example: 72k687e29ae1f428e7ebe109
        userImage:
          type: string
          description: Represents url path to user image.
        userName:
          type: string
          description: Represents user name.
          example: John Doe
        userStatus:
          type: string
          description: Represents user status.
          example: ACTIVE
        workingDays:
          $ref: '#/components/schemas/DayOfWeek'
        workspaceId:
          type: string
          description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
    SchedulingUsersTotalsWithoutBillableDto:
      type: object
      properties:
        capacityPerDay:
          type: number
          format: double
        totalHoursPerDay:
          type: array
          items:
            $ref: '#/components/schemas/TotalsPerDayDto'
        totalsPerDay:
          type: array
          items:
            $ref: '#/components/schemas/TotalsPerDayDto'
        userId:
          type: string
        userImage:
          type: string
        userName:
          type: string
        userStatus:
          type: string
        weeklyCapacity:
          type: array
          items:
            $ref: '#/components/schemas/WeeklyCapacityDto'
        workingDays:
          type: array
          items:
            type: string
            enum:
              - MONDAY
              - TUESDAY
              - WEDNESDAY
              - THURSDAY
              - FRIDAY
              - SATURDAY
              - SUNDAY
        workspaceId:
          type: string
    SendGoogleAnalyticsRequest:
      required:
        - eventName
        - eventParameters
        - userProperties
      type: object
      properties:
        eventName:
          type: string
        eventParameters:
          type: object
          additionalProperties:
            type: object
        event_name:
          type: string
          writeOnly: true
        event_parameters:
          type: object
          additionalProperties:
            type: object
          writeOnly: true
        userProperties:
          $ref: '#/components/schemas/GoogleAnalyticsEventUserProperties'
        user_properties:
          $ref: '#/components/schemas/GoogleAnalyticsEventUserProperties'
    SendInvoiceEmailRequest:
      required:
        - emailData
      type: object
      properties:
        attachExpenses:
          type: boolean
        attachInvoice:
          type: boolean
        emailData:
          $ref: '#/components/schemas/InvoiceEmailDataRequest'
        sendMeCopy:
          type: boolean
    SetWorkspaceMembershipStatusRequest:
      type: object
      properties:
        membershipStatus:
          type: string
          enum:
            - PENDING
            - ACTIVE
            - DECLINED
            - INACTIVE
            - ALL
        status:
          type: string
          writeOnly: true
        userId:
          type: string
        userIds:
          maxItems: 250
          minItems: 1
          type: array
          deprecated: true
          items:
            type: string
            deprecated: true
    SetupIntentDto:
      type: object
      properties:
        clientSecret:
          type: string
    ShiftScheduleRequest:
      type: object
      properties:
        from:
          type: string
          format: date-time
        to:
          type: string
          format: date-time
    SidebarItemRequest:
      type: object
      properties:
        interactive:
          type: boolean
        order:
          minimum: 1
          type: integer
          format: int32
        sidebarItem:
          type: string
        sidebarSection:
          type: string
    SidebarResponseDto:
      type: object
      properties:
        sidebar:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
    SmtpConfigurationRequest:
      type: object
      properties:
        debugEnabled:
          type: boolean
        emailAddress:
          type: string
        enabled:
          type: boolean
          writeOnly: true
        fromName:
          type: string
        host:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        port:
          type: integer
          format: int32
          writeOnly: true
        startTlsEnabled:
          type: boolean
        username:
          type: string
          writeOnly: true
    SplitAssignmentRequest:
      type: object
      properties:
        date:
          type: string
          format: date-time
    StartStopwatchRequest:
      type: object
      properties:
        billable:
          type: boolean
        continueStrategy:
          type: string
        customAttributes:
          maxItems: 10
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/CreateCustomAttributeRequest'
        customFields:
          maxItems: 50
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/UpdateCustomFieldRequest'
        description:
          maxLength: 3000
          minLength: 0
          type: string
        projectId:
          type: string
        tagIds:
          type: array
          items:
            type: string
        taskId:
          type: string
        type:
          type: string
    StatusTimeOffRequestV1Request:
      type: object
      properties:
        note:
          type: string
          description: Provide the note you would like to use for changing the time off request.
          example: Time Off Request Note
        status:
          type: string
          description: Provide the status you would like to use for changing the time off request.
          example: APPROVED
          enum:
            - APPROVED
            - REJECTED
    StopStopwatchRequest:
      type: object
      properties:
        billable:
          type: boolean
        customFields:
          maxItems: 50
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/UpdateCustomFieldRequest'
        description:
          maxLength: 3000
          minLength: 0
          type: string
        projectId:
          type: string
        state:
          type: string
          enum:
            - STOPPED
        tagIds:
          type: array
          items:
            type: string
        taskId:
          type: string
        type:
          type: string
        userId:
          type: string
    StopTimeEntryRequest:
      required:
        - end
      type: object
      properties:
        end:
          type: string
          description: Represents an end date in yyyy-MM-ddThh:mm:ssZ format.
          format: date-time
          example: "2021-01-01T00:00:00Z"
    StripeInvoiceDto:
      type: object
      properties:
        amount:
          type: string
        currency:
          type: string
        date:
          type: string
        invoiceId:
          type: string
        invoicePay:
          type: string
        invoicePdf:
          type: string
        source:
          type: string
          enum:
            - CLOCKIFY
            - MARKETPLACE
            - UNKNOWN
        status:
          type: string
    SubmitApprovalRequest:
      type: object
      properties:
        period:
          type: string
        startTime:
          type: string
    SubscriptionCouponDto:
      type: object
      properties:
        coupon:
          type: string
        type:
          type: string
        used:
          type: boolean
    SubscriptionCouponRequest:
      required:
        - coupon
      type: object
      properties:
        coupon:
          type: string
    SubscriptionCouponValidationResultDto:
      type: object
      properties:
        valid:
          type: boolean
    SummaryReportSettingsDto:
      required:
        - group
        - subgroup
      type: object
      properties:
        group:
          type: string
        subgroup:
          type: string
    SummaryReportSettingsDtoV1:
      required:
        - group
        - subgroup
      type: object
      properties:
        group:
          type: string
          example: PROJECT
        subgroup:
          type: string
          example: CLIENT
      description: Represents a summary report settings object.
    SurveyQuestionDto:
      type: object
      properties:
        flows:
          type: array
          items:
            type: string
        id:
          type: string
        order:
          type: integer
          format: int32
        possibleAnswers:
          type: array
          items:
            $ref: '#/components/schemas/SurveyQuestionPossibleAnswerDto'
        questionText:
          type: string
        questionType:
          type: string
        step:
          type: integer
          format: int32
        surveyType:
          type: string
    SurveyQuestionPossibleAnswerDto:
      type: object
      properties:
        answerText:
          type: string
        answerType:
          type: string
        id:
          type: string
    SurveyQuestionPossibleAnswerId:
      type: object
      properties:
        dateOfCreationFromObjectId:
          type: string
          format: date-time
    SurveyResponseAnswer:
      type: object
      properties:
        answerId:
          $ref: '#/components/schemas/SurveyQuestionPossibleAnswerId'
        freeInput:
          type: string
    SurveyResponseAnswerDto:
      type: object
      properties:
        answerId:
          type: string
        freeInput:
          type: string
    SurveyResponseDto:
      type: object
      properties:
        id:
          type: string
        response:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/SurveyResponseAnswerDto'
        status:
          type: string
        surveyFlow:
          type: string
        surveyType:
          type: string
        workspaceId:
          type: string
    SyncClientsRequest:
      required:
        - clientSyncId
      type: object
      properties:
        clientSyncId:
          type: string
    SyncProjectsRequest:
      required:
        - projectSyncId
      type: object
      properties:
        projectSyncId:
          type: string
    SystemSettingsDefaultWorkspaceDto:
      type: object
      properties:
        enabled:
          type: boolean
        workspaceId:
          type: string
    SystemSettingsDto:
      type: object
      properties:
        autoLogin:
          type: string
        createWorkspaceForbidden:
          type: boolean
        id:
          type: string
        loginPreference:
          uniqueItems: true
          type: array
          items:
            type: string
        multiFactorEnabled:
          type: boolean
        specialFeaturesActivated:
          type: boolean
    SystemSettingsRequest:
      type: object
      properties:
        allDomainsValidByDefault:
          type: boolean
        createWorkspaceForbidden:
          type: boolean
        id:
          type: string
        specialFeaturesActivated:
          type: boolean
    TagDto:
      type: object
      properties:
        archived:
          type: boolean
          description: Indicates whether tag is archived or not.
        id:
          type: string
          description: Represents tag identifier across the system.
          example: 64c777ddd3fcab07cfbb210c
        name:
          type: string
          description: Represents tag name.
          example: Sprint1
        workspaceId:
          type: string
          description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
    TagDtoV1:
      type: object
      properties:
        archived:
          type: boolean
          description: Indicates whether a tag is archived or not.
        id:
          type: string
          description: Represents tag identifier across the system.
          example: 21s687e29ae1f428e7ebe404
        name:
          type: string
          description: Represents tag name.
          example: Sprint1
        workspaceId:
          type: string
          description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
    TagIdsRequest:
      type: object
      properties:
        ids:
          uniqueItems: true
          type: array
          items:
            type: string
    TagRequest:
      required:
        - name
      type: object
      properties:
        archived:
          type: boolean
        name:
          maxLength: 100
          minLength: 0
          type: string
    TaskDto:
      type: object
      properties:
        assigneeIds:
          uniqueItems: true
          type: array
          items:
            type: string
        billable:
          type: boolean
        budgetEstimate:
          type: integer
          format: int64
        costRate:
          $ref: '#/components/schemas/RateDto'
        estimate:
          type: object
          properties:
            nano:
              type: integer
              format: int32
            negative:
              type: boolean
            positive:
              type: boolean
            seconds:
              type: integer
              format: int64
            units:
              type: array
              items:
                type: object
                properties:
                  dateBased:
                    type: boolean
                  durationEstimated:
                    type: boolean
                  timeBased:
                    type: boolean
            zero:
              type: boolean
        hourlyRate:
          $ref: '#/components/schemas/RateDto'
        id:
          type: string
        name:
          type: string
        progress:
          type: number
          format: double
        projectId:
          type: string
        status:
          type: string
          enum:
            - ACTIVE
            - DONE
            - ALL
        userGroupIds:
          uniqueItems: true
          type: array
          items:
            type: string
        workspaceId:
          type: string
    TaskDtoImpl:
      type: object
      properties:
        assigneeId:
          type: string
          deprecated: true
        assigneeIds:
          uniqueItems: true
          type: array
          items:
            type: string
        billable:
          type: boolean
        budgetEstimate:
          type: integer
          format: int64
        costRate:
          $ref: '#/components/schemas/RateDto'
        estimate:
          type: object
          properties:
            nano:
              type: integer
              format: int32
            negative:
              type: boolean
            positive:
              type: boolean
            seconds:
              type: integer
              format: int64
            units:
              type: array
              items:
                type: object
                properties:
                  dateBased:
                    type: boolean
                  duration:
                    type: object
                    properties:
                      nano:
                        type: integer
                        format: int32
                      negative:
                        type: boolean
                      positive:
                        type: boolean
                      seconds:
                        type: integer
                        format: int64
                      zero:
                        type: boolean
                  durationEstimated:
                    type: boolean
                  timeBased:
                    type: boolean
            zero:
              type: boolean
        hourlyRate:
          $ref: '#/components/schemas/RateDto'
        id:
          type: string
        name:
          type: string
        progress:
          type: number
          format: double
        projectId:
          type: string
        status:
          type: string
          enum:
            - ACTIVE
            - DONE
            - ALL
        userGroupIds:
          uniqueItems: true
          type: array
          items:
            type: string
        workspaceId:
          type: string
    TaskDtoV1:
      type: object
      properties:
        assigneeId:
          type: string
          deprecated: true
        assigneeIds:
          uniqueItems: true
          type: array
          description: Represents list of assignee ids for the task.
          example:
            - 45b687e29ae1f428e7ebe123
            - 67s687e29ae1f428e7ebe678
          items:
            type: string
            description: Represents list of assignee ids for the task.
            example: '["45b687e29ae1f428e7ebe123","67s687e29ae1f428e7ebe678"]'
        billable:
          type: boolean
          description: Indicates whether a task is billable or not.
        budgetEstimate:
          type: integer
          description: Represents a task budget estimate as long.
          format: int64
          example: 10000
        costRate:
          $ref: '#/components/schemas/RateDtoV1'
        duration:
          type: string
          description: Represents a task duration.
          example: PT1H30M
        estimate:
          type: string
          description: Represents a task duration estimate.
          example: PT1H30M
        hourlyRate:
          $ref: '#/components/schemas/RateDtoV1'
        id:
          type: string
          description: Represents task identifier across the system.
          example: 57a687e29ae1f428e7ebe107
        name:
          type: string
          description: Represents task name.
          example: Bugfixing
        projectId:
          type: string
          description: Represents project identifier across the system.
          example: 25b687e29ae1f428e7ebe123
        status:
          $ref: '#/components/schemas/TaskStatus'
        userGroupIds:
          uniqueItems: true
          type: array
          description: Represents list of user group ids for the task.
          example:
            - 67b687e29ae1f428e7ebe123
            - 12s687e29ae1f428e7ebe678
          items:
            type: string
            description: Represents list of user group ids for the task.
            example: '["67b687e29ae1f428e7ebe123","12s687e29ae1f428e7ebe678"]'
    TaskFavoritesDto:
      type: object
      properties:
        _id:
          type: string
          writeOnly: true
        id:
          type: string
        projectId:
          type: string
        taskId:
          type: string
        userId:
          type: string
        workspaceId:
          type: string
    TaskFullDto:
      type: object
      properties:
        assigneeIds:
          uniqueItems: true
          type: array
          items:
            type: string
        billable:
          type: boolean
        budgetEstimate:
          type: integer
          format: int64
        costRate:
          $ref: '#/components/schemas/RateDto'
        estimate:
          type: object
          properties:
            nano:
              type: integer
              format: int32
            negative:
              type: boolean
            positive:
              type: boolean
            seconds:
              type: integer
              format: int64
            units:
              type: array
              items:
                type: object
                properties:
                  dateBased:
                    type: boolean
                  duration:
                    type: object
                    properties:
                      nano:
                        type: integer
                        format: int32
                      negative:
                        type: boolean
                      positive:
                        type: boolean
                      seconds:
                        type: integer
                        format: int64
                      zero:
                        type: boolean
                  durationEstimated:
                    type: boolean
                  timeBased:
                    type: boolean
            zero:
              type: boolean
        favorite:
          type: boolean
        hourlyRate:
          $ref: '#/components/schemas/RateDto'
        id:
          type: string
        isFavorite:
          type: boolean
          writeOnly: true
        name:
          type: string
        progress:
          type: number
          format: double
        projectId:
          type: string
        status:
          type: string
          enum:
            - ACTIVE
            - DONE
            - ALL
        userGroupIds:
          uniqueItems: true
          type: array
          items:
            type: string
        workspaceId:
          type: string
    TaskId:
      type: object
      properties:
        dateOfCreationFromObjectId:
          type: string
          format: date-time
    TaskIdsRequest:
      type: object
      properties:
        ids:
          type: array
          items:
            type: string
    TaskInfoDto:
      type: object
      properties:
        id:
          type: string
          description: Represents task identifier across the system.
          example: 5b715448b0798751107918ab
        name:
          type: string
          description: Represents task name.
          example: Bugfixing
    TaskReportFilterRequest:
      type: object
      properties:
        clients:
          $ref: '#/components/schemas/ContainsArchivedFilterRequest'
        excludedIds:
          uniqueItems: true
          type: array
          items:
            type: string
        ignoreResultGrouping:
          type: boolean
        includedIds:
          uniqueItems: true
          type: array
          writeOnly: true
          items:
            type: string
        name:
          type: string
        ofIncludedIds:
          uniqueItems: true
          type: array
          items:
            type: string
        page:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        projects:
          $ref: '#/components/schemas/ContainsArchivedFilterRequest'
        status:
          type: string
    TaskRequest:
      required:
        - name
      type: object
      properties:
        assigneeId:
          type: string
          deprecated: true
        assigneeIds:
          uniqueItems: true
          type: array
          description: Represents list of assignee ids for the task.
          example:
            - 45b687e29ae1f428e7ebe123
            - 67s687e29ae1f428e7ebe678
          items:
            type: string
            description: Represents list of assignee ids for the task.
            example: '["45b687e29ae1f428e7ebe123","67s687e29ae1f428e7ebe678"]'
        billable:
          type: boolean
          description: Flag to set whether task is billable or not
        budgetEstimate:
          minimum: 0
          type: integer
          format: int64
          example: 10000
        costRate:
          $ref: '#/components/schemas/CostRateRequest'
        estimate:
          type: string
          description: Represents a task duration estimate.
          example: PT1H30M
        hourlyRate:
          $ref: '#/components/schemas/HourlyRateRequest'
        id:
          type: string
          description: Represents task identifier across the system.
          example: 57a687e29ae1f428e7ebe107
        name:
          type: string
          description: Represents task name.
          example: Bugfixing
        projectId:
          type: string
          description: Represents project identifier across the system.
          example: 5b641568b07987035750505e
        status:
          type: string
          example: DONE
        userGroupIds:
          uniqueItems: true
          type: array
          description: Represents list of user group ids for the task.
          example:
            - 67b687e29ae1f428e7ebe123
            - 12s687e29ae1f428e7ebe678
          items:
            type: string
            description: Represents list of user group ids for the task.
            example: '["67b687e29ae1f428e7ebe123","12s687e29ae1f428e7ebe678"]'
    TaskRequestV1:
      required:
        - name
      type: object
      properties:
        assigneeId:
          type: string
          deprecated: true
        assigneeIds:
          uniqueItems: true
          type: array
          description: Represents list of assignee ids for the task.
          example:
            - 45b687e29ae1f428e7ebe123
            - 67s687e29ae1f428e7ebe678
          items:
            type: string
            description: Represents list of assignee ids for the task.
            example: '["45b687e29ae1f428e7ebe123","67s687e29ae1f428e7ebe678"]'
        budgetEstimate:
          minimum: 0
          type: integer
          description: Represents a task budget estimate as long.
          format: int64
          example: 10000
        estimate:
          type: string
          description: Represents a task duration estimate in ISO-8601 format.
          example: PT1H30M
        id:
          type: string
          description: Represents task identifier across the system.
          example: 57a687e29ae1f428e7ebe107
        name:
          maxLength: 1000
          minLength: 1
          type: string
          description: Represents task name.
          example: Bugfixing
        status:
          type: string
          description: Represents task status.
          example: DONE
          enum:
            - ACTIVE
            - DONE
            - ALL
        userGroupIds:
          uniqueItems: true
          type: array
          description: Represents list of user group ids for the task.
          example:
            - 67b687e29ae1f428e7ebe123
            - 12s687e29ae1f428e7ebe678
          items:
            type: string
            description: Represents list of user group ids for the task.
            example: '["67b687e29ae1f428e7ebe123","12s687e29ae1f428e7ebe678"]'
    TaskStatus:
      type: object
      description: Represents task status.
      example: DONE
      oneOf:
        - type: string
          enum:
            - ACTIVE
            - DONE
            - ALL
      properties:
        ACTIVE:
          type: string
          enum:
            - ACTIVE
            - DONE
            - ALL
        ALL:
          type: string
          enum:
            - ACTIVE
            - DONE
            - ALL
        DONE:
          type: string
          enum:
            - ACTIVE
            - DONE
            - ALL
        active:
          type: boolean
    TaskWithProjectDto:
      type: object
      properties:
        project:
          $ref: '#/components/schemas/ProjectFullDto'
        task:
          $ref: '#/components/schemas/TaskFullDto'
    TasksGroupedByProjectIdDto:
      type: object
      properties:
        clientName:
          type: string
        projectName:
          type: string
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/TaskDtoImpl'
    TeamActivityDto:
      type: object
      properties:
        description:
          type: string
        latestActivityItems:
          type: array
          items:
            $ref: '#/components/schemas/LatestActivityItemDto'
        project:
          $ref: '#/components/schemas/ProjectInfoDto'
        task:
          $ref: '#/components/schemas/TaskInfoDto'
        timeInterval:
          $ref: '#/components/schemas/TimeIntervalDto'
        totalTime:
          type: object
          properties:
            nano:
              type: integer
              format: int32
            negative:
              type: boolean
            positive:
              type: boolean
            seconds:
              type: integer
              format: int64
            zero:
              type: boolean
        transformedActivityItems:
          type: array
          writeOnly: true
          items:
            $ref: '#/components/schemas/LatestActivityItemDto'
        user:
          $ref: '#/components/schemas/TeamMemberInfoDto'
    TeamMemberDto:
      type: object
      properties:
        accessEnabled:
          type: boolean
        email:
          type: string
        id:
          type: string
        memberships:
          type: array
          items:
            $ref: '#/components/schemas/MembershipDto'
        name:
          type: string
        roles:
          type: array
          items:
            $ref: '#/components/schemas/RoleNameDto'
    TeamMemberInfoDto:
      type: object
      properties:
        email:
          type: string
        id:
          type: string
        name:
          type: string
        profilePicture:
          type: string
    TeamMemberRequest:
      required:
        - id
      type: object
      properties:
        email:
          type: string
        id:
          type: string
        name:
          type: string
    TeamMembersAndCountDto:
      type: object
      properties:
        count:
          type: integer
          format: int64
        users:
          type: array
          items:
            $ref: '#/components/schemas/TeamMemberDto'
    TeamPolicyAssignmentsDistribution:
      type: object
      properties:
        superiorHasAssignments:
          type: boolean
        teamMembersHaveAssignments:
          type: boolean
    TemplateDto:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        userId:
          type: string
        workspaceId:
          type: string
    TemplateDtoImpl:
      type: object
      properties:
        entries:
          type: array
          items:
            $ref: '#/components/schemas/TimeEntryWithCustomFieldsDto'
        id:
          type: string
        name:
          type: string
        projectsAndTasks:
          type: array
          items:
            $ref: '#/components/schemas/ProjectTaskTupleDto'
        userId:
          type: string
        weekStart:
          type: string
          format: date
        workspaceId:
          type: string
    TemplateFullWithEntitiesFullDto:
      type: object
      properties:
        entries:
          type: array
          items:
            $ref: '#/components/schemas/TimeEntryFullDto'
        id:
          type: string
        name:
          type: string
        projectsAndTasks:
          type: array
          items:
            $ref: '#/components/schemas/ProjectTaskTupleFullDto'
        userId:
          type: string
        weekStart:
          type: string
          format: date
        workspaceId:
          type: string
    TemplatePatchRequest:
      required:
        - name
      type: object
      properties:
        name:
          type: string
    TemplateRequest:
      required:
        - name
        - projectsAndTasks
      type: object
      properties:
        name:
          type: string
        projectsAndTasks:
          type: array
          items:
            $ref: '#/components/schemas/ProjectTaskTupleRequest'
        timeEntryIds:
          uniqueItems: true
          type: array
          items:
            type: string
        weekStart:
          type: string
          format: date
    TermDto:
      type: object
      properties:
        term:
          type: string
    TerminateSubscriptionRequest:
      type: object
      properties:
        notifyUser:
          type: boolean
    TimeEntriesDurationRequest:
      type: object
      properties:
        end:
          type: string
          format: date-time
        start:
          type: string
          format: date-time
    TimeEntriesListDto:
      type: object
      properties:
        allEntriesCount:
          type: integer
          format: int64
        approvalPeriod:
          type: string
          enum:
            - WEEKLY
            - SEMI_MONTHLY
            - MONTHLY
        durationMap:
          type: object
          additionalProperties:
            type: object
            properties:
              nano:
                type: integer
                format: int32
              negative:
                type: boolean
              positive:
                type: boolean
              seconds:
                type: integer
                format: int64
              units:
                type: array
                items:
                  type: object
                  properties:
                    dateBased:
                      type: boolean
                    duration:
                      type: object
                      properties:
                        nano:
                          type: integer
                          format: int32
                        negative:
                          type: boolean
                        positive:
                          type: boolean
                        seconds:
                          type: integer
                          format: int64
                        zero:
                          type: boolean
                    durationEstimated:
                      type: boolean
                    timeBased:
                      type: boolean
              zero:
                type: boolean
        periodStatusMap:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/TimeEntryApprovalStatusDto'
        timeEntriesList:
          type: array
          items:
            $ref: '#/components/schemas/TimeEntryDtoImpl'
    TimeEntriesPatchRequest:
      type: object
      properties:
        billable:
          type: boolean
        changeFields:
          type: array
          items:
            type: string
            enum:
              - DESCRIPTION
              - PROJECT
              - TASK
              - TAG
              - TAG_ADD
              - TIMEINTERVAL
              - BILLABLE
              - DATE
              - TIME
              - USER
              - CUSTOM_FIELDS
              - TYPE
        customFields:
          maxItems: 50
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/UpdateCustomFieldRequest'
        description:
          maxLength: 3000
          minLength: 0
          type: string
        end:
          type: string
          format: date-time
        projectId:
          type: string
        start:
          type: string
          format: date-time
        tagIds:
          type: array
          items:
            type: string
        taskId:
          type: string
        timeEntryIds:
          type: array
          items:
            type: string
        userId:
          type: string
    TimeEntryApprovalStatusDto:
      type: object
      properties:
        approvalRequestId:
          type: string
        approvedCount:
          type: integer
          format: int32
        dateRange:
          $ref: '#/components/schemas/DateRangeDto'
        entriesCount:
          type: integer
          format: int32
        hasUnSubmitted:
          type: boolean
        status:
          type: string
        submitterName:
          type: string
        total:
          type: object
          properties:
            nano:
              type: integer
              format: int32
            negative:
              type: boolean
            positive:
              type: boolean
            seconds:
              type: integer
              format: int64
            units:
              type: array
              items:
                type: object
                properties:
                  dateBased:
                    type: boolean
                  duration:
                    type: object
                    properties:
                      nano:
                        type: integer
                        format: int32
                      negative:
                        type: boolean
                      positive:
                        type: boolean
                      seconds:
                        type: integer
                        format: int64
                      zero:
                        type: boolean
                  durationEstimated:
                    type: boolean
                  timeBased:
                    type: boolean
            zero:
              type: boolean
        unsubmittedEntriesCount:
          type: integer
          format: int64
    TimeEntryDto:
      type: object
      properties:
        billable:
          type: boolean
        id:
          type: string
        locked:
          type: boolean
        projectId:
          type: string
        taskId:
          type: string
        timeInterval:
          $ref: '#/components/schemas/TimeIntervalDto'
        type:
          type: string
        userId:
          type: string
    TimeEntryDtoImpl:
      type: object
      properties:
        approvalStatus:
          type: string
          enum:
            - PENDING
            - APPROVED
            - UNSUBMITTED
        billable:
          type: boolean
        costRate:
          $ref: '#/components/schemas/RateDto'
        currentlyRunning:
          type: boolean
        customFieldValues:
          type: array
          items:
            $ref: '#/components/schemas/CustomFieldValueFullDto'
        description:
          type: string
        hourlyRate:
          $ref: '#/components/schemas/RateDto'
        id:
          type: string
        isLocked:
          type: boolean
        kioskId:
          type: string
        projectCurrency:
          type: string
        projectId:
          type: string
        tagIds:
          type: array
          items:
            type: string
        taskId:
          type: string
        timeInterval:
          $ref: '#/components/schemas/TimeIntervalDto'
        type:
          type: string
        userId:
          type: string
        workspaceId:
          type: string
    TimeEntryDtoImplV1:
      type: object
      properties:
        billable:
          type: boolean
          description: Indicates whether a time entry is billable.
        customFieldValues:
          type: array
          description: Represents a list of custom field value objects.
          items:
            $ref: '#/components/schemas/CustomFieldValueDtoV1'
        description:
          type: string
          description: Represents time entry description.
          example: This is a sample time entry description.
        id:
          type: string
          description: Represents time entry identifier across the system.
          example: 64c777ddd3fcab07cfbb210c
        isLocked:
          type: boolean
          description: Represents whether time entry is locked for modification.
        kioskId:
          type: string
          description: Represents kiosk identifier across the system.
          example: 94c777ddd3fcab07cfbb210d
        projectId:
          type: string
          description: Represents project identifier across the system.
          example: 25b687e29ae1f428e7ebe123
        tagIds:
          type: array
          description: Represents a list of tag identifiers across the system.
          example:
            - 321r77ddd3fcab07cfbb567y
            - 44x777ddd3fcab07cfbb88f
          items:
            type: string
            description: Represents a list of tag identifiers across the system.
            example: '["321r77ddd3fcab07cfbb567y","44x777ddd3fcab07cfbb88f"]'
        taskId:
          type: string
          description: Represents task identifier across the system.
          example: 54m377ddd3fcab07cfbb432w
        timeInterval:
          $ref: '#/components/schemas/TimeIntervalDtoV1'
        type:
          type: string
          description: Represents a time entry type enum.
          example: BREAK
          enum:
            - REGULAR
            - BREAK
            - HOLIDAY
            - TIME_OFF
        userId:
          type: string
          description: Represents user identifier across the system.
          example: 5a0ab5acb07987125438b60f
        workspaceId:
          type: string
          description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
    TimeEntryDtoV1:
      type: object
      properties:
        billable:
          type: boolean
          description: Indicates whether a time entry is billable.
        customFieldValues:
          type: array
          description: Represents a list of custom field value objects.
          items:
            $ref: '#/components/schemas/CustomFieldValueDtoV1'
        description:
          type: string
          description: Represents time entry description.
          example: This is a sample time entry description.
        id:
          type: string
          description: Represents time entry identifier across the system.
          example: 64c777ddd3fcab07cfbb210c
        isLocked:
          type: boolean
          description: Represents whether time entry is locked for modification.
        kioskId:
          type: string
          description: Represents kiosk identifier across the system.
          example: 94c777ddd3fcab07cfbb210d
        projectId:
          type: string
          description: Represents project identifier across the system.
          example: 25b687e29ae1f428e7ebe123
        tagIds:
          type: array
          description: Represents a list of tag identifiers across the system.
          example:
            - 321r77ddd3fcab07cfbb567y
            - 44x777ddd3fcab07cfbb88f
          items:
            type: string
            description: Represents a list of tag identifiers across the system.
            example: '["321r77ddd3fcab07cfbb567y","44x777ddd3fcab07cfbb88f"]'
        taskId:
          type: string
          description: Represents task identifier across the system.
          example: 54m377ddd3fcab07cfbb432w
        timeInterval:
          $ref: '#/components/schemas/TimeIntervalDtoV1'
        type:
          type: string
          description: Represents a time entry type enum.
          example: BREAK
          enum:
            - REGULAR
            - BREAK
            - HOLIDAY
            - TIME_OFF
        userId:
          type: string
          description: Represents user identifier across the system.
          example: 5a0ab5acb07987125438b60f
        workspaceId:
          type: string
          description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
    TimeEntryFullDto:
      type: object
      properties:
        approvalRequestId:
          type: string
        approvalStatus:
          type: string
          enum:
            - PENDING
            - APPROVED
            - UNSUBMITTED
        billable:
          type: boolean
        customFieldValues:
          type: array
          items:
            $ref: '#/components/schemas/CustomFieldValueFullDto'
        description:
          type: string
        hourlyRate:
          $ref: '#/components/schemas/RateDto'
        id:
          type: string
        isLocked:
          type: boolean
        kiosk:
          $ref: '#/components/schemas/EntityIdNameDto'
        kioskId:
          type: string
        project:
          $ref: '#/components/schemas/ProjectDtoImpl'
        projectCurrency:
          type: string
        projectId:
          type: string
        tags:
          type: array
          items:
            $ref: '#/components/schemas/TagDto'
        task:
          $ref: '#/components/schemas/TaskDtoImpl'
        taskId:
          type: string
        timeInterval:
          $ref: '#/components/schemas/TimeIntervalDto'
        totalBillable:
          type: integer
          format: int64
        totalBillableDecimal:
          type: number
          format: double
        type:
          type: string
        user:
          $ref: '#/components/schemas/UserDto'
        userId:
          type: string
        workspaceId:
          type: string
    TimeEntryIdsRequest:
      type: object
      properties:
        timeEntryIds:
          type: array
          items:
            type: string
    TimeEntryInfoDto:
      type: object
      properties:
        approvalRequestId:
          type: string
          description: Represents approval identifier across the system.
          example: 5e4117fe8c625f38930d57b7
        billable:
          type: boolean
          description: Indicates whether time entry is billable or not.
        costRate:
          $ref: '#/components/schemas/RateDto'
        customFieldValues:
          type: array
          description: Represents a list of custom field value objects.
          items:
            $ref: '#/components/schemas/CustomFieldValueDto'
        description:
          type: string
          description: Represents a time entry description.
          example: This is a sample time entry description.
        hourlyRate:
          $ref: '#/components/schemas/RateDto'
        id:
          type: string
          description: Represents time entry identifier across the system.
          example: 5b715448b0798751107918ab
        isLocked:
          type: boolean
          description: Indicates whether time entry is locked or not.
        project:
          $ref: '#/components/schemas/ProjectInfoDto'
        tags:
          type: array
          description: Represents a list of tag objects.
          items:
            $ref: '#/components/schemas/TagDto'
        task:
          $ref: '#/components/schemas/TaskInfoDto'
        timeInterval:
          $ref: '#/components/schemas/TimeIntervalDto'
        type:
          type: string
          description: Represents a time entry type enum.
          example: REGULAR
          enum:
            - REGULAR
            - BREAK
            - HOLIDAY
            - TIME_OFF
    TimeEntryKioskInfoDto:
      type: object
      properties:
        clientId:
          type: string
        clientName:
          type: string
        description:
          type: string
        id:
          type: string
        isSwitched:
          type: boolean
        kioskId:
          type: string
        kioskName:
          type: string
        projectColor:
          type: string
        projectId:
          type: string
        projectName:
          type: string
        taskId:
          type: string
        taskName:
          type: string
        timeInterval:
          $ref: '#/components/schemas/TimeIntervalDto'
        type:
          type: string
          enum:
            - REGULAR
            - BREAK
            - HOLIDAY
            - TIME_OFF
        userId:
          type: string
        workspaceId:
          type: string
    TimeEntryPatchSplitRequest:
      type: object
      properties:
        billable:
          type: boolean
        customFields:
          maxItems: 50
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/UpdateCustomFieldRequest'
        description:
          maxLength: 3000
          minLength: 0
          type: string
        end:
          type: string
          format: date-time
        projectId:
          type: string
        splitTime:
          type: string
          format: date-time
        start:
          type: string
          format: date-time
        startAsString:
          type: string
        tagIds:
          type: array
          items:
            type: string
        taskId:
          type: string
    TimeEntryRecentlyUsedDto:
      type: object
      properties:
        billableBasedOnCurrentTaskAndProject:
          type: boolean
        clientId:
          type: string
        clientName:
          type: string
        customFieldValues:
          type: array
          items:
            $ref: '#/components/schemas/CustomFieldValueDto'
        description:
          type: string
        id:
          type: string
        projectBillable:
          type: boolean
        projectColor:
          type: string
        projectId:
          type: string
        projectName:
          type: string
        tags:
          type: array
          items:
            $ref: '#/components/schemas/TagDto'
        taskId:
          type: string
        taskName:
          type: string
    TimeEntrySplitRequest:
      type: object
      properties:
        splitTime:
          type: string
          format: date-time
    TimeEntrySummaryDto:
      type: object
      properties:
        billable:
          type: boolean
        clientId:
          type: string
        clientName:
          type: string
        customFields:
          type: array
          items:
            $ref: '#/components/schemas/CustomFieldValueFullDto'
        description:
          type: string
        hourlyRate:
          $ref: '#/components/schemas/RateDto'
        id:
          type: string
        isLocked:
          type: boolean
        project:
          $ref: '#/components/schemas/ProjectSummaryDto'
        tags:
          type: array
          items:
            $ref: '#/components/schemas/TagDto'
        task:
          $ref: '#/components/schemas/TaskDto'
        timeInterval:
          $ref: '#/components/schemas/TimeIntervalDto'
        totalBillable:
          type: integer
          format: int64
        totalBillableDecimal:
          type: number
          format: double
        user:
          $ref: '#/components/schemas/UserSummaryDto'
        workspaceId:
          type: string
    TimeEntryUpdatedDto:
      type: object
      properties:
        approvalRequestWithdrawn:
          type: boolean
        approvalStatus:
          type: string
          enum:
            - PENDING
            - APPROVED
            - UNSUBMITTED
        billable:
          type: boolean
        costRate:
          $ref: '#/components/schemas/RateDto'
        currentlyRunning:
          type: boolean
        customFieldValues:
          type: array
          items:
            $ref: '#/components/schemas/CustomFieldValueFullDto'
        description:
          type: string
        hourlyRate:
          $ref: '#/components/schemas/RateDto'
        id:
          type: string
        isLocked:
          type: boolean
        kioskId:
          type: string
        projectCurrency:
          type: string
        projectId:
          type: string
        tagIds:
          type: array
          items:
            type: string
        taskId:
          type: string
        timeInterval:
          $ref: '#/components/schemas/TimeIntervalDto'
        type:
          type: string
        userId:
          type: string
        workspaceId:
          type: string
    TimeEntryWithCustomFieldsDto:
      type: object
      properties:
        billable:
          type: boolean
        customFieldValues:
          type: array
          items:
            $ref: '#/components/schemas/CustomFieldValueDto'
        description:
          type: string
        id:
          type: string
        projectId:
          type: string
        tagIds:
          type: array
          items:
            type: string
        taskId:
          type: string
        timeInterval:
          $ref: '#/components/schemas/TimeIntervalDto'
        type:
          type: string
        userId:
          type: string
        workspaceId:
          type: string
    TimeEntryWithRatesDtoV1:
      type: object
      properties:
        billable:
          type: boolean
          description: Indicates whether a time entry is billable.
        costRate:
          $ref: '#/components/schemas/RateDtoV1'
        customFieldValues:
          type: array
          description: Represents a list of custom field value objects.
          items:
            $ref: '#/components/schemas/CustomFieldValueDtoV1'
        description:
          type: string
          description: Represents time entry description.
          example: This is a sample time entry description.
        hourlyRate:
          $ref: '#/components/schemas/RateDtoV1'
        id:
          type: string
          description: Represents time entry identifier across the system.
          example: 64c777ddd3fcab07cfbb210c
        isLocked:
          type: boolean
          description: Represents whether time entry is locked for modification.
        kioskId:
          type: string
          description: Represents kiosk identifier across the system.
          example: 94c777ddd3fcab07cfbb210d
        projectId:
          type: string
          description: Represents project identifier across the system.
          example: 25b687e29ae1f428e7ebe123
        tagIds:
          type: array
          description: Represents a list of tag identifiers across the system.
          example:
            - 321r77ddd3fcab07cfbb567y
            - 44x777ddd3fcab07cfbb88f
          items:
            type: string
            description: Represents a list of tag identifiers across the system.
            example: '["321r77ddd3fcab07cfbb567y","44x777ddd3fcab07cfbb88f"]'
        taskId:
          type: string
          description: Represents task identifier across the system.
          example: 54m377ddd3fcab07cfbb432w
        timeInterval:
          $ref: '#/components/schemas/TimeIntervalDtoV1'
        type:
          type: string
          description: Represents a time entry type enum.
          example: BREAK
          enum:
            - REGULAR
            - BREAK
            - HOLIDAY
            - TIME_OFF
        userId:
          type: string
          description: Represents user identifier across the system.
          example: 5a0ab5acb07987125438b60f
        workspaceId:
          type: string
          description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
    TimeEntryWithUsernameDto:
      type: object
      properties:
        approvalStatus:
          type: string
          enum:
            - PENDING
            - APPROVED
            - UNSUBMITTED
        billable:
          type: boolean
        costRate:
          $ref: '#/components/schemas/RateDto'
        currentlyRunning:
          type: boolean
        customFieldValues:
          type: array
          items:
            $ref: '#/components/schemas/CustomFieldValueFullDto'
        description:
          type: string
        hourlyRate:
          $ref: '#/components/schemas/RateDto'
        id:
          type: string
        isLocked:
          type: boolean
        kioskId:
          type: string
        projectCurrency:
          type: string
        projectId:
          type: string
        tagIds:
          type: array
          items:
            type: string
        taskId:
          type: string
        timeInterval:
          $ref: '#/components/schemas/TimeIntervalDto'
        type:
          type: string
        userId:
          type: string
        userName:
          type: string
        workspaceId:
          type: string
    TimeEstimateDto:
      type: object
      properties:
        active:
          type: boolean
        estimate:
          type: string
          description: Represents project duration in milliseconds.
          example: "60000"
        includeNonBillable:
          type: boolean
        resetOption:
          type: string
          description: Represents a reset option enum.
          example: WEEKLY
          enum:
            - WEEKLY
            - MONTHLY
            - YEARLY
        type:
          type: string
          description: Represents an estimate type enum.
          example: AUTO
          enum:
            - AUTO
            - MANUAL
    TimeEstimateRequest:
      type: object
      properties:
        active:
          type: boolean
          description: Flag whether to include only active or inactive estimates.
        estimate:
          type: string
          description: Represents a time duration in ISO-8601 format.
          example: PT1H30M
        includeNonBillable:
          type: boolean
          description: Flag whether to include non-billable expenses.
        resetOption:
          type: string
          description: Represents a reset option enum.
          example: MONTHLY
          enum:
            - WEEKLY
            - MONTHLY
            - YEARLY
        type:
          type: string
          description: Represents an estimate type enum.
          example: AUTO
          enum:
            - AUTO
            - MANUAL
      description: Represents project time estimate request object.
    TimeIntervalDto:
      type: object
      properties:
        duration:
          type: string
          description: Represents a time duration.
          example: PT1H30M
        end:
          type: string
          format: date-time
        start:
          type: string
          format: date-time
    TimeIntervalDtoV1:
      type: object
      properties:
        duration:
          type: string
          description: Represents a time duration.
          example: "8000"
        end:
          type: string
          description: Represents an end date in yyyy-MM-ddThh:mm:ssZ format.
          format: date-time
          example: "2021-01-01T00:00:00Z"
        start:
          type: string
          description: Represents a start date in yyyy-MM-ddThh:mm:ssZ format.
          format: date-time
          example: "2020-01-01T00:00:00Z"
      description: Represents a time interval object.
    TimeOffDto:
      type: object
      properties:
        active:
          type: boolean
        regularUserCanSeeOtherUsersTimeOff:
          type: boolean
        type:
          type: boolean
          writeOnly: true
    TimeOffPolicyHolidayForClients:
      type: object
      properties:
        clientIds:
          type: array
          items:
            type: string
        holidays:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/HolidayProjection'
        policies:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/PolicyProjection'
        projectIds:
          uniqueItems: true
          type: array
          items:
            type: string
        taskIds:
          type: array
          items:
            type: string
    TimeOffPolicyHolidayForProjects:
      type: object
      properties:
        holidays:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/HolidayProjection'
        policies:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/PolicyProjection'
        projectIds:
          type: array
          items:
            type: string
    TimeOffPolicyHolidayForTasks:
      type: object
      properties:
        holidays:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/HolidayProjection'
        policies:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/PolicyProjection'
        taskIds:
          type: array
          items:
            type: string
    TimeOffRequestDto:
      type: object
      properties:
        balanceDiff:
          type: number
          format: double
        createdAt:
          type: string
          format: date-time
        id:
          type: string
        note:
          type: string
        policyId:
          type: string
        status:
          $ref: '#/components/schemas/TimeOffRequestStatus'
        timeOffPeriod:
          $ref: '#/components/schemas/TimeOffRequestPeriodDto'
        userId:
          type: string
        workspaceId:
          type: string
    TimeOffRequestFullDto:
      type: object
      properties:
        allowNegativeBalance:
          type: boolean
        balance:
          type: number
          format: double
        balanceDiff:
          type: number
          format: double
        balanceValueAtRequest:
          type: number
          format: double
        canBeApproved:
          type: boolean
        canBeWithdrawn:
          type: boolean
        createdAt:
          type: string
          format: date-time
        id:
          type: string
        limitNegativeBalance:
          type: boolean
        negativeBalance:
          type: number
          format: double
        negativeBalanceAmount:
          type: number
          format: double
        negativeBalanceUsed:
          type: number
          format: double
        note:
          type: string
        policyColor:
          type: string
        policyId:
          type: string
        policyName:
          type: string
        requesterUserId:
          type: string
        requesterUserName:
          type: string
        status:
          $ref: '#/components/schemas/TimeOffRequestStatus'
        timeOffPeriod:
          $ref: '#/components/schemas/TimeOffRequestPeriodDto'
        timeUnit:
          type: string
        timeZone:
          type: string
        userEmail:
          type: string
        userId:
          type: string
        userImageUrl:
          type: string
        userName:
          type: string
        workspaceId:
          type: string
    TimeOffRequestFullV1Dto:
      type: object
      properties:
        balance:
          type: number
          description: Represents the time off balance.
          format: double
          example: 10.0
        balanceDiff:
          type: number
          description: Represents the balance difference.
          format: double
          example: 1.0
        createdAt:
          type: string
          description: Represents the date when time off request is created. It is in format YYYY-MM-DDTHH:MM:SS.ssssssZ
          format: date-time
          example: "2022-08-26T08:32:01.640708Z"
        id:
          type: string
          description: Represents time off requester identifier across the system.
          example: 5b715612b079875110791111
        note:
          type: string
          description: Represents the note of the time off request.
          example: Time Off Request Note
        policyId:
          type: string
          description: Represents policy identifier across the system.
          example: 5b715612b079875110792333
        policyName:
          type: string
          description: Represents the policy name of the time off request.
          example: Days
        requesterUserId:
          type: string
          description: Represents requester user's id.
          example: 5b715612b0798751107925555
        requesterUserName:
          type: string
          description: Represents requester user's username.
          example: John
        status:
          $ref: '#/components/schemas/TimeOffRequestStatus'
        timeOffPeriod:
          $ref: '#/components/schemas/TimeOffRequestPeriodDto'
        timeUnit:
          type: string
          description: Represents the time unit of the time off request.
          example: DAYS
          enum:
            - DAYS
            - HOURS
        userEmail:
          type: string
          description: Represents user's email
          example: nicholas@clockify.com
        userId:
          type: string
          description: Represents user identifier across the system.
          example: 5b715612b079875110794444
        userName:
          type: string
          description: Represents user's username.
          example: Nicholas
        userTimeZone:
          type: string
          description: Represents user's time zone
          example: Europe/Budapest
        workspaceId:
          type: string
          description: Represents workspace identifier across the system.
          example: 5b715612b079875110792222
      description: Represents the array of time off requests.
    TimeOffRequestPeriod:
      type: object
      properties:
        halfDayHours:
          $ref: '#/components/schemas/Period'
        halfDayPeriod:
          type: string
          enum:
            - FIRST_HALF
            - SECOND_HALF
            - NOT_DEFINED
        isHalfDay:
          type: boolean
        period:
          $ref: '#/components/schemas/Period'
    TimeOffRequestPeriodDto:
      type: object
      properties:
        halfDayHours:
          $ref: '#/components/schemas/Period'
        halfDayPeriod:
          type: string
        isHalfDay:
          type: boolean
        period:
          $ref: '#/components/schemas/Period'
    TimeOffRequestPeriodRequest:
      required:
        - period
      type: object
      properties:
        halfDayHours:
          $ref: '#/components/schemas/PeriodRequest'
        halfDayPeriod:
          type: string
        isHalfDay:
          type: boolean
        period:
          $ref: '#/components/schemas/PeriodRequest'
    TimeOffRequestPeriodV1Request:
      required:
        - period
      type: object
      properties:
        halfDayPeriod:
          type: string
          description: Represents the half day period.
          example: NOT_DEFINED
          enum:
            - FIRST_HALF
            - SECOND_HALF
            - NOT_DEFINED
        isHalfDay:
          type: boolean
          description: Indicates whether time off is half day.
          example: false
        period:
          $ref: '#/components/schemas/PeriodV1Request'
        timeOffHalfDayPeriod:
          type: string
          enum:
            - FIRST_HALF
            - SECOND_HALF
            - NOT_DEFINED
      description: Provide the period you would like to use for creating the time off request.
    TimeOffRequestStatus:
      type: object
      properties:
        changedAt:
          type: string
          format: date-time
        changedByUserId:
          type: string
        changedByUserName:
          type: string
        changedForUserName:
          type: string
        note:
          type: string
        statusType:
          type: string
          enum:
            - PENDING
            - APPROVED
            - REJECTED
            - ALL
    TimeOffRequestV1Dto:
      type: object
      properties:
        balanceDiff:
          type: number
          description: Represents the balance difference
          format: double
          example: 1.0
        createdAt:
          type: string
          description: Represents the date when time off request is created. Date is in format YYYY-MM-DDTHH:MM:SS.ssssssZ
          format: date-time
          example: "2022-08-26T08:32:01.640708Z"
        id:
          type: string
          description: Represents time off requester identifier across the system.
          example: 5b715612b079875110791111
        note:
          type: string
          description: Represents the note of the time off request.
          example: Time Off Request Note
        policyId:
          type: string
          description: Represents policy identifier across the system.
          example: 5b715612b079875110792333
        status:
          $ref: '#/components/schemas/TimeOffRequestStatus'
        timeOffPeriod:
          $ref: '#/components/schemas/TimeOffRequestPeriodDto'
        userId:
          type: string
          description: Represents user identifier across the system.
          example: 5b715612b079875110794444
        workspaceId:
          type: string
          description: Represents workspace identifier across the system.
          example: 5b715612b079875110792222
    TimeOffRequestsWithCountDto:
      type: object
      properties:
        count:
          type: integer
          format: int32
        requests:
          type: array
          items:
            $ref: '#/components/schemas/TimeOffRequestFullDto'
    TimeOffRequestsWithCountV1Dto:
      type: object
      properties:
        count:
          type: integer
          description: Represents the count of time off requests.
          format: int32
          example: 1
        requests:
          type: array
          items:
            $ref: '#/components/schemas/TimeOffRequestFullV1Dto'
    TimeRangeRequest:
      type: object
      properties:
        issueDateEnd:
          type: string
          description: Represents a date in yyyy-MM-dd format. This is the upper bound of the time range.
          example: "2021-01-01"
        issueDateStart:
          type: string
          description: Represents a date in yyyy-MM-dd format. This is the lower bound of the time range.
          example: "2020-01-01"
    TimeRangeRequestDtoV1:
      type: object
      properties:
        issue-date-end:
          type: string
          description: Represents a date in yyyy-MM-dd format. This is the lower bound of the time range.
          example: "2020-01-01"
        issue-date-start:
          type: string
          description: Represents a date in yyyy-MM-dd format. This is the lower bound of the time range.
          example: "2020-01-01"
      description: Represents a time range object. If provided, you'll get a filtered list of invoices that has issue date within the time range specified.
    TimelineHolidayDto:
      type: object
      properties:
        color:
          type: string
        datePeriod:
          $ref: '#/components/schemas/DatePeriod'
        id:
          type: string
        name:
          type: string
        workspaceId:
          type: string
    TimelineTimeOffRequestBaseDto:
      type: object
      properties:
        balanceDiff:
          type: number
          format: double
        id:
          type: string
        note:
          type: string
        policyName:
          type: string
        status:
          $ref: '#/components/schemas/TimeOffRequestStatus'
        timeOffPeriod:
          $ref: '#/components/schemas/TimeOffRequestPeriod'
        timeUnit:
          type: string
        timeZone:
          type: string
        userId:
          type: string
    TimelineUserDto:
      type: object
      properties:
        holidays:
          type: array
          items:
            $ref: '#/components/schemas/TimelineHolidayDto'
        requests:
          type: array
          items:
            $ref: '#/components/schemas/TimelineTimeOffRequestBaseDto'
        timeZone:
          type: string
        userId:
          type: string
        userImageUrl:
          type: string
        userName:
          type: string
        workingDays:
          type: array
          items:
            type: string
    TimelineUsersDto:
      type: object
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/TimelineUserDto'
    TokenExchangeFlowInfoDto:
      type: object
      properties:
        enabled:
          type: boolean
    TotalTimeItemDto:
      type: object
      properties:
        amountWithCurrency:
          type: array
          items:
            $ref: '#/components/schemas/AmountWithCurrencyDto'
        billableDuration:
          type: object
          properties:
            nano:
              type: integer
              format: int32
            negative:
              type: boolean
            positive:
              type: boolean
            seconds:
              type: integer
              format: int64
            units:
              type: array
              items:
                type: object
                properties:
                  dateBased:
                    type: boolean
                  durationEstimated:
                    type: boolean
                  timeBased:
                    type: boolean
            zero:
              type: boolean
        clientName:
          type: string
        color:
          type: string
        duration:
          type: object
          properties:
            nano:
              type: integer
              format: int32
            negative:
              type: boolean
            positive:
              type: boolean
            seconds:
              type: integer
              format: int64
            units:
              type: array
              items:
                type: object
                properties:
                  dateBased:
                    type: boolean
                  durationEstimated:
                    type: boolean
                  timeBased:
                    type: boolean
            zero:
              type: boolean
        earned:
          type: integer
          format: int64
        endDateTime:
          type: string
          format: date-time
        label:
          type: string
        percentage:
          type: string
        projectName:
          type: string
    TotalsPerDayDto:
      type: object
      properties:
        date:
          type: string
          format: date-time
        totalHours:
          type: number
          format: double
    TrackingRequest:
      type: object
      properties:
        abTestingTrackingRequest:
          $ref: '#/components/schemas/ABTestingTrackingRequest'
        affiliateTrackingRequest:
          $ref: '#/components/schemas/AffiliateTrackingRequest'
        attributionTrackingRequest:
          $ref: '#/components/schemas/AttributionTrackingRequest'
        seoEventsTrackingRequest:
          $ref: '#/components/schemas/SEOEventsTrackingRequest'
    TransferAuthenticationTypeDto:
      type: object
      properties:
        transferAuthenticationType:
          type: string
          enum:
            - PASSWORD
            - MULTI_FACTOR
            - OTP_CODE
    TransferOwnerRequest:
      type: object
      properties:
        userId:
          type: string
    TransferRequest:
      required:
        - targetRegion
      type: object
      properties:
        targetRegion:
          type: string
    TransferSeatDetailsDto:
      type: object
      properties:
        customPrice:
          type: boolean
        payedForLimited:
          type: integer
          format: int32
        payedForRegular:
          type: integer
          format: int32
    UnsubmittedSummaryGroupDto:
      type: object
      properties:
        periodRange:
          type: string
        users:
          type: array
          items:
            $ref: '#/components/schemas/UnsubmittedUserSummaryDto'
        weekRange:
          type: string
          deprecated: true
    UnsubmittedUserSummaryDto:
      type: object
      properties:
        approvedTimeOff:
          type: object
          properties:
            nano:
              type: integer
              format: int32
            negative:
              type: boolean
            positive:
              type: boolean
            seconds:
              type: integer
              format: int64
            units:
              type: array
              items:
                type: object
                properties:
                  dateBased:
                    type: boolean
                  duration:
                    type: object
                    properties:
                      nano:
                        type: integer
                        format: int32
                      negative:
                        type: boolean
                      positive:
                        type: boolean
                      seconds:
                        type: integer
                        format: int64
                      zero:
                        type: boolean
                  durationEstimated:
                    type: boolean
                  timeBased:
                    type: boolean
            zero:
              type: boolean
        currencyTotal:
          type: array
          items:
            $ref: '#/components/schemas/CurrencyWithAmountDto'
        dateRange:
          $ref: '#/components/schemas/DateRangeDto'
        expenseTotal:
          type: integer
          format: int64
        hasSubmittedTimesheet:
          type: boolean
        total:
          type: object
          properties:
            nano:
              type: integer
              format: int32
            negative:
              type: boolean
            positive:
              type: boolean
            seconds:
              type: integer
              format: int64
            units:
              type: array
              items:
                type: object
                properties:
                  dateBased:
                    type: boolean
                  duration:
                    type: object
                    properties:
                      nano:
                        type: integer
                        format: int32
                      negative:
                        type: boolean
                      positive:
                        type: boolean
                      seconds:
                        type: integer
                        format: int64
                      zero:
                        type: boolean
                  durationEstimated:
                    type: boolean
                  timeBased:
                    type: boolean
            zero:
              type: boolean
        userId:
          type: string
        userName:
          type: string
    UpdateApprovalRequest:
      required:
        - state
      type: object
      properties:
        note:
          type: string
          description: Additional notes for the approval request.
          example: This is a sample note.
        state:
          type: string
          description: Specifies the approval state to set.
          example: PENDING
          enum:
            - PENDING
            - APPROVED
            - WITHDRAWN_SUBMISSION
            - WITHDRAWN_APPROVAL
            - REJECTED
    UpdateApprovalSettingsRequest:
      type: object
      properties:
        approvalEnabled:
          type: boolean
        approvalPeriod:
          type: string
          enum:
            - WEEKLY
            - SEMI_MONTHLY
            - MONTHLY
        approvalRoles:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
              - ADMIN
              - TEAM_MANAGER
              - PROJECT_MANAGER
    UpdateAudiLogSettingsRequest:
      required:
        - auditEnabled
        - clientAuditing
        - expensesAuditing
        - projectAuditing
        - tagAuditing
        - timeEntryAuditing
      type: object
      properties:
        auditEnabled:
          type: boolean
        clientAuditing:
          type: boolean
        expensesAuditing:
          type: boolean
        projectAuditing:
          type: boolean
        tagAuditing:
          type: boolean
        timeEntryAuditing:
          type: boolean
    UpdateAutomaticLockRequest:
      type: object
      properties:
        changeDay:
          type: string
        changeHour:
          type: integer
          format: int32
          writeOnly: true
        dayOfMonth:
          type: integer
          format: int32
          writeOnly: true
        firstDay:
          type: string
        olderThanPeriod:
          type: string
        olderThanValue:
          minimum: 0
          type: integer
          format: int32
        timeZone:
          type: string
          writeOnly: true
        type:
          type: string
    UpdateClientRequest:
      required:
        - name
      type: object
      properties:
        address:
          maxLength: 3000
          minLength: 0
          type: string
        archived:
          type: boolean
        currencyId:
          type: string
        email:
          type: string
        name:
          maxLength: 100
          minLength: 0
          type: string
        note:
          maxLength: 3000
          minLength: 0
          type: string
    UpdateClientRequestV1:
      required:
        - name
      type: object
      properties:
        address:
          maxLength: 3000
          minLength: 0
          type: string
          description: Represents client's address.
          example: Ground Floor, ABC Bldg., Palo Alto, California, USA 94020
        archived:
          type: boolean
          description: Indicates if client will be archived or not.
        currencyId:
          type: string
          description: Represents currency identifier across the system.
          example: 53a687e29ae1f428e7ebe888
        email:
          type: string
          description: Represents client email.
          example: clientx@example.com
        name:
          maxLength: 100
          minLength: 0
          type: string
          description: Represents client name.
          example: Client X
        note:
          maxLength: 3000
          minLength: 0
          type: string
          description: Represents additional notes for the client.
          example: This is a sample note for the client.
    UpdateCompactViewSettings:
      required:
        - isCompactViewOn
      type: object
      properties:
        isCompactViewOn:
          type: boolean
    UpdateCurrencyCodeRequest:
      required:
        - code
      type: object
      properties:
        code:
          maxLength: 100
          minLength: 1
          type: string
    UpdateCustomFieldRequest:
      required:
        - customFieldId
      type: object
      properties:
        customFieldId:
          type: string
          description: Represents custom field identifier across the system.
          example: 5e4117fe8c625f38930d57b7
        sourceType:
          type: string
          description: Represents a custom field value source type.
          example: WORKSPACE
          enum:
            - WORKSPACE
            - PROJECT
            - TIMEENTRY
        value:
          type: object
          description: Represents a custom field's value.
          example: new value
    UpdateCustomFieldRequestV1:
      required:
        - name
        - type
      type: object
      properties:
        allowedValues:
          type: array
          description: Represents a list of custom field's allowed values.
          example:
            - NA
            - White
            - Black
            - Asian
            - Hispanic
          items:
            type: string
            description: Represents a list of custom field's allowed values.
            example: '["NA","White","Black","Asian","Hispanic"]'
        description:
          type: string
          description: Represents custom field description.
          example: This field contains a user's race.
        name:
          maxLength: 250
          minLength: 2
          type: string
          description: Represents custom field name.
          example: race
        onlyAdminCanEdit:
          type: boolean
          description: Flag to set whether custom field is modifiable only by admin users.
        placeholder:
          type: string
          description: Represents a custom field placeholder value.
          example: This is a sample placeholder.
        required:
          type: boolean
          description: Flag to set whether custom field is mandatory or not.
        status:
          type: string
          description: Represents custom field status
          example: VISIBLE
          enum:
            - INACTIVE
            - VISIBLE
            - INVISIBLE
        type:
          type: string
          description: Represents custom field type.
          example: DROPDOWN_MULTIPLE
          enum:
            - TXT
            - NUMBER
            - DROPDOWN_SINGLE
            - DROPDOWN_MULTIPLE
            - CHECKBOX
            - LINK
        workspaceDefaultValue:
          type: object
          description: Represents a custom field's default value in the workspace.
          example: NA
    UpdateDashboardSelection:
      required:
        - dashboardSelection
      type: object
      properties:
        dashboardSelection:
          type: string
          enum:
            - ME
            - TEAM
    UpdateDefaultWorkspaceCurrencyRequest:
      type: object
      properties:
        currencyId:
          type: string
    UpdateEmailPreferencesRequest:
      required:
        - session
      type: object
      properties:
        alerts:
          type: boolean
        approval:
          type: boolean
        longRunning:
          type: boolean
        onboarding:
          type: boolean
        pto:
          type: boolean
        reminders:
          type: boolean
        scheduledReports:
          type: boolean
        scheduling:
          type: boolean
        sendNewsletter:
          type: boolean
        session:
          type: string
        weeklyUpdates:
          type: boolean
    UpdateEntityCreationPermissionsRequest:
      type: object
      properties:
        whoCanCreateProjectsAndClients:
          type: string
        whoCanCreateTags:
          type: string
        whoCanCreateTasks:
          type: string
    UpdateExpenseRequest:
      required:
        - amount
        - userId
      type: object
      properties:
        amount:
          maximum: 92233720368547758
          type: number
          format: double
        billable:
          type: boolean
        categoryId:
          type: string
        changeFields:
          type: array
          items:
            type: string
            enum:
              - USER
              - DATE
              - PROJECT
              - TASK
              - CATEGORY
              - NOTES
              - AMOUNT
              - BILLABLE
              - FILE
        date:
          type: string
          format: date-time
        file:
          type: string
          format: binary
        notes:
          maxLength: 3000
          minLength: 0
          type: string
        projectId:
          type: string
        taskId:
          type: string
        userId:
          type: string
    UpdateExpenseV1Request:
      required:
        - amount
        - categoryId
        - changeFields
        - date
        - file
        - userId
      type: object
      properties:
        amount:
          maximum: 92233720368547758
          minimum: 0
          type: number
          description: Represents expense amount as double data type.
          format: double
          example: 99.5
        billable:
          type: boolean
          description: Indicates whether expense is billable or not.
        categoryId:
          type: string
          description: Represents category identifier across the system.
          example: 45y687e29ae1f428e7ebe890
        changeFields:
          type: array
          description: Represents a list of expense change fields.
          example:
            - USER
            - DATE
            - PROJECT
          items:
            type: string
            description: Represents a list of expense change fields.
            example: '["USER","DATE","PROJECT"]'
            enum:
              - USER
              - DATE
              - PROJECT
              - TASK
              - CATEGORY
              - NOTES
              - AMOUNT
              - BILLABLE
              - FILE
        date:
          type: string
          description: Provides a valid yyyy-MM-ddThh:mm:ssZ format date.
          format: date-time
          example: "2020-01-01T00:00:00Z"
        file:
          type: string
          format: binary
        notes:
          maxLength: 3000
          minLength: 0
          type: string
          description: Represents notes for an expense.
          example: This is a sample note for this expense.
        projectId:
          type: string
          description: Represents project identifier across the system.
          example: 25b687e29ae1f428e7ebe123
        taskId:
          type: string
          description: Represents task identifier across the system.
          example: 25b687e29ae1f428e7ebe123
        userId:
          type: string
          description: Represents user identifier across the system.
          example: 89b687e29ae1f428e7ebe912
    UpdateFavoriteEntriesRequest:
      type: object
      properties:
        billable:
          type: boolean
        customFields:
          type: array
          items:
            $ref: '#/components/schemas/UpdateCustomFieldRequest'
        description:
          type: string
        name:
          type: string
        projectId:
          type: string
        tagIds:
          type: array
          items:
            type: string
        taskId:
          type: string
    UpdateHolidayRequestV1:
      required:
        - datePeriod
        - name
        - occursAnnually
      type: object
      properties:
        automaticTimeEntryCreation:
          $ref: '#/components/schemas/AutomaticTimeEntryCreationRequest'
        color:
          pattern: ^#(?:[0-9a-fA-F]{6}){1}$
          type: string
          description: 'Provide color in format ^#(?:[0-9a-fA-F]{6}){1}$. Explanation: A valid color code should start with ''#'' and consist of six hexadecimal characters, representing a color in hexadecimal format. Color value is in standard RGB hexadecimal format.'
          example: '#8BC34A'
        datePeriod:
          $ref: '#/components/schemas/DatePeriodRequest'
        everyoneIncludingNew:
          type: boolean
          description: Indicates whether the holiday is shown to new users.
          example: false
        name:
          type: string
          description: Provide the name you would like to use for updating the holiday.
          example: New Year's Day
        occursAnnually:
          type: boolean
          description: Indicates whether the holiday occurs annually.
          example: true
        userGroups:
          $ref: '#/components/schemas/ContainsUserGroupFilterRequest'
        users:
          $ref: '#/components/schemas/ContainsUsersFilterRequestForHoliday'
    UpdateInvoiceItemRequest:
      required:
        - quantity
        - unitPrice
      type: object
      properties:
        description:
          maxLength: 5000
          minLength: 0
          type: string
        itemType:
          type: string
        quantity:
          type: integer
          format: int32
        unitPrice:
          type: integer
          format: int32
    UpdateInvoiceItemTypeRequest:
      required:
        - name
      type: object
      properties:
        name:
          type: string
    UpdateInvoiceRequest:
      required:
        - currency
        - number
      type: object
      properties:
        clientId:
          type: string
        companyId:
          type: string
        currency:
          type: string
        discount:
          type: number
          format: double
          writeOnly: true
        discountPercent:
          type: number
          format: double
        dueDate:
          type: string
          format: date-time
        issuedDate:
          type: string
          format: date-time
        note:
          type: string
        number:
          type: string
        subject:
          type: string
        tax:
          type: number
          format: double
          writeOnly: true
        tax2:
          type: number
          format: double
          writeOnly: true
        tax2Percent:
          type: number
          format: double
        taxPercent:
          type: number
          format: double
        visibleZeroFields:
          uniqueItems: true
          type: array
          items:
            type: string
    UpdateInvoiceRequestV1:
      required:
        - currency
        - discountPercent
        - dueDate
        - issuedDate
        - number
        - tax2Percent
        - taxPercent
      type: object
      properties:
        clientId:
          type: string
          description: Represents client identifier across the system.
          example: 98h687e29ae1f428e7ebe707
        companyId:
          type: string
          description: Represents company identifier across the system.
          example: 04g687e29ae1f428e7ebe123
        currency:
          maxLength: 100
          minLength: 1
          type: string
          description: Represents the currency used by the invoice.
          example: USD
        discountPercent:
          type: number
          description: Represents an invoice discount percent as double.
          format: double
          example: 1.5
        dueDate:
          type: string
          description: Represents an invoice due date in yyyy-MM-ddThh:mm:ssZ format.
          format: date-time
          example: "2020-06-01T08:00:00Z"
        issuedDate:
          type: string
          description: Represents an invoice issued date in yyyy-MM-ddThh:mm:ssZ format.
          format: date-time
          example: "2020-01-01T08:00:00Z"
        note:
          type: string
          description: Represents an invoice note.
          example: This is a sample note for this invoice.
        number:
          type: string
          description: Represents an invoice number.
          example: "202306121129"
        subject:
          type: string
          description: Represents an invoice subject.
          example: January salary
        tax2Percent:
          type: number
          description: Represents an invoice tax 2 percent as double.
          format: double
          example: 0.0
        taxPercent:
          type: number
          description: Represents an invoice tax percent as double.
          format: double
          example: 0.5
        visibleZeroFields:
          type: string
          description: Represents a list of zero value invoice fields that will be visible.
          example: '["TAX","TAX_2","DISCOUNT"]'
          enum:
            - TAX
            - TAX_2
            - DISCOUNT
    UpdateInvoiceSettingsRequest:
      required:
        - labels
      type: object
      properties:
        defaults:
          $ref: '#/components/schemas/InvoiceDefaultSettingsRequest'
        exportFields:
          $ref: '#/components/schemas/InvoiceExportFieldsRequest'
        labels:
          $ref: '#/components/schemas/LabelsCustomizationRequest'
    UpdateInvoiceSettingsRequestV1:
      required:
        - labels
      type: object
      properties:
        defaults:
          $ref: '#/components/schemas/InvoiceDefaultSettingsRequestV1'
        exportFields:
          $ref: '#/components/schemas/InvoiceExportFieldsRequest'
        labels:
          $ref: '#/components/schemas/LabelsCustomizationRequest'
    UpdateInvoicedStatusRequest:
      required:
        - invoiced
        - timeEntries
      type: object
      properties:
        invoiced:
          type: boolean
          description: Indicates whether time entry is invoiced or not.
        timeEntries:
          type: array
          description: Represents a list of invoiced time entry ids
          example:
            - 54m377ddd3fcab07cfbb432w
            - 25b687e29ae1f428e7ebe123
          items:
            type: string
            description: Represents a list of invoiced time entry ids
            example: '["54m377ddd3fcab07cfbb432w","25b687e29ae1f428e7ebe123"]'
    UpdateKioskRequest:
      required:
        - name
      type: object
      properties:
        defaultBreakProjectId:
          type: string
        defaultBreakTaskId:
          type: string
        defaultEntities:
          $ref: '#/components/schemas/DefaultKioskEntitiesRequest'
        defaultProjectId:
          type: string
        defaultTaskId:
          type: string
        everyoneIncludingNew:
          type: boolean
        groups:
          $ref: '#/components/schemas/ContainsUserGroupFilterRequest'
        name:
          maxLength: 250
          minLength: 2
          type: string
        pin:
          $ref: '#/components/schemas/PinSettingRequest'
        sessionDuration:
          type: integer
          format: int32
        users:
          $ref: '#/components/schemas/ContainsUsersFilterRequest'
    UpdateKioskStatusRequest:
      type: object
      properties:
        status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
            - DELETED
    UpdateLangRequest:
      type: object
      properties:
        lang:
          type: string
    UpdateManyClientsRequest:
      required:
        - archived
        - clientIds
      type: object
      properties:
        archiveProjects:
          type: boolean
        archived:
          type: boolean
        clientIds:
          type: array
          items:
            type: string
        markTasksAsDone:
          type: boolean
    UpdateManyTagsRequest:
      required:
        - archived
        - tagIds
      type: object
      properties:
        archived:
          type: boolean
        tagIds:
          type: array
          items:
            type: string
    UpdateNameAndProfilePictureRequest:
      type: object
      properties:
        name:
          type: string
        profilePictureUrl:
          type: string
    UpdatePinCodeRequest:
      required:
        - pinCode
      type: object
      properties:
        pinCode:
          type: string
        since:
          type: string
          writeOnly: true
    UpdatePolicyRequest:
      required:
        - allowHalfDay
        - allowNegativeBalance
        - approve
        - archived
        - everyoneIncludingNew
        - name
        - userGroups
        - users
      type: object
      properties:
        allowHalfDay:
          type: boolean
        allowNegativeBalance:
          type: boolean
        approve:
          $ref: '#/components/schemas/ApproveDto'
        archived:
          type: boolean
        automaticAccrual:
          $ref: '#/components/schemas/AutomaticAccrualRequest'
        automaticTimeEntryCreation:
          $ref: '#/components/schemas/AutomaticTimeEntryCreationRequest'
        color:
          pattern: ^#(?:[0-9a-fA-F]{6}){1}$
          type: string
        everyoneIncludingNew:
          type: boolean
        name:
          type: string
        negativeBalance:
          $ref: '#/components/schemas/NegativeBalanceRequest'
        userGroups:
          $ref: '#/components/schemas/ContainsFilterRequest'
        users:
          $ref: '#/components/schemas/ContainsFilterRequest'
    UpdatePolicyRequestV1:
      required:
        - allowHalfDay
        - allowNegativeBalance
        - approve
        - archived
        - everyoneIncludingNew
        - name
        - userGroups
        - users
      type: object
      properties:
        allowHalfDay:
          type: boolean
          description: Indicates whether policy allows half day.
          example: true
        allowNegativeBalance:
          type: boolean
          description: Indicates whether policy allows negative balance.
          example: false
        approve:
          $ref: '#/components/schemas/ApproveDto'
        archived:
          type: boolean
          description: Indicates whether policy is archived.
          example: false
        automaticAccrual:
          $ref: '#/components/schemas/AutomaticAccrualRequest'
        automaticTimeEntryCreation:
          $ref: '#/components/schemas/AutomaticTimeEntryCreationRequest'
        color:
          pattern: ^#(?:[0-9a-fA-F]{6}){1}$
          type: string
          description: 'Provide color in format ^#(?:[0-9a-fA-F]{6}){1}$. Explanation: A valid color code should start with ''#'' and consist of six hexadecimal characters, representing a color in hexadecimal format. Color value is in standard RGB hexadecimal format.'
          example: '#8BC34A'
        everyoneIncludingNew:
          type: boolean
          description: Indicates whether the policy is shown to new users.
          example: false
        name:
          type: string
          description: Provide the name you would like to use for updating the policy.
          example: Days
        negativeBalance:
          $ref: '#/components/schemas/NegativeBalanceRequest'
        userGroups:
          $ref: '#/components/schemas/UserGroupIdsSchema'
        users:
          $ref: '#/components/schemas/UserIdsSchema'
    UpdateProjectMembershipsRequest:
      required:
        - memberships
      type: object
      properties:
        memberships:
          type: array
          description: Represents a list of users with id and rates request objects.
          items:
            $ref: '#/components/schemas/UserIdWithRatesRequest'
    UpdateProjectRequest:
      type: object
      properties:
        archived:
          type: boolean
        billable:
          type: boolean
        clientId:
          type: string
        color:
          pattern: ^#(?:[0-9a-fA-F]{6}){1}$
          type: string
        costRate:
          $ref: '#/components/schemas/CostRateRequest'
        hourlyRate:
          $ref: '#/components/schemas/HourlyRateRequest'
        isPublic:
          type: boolean
        name:
          type: string
        note:
          type: string
    UpdateProjectsRequest:
      type: object
      properties:
        projectUpdateSyncId:
          type: string
          writeOnly: true
        updateSyncId:
          type: string
    UpdatePumbleIntegrationSettingsRequest:
      type: object
      properties:
        showChatWidget:
          type: boolean
          writeOnly: true
    UpdateQuantityRequest:
      required:
        - quantity
        - seatType
      type: object
      properties:
        itemType:
          type: string
          writeOnly: true
        quantity:
          minimum: 0
          type: integer
          format: int32
        seatType:
          type: string
          enum:
            - REGULAR
            - LIMITED
    UpdateRoleRequest:
      type: object
      properties:
        containsRoleObjectsFilter:
          $ref: '#/components/schemas/ContainsUsersFilterRequest'
        entity:
          $ref: '#/components/schemas/ContainsUsersFilterRequest'
        role:
          type: string
          enum:
            - WORKSPACE_ADMIN
            - OWNER
            - TEAM_MANAGER
            - PROJECT_MANAGER
    UpdateRoundRequest:
      type: object
      properties:
        minutes:
          type: string
        round:
          type: string
    UpdateSchedulingSettingsRequest:
      type: object
      properties:
        canSeeBillableAndCostAmount:
          type: boolean
          writeOnly: true
        enabled:
          type: boolean
        everyoneCanSeeAllAssignments:
          type: boolean
        whoCanCreateAssignments:
          type: string
    UpdateSidebarRequest:
      type: object
      properties:
        sidebar:
          type: array
          items:
            $ref: '#/components/schemas/SidebarItemRequest'
    UpdateSummaryReportSettingsRequest:
      required:
        - group
        - subgroup
      type: object
      properties:
        group:
          type: string
        subgroup:
          type: string
    UpdateSurveyResponseRequest:
      required:
        - response
        - status
      type: object
      properties:
        response:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/SurveyResponseAnswerDto'
        responseTransformedToDomain:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/SurveyResponseAnswer'
        status:
          type: string
    UpdateTagRequest:
      required:
        - name
      type: object
      properties:
        archived:
          type: boolean
          description: Indicates whether a tag will be archived or not.
        name:
          maxLength: 100
          minLength: 0
          type: string
          description: Represents tag name.
          example: Sprint1
    UpdateTaskRequest:
      required:
        - name
      type: object
      properties:
        assigneeId:
          type: string
          writeOnly: true
        assigneeIds:
          uniqueItems: true
          type: array
          items:
            type: string
        billable:
          type: boolean
        budgetEstimate:
          minimum: 0
          type: integer
          format: int64
        estimate:
          type: object
          properties:
            nano:
              type: integer
              format: int32
            negative:
              type: boolean
            positive:
              type: boolean
            seconds:
              type: integer
              format: int64
            units:
              type: array
              items:
                type: object
                properties:
                  dateBased:
                    type: boolean
                  duration:
                    type: object
                    properties:
                      nano:
                        type: integer
                        format: int32
                      negative:
                        type: boolean
                      positive:
                        type: boolean
                      seconds:
                        type: integer
                        format: int64
                      zero:
                        type: boolean
                  durationEstimated:
                    type: boolean
                  timeBased:
                    type: boolean
            zero:
              type: boolean
        name:
          type: string
        status:
          type: string
        userGroupIds:
          uniqueItems: true
          type: array
          items:
            type: string
    UpdateTimeEntryBillableRequest:
      required:
        - billable
      type: object
      properties:
        billable:
          type: boolean
    UpdateTimeEntryBulkRequest:
      required:
        - id
      type: object
      properties:
        billable:
          type: boolean
          description: Indicates whether a time entry is billable or not.
        customFields:
          maxItems: 50
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/UpdateCustomFieldRequest'
        description:
          maxLength: 3000
          minLength: 0
          type: string
          description: Represents time entry description.
          example: This is a sample time entry description.
        end:
          type: string
          description: Represents an end date in yyyy-MM-ddThh:mm:ssZ format.
          format: date-time
          example: "2021-01-01T00:00:00Z"
        id:
          type: string
          description: Represents time entry identifier across the system.
          example: 64c777ddd3fcab07cfbb210c
        projectId:
          type: string
          description: Represents project identifier across the system.
          example: 25b687e29ae1f428e7ebe123
        start:
          type: string
          description: Represents a start date in yyyy-MM-ddThh:mm:ssZ format.
          format: date-time
          example: "2020-01-01T00:00:00Z"
        tagIds:
          type: array
          description: Represents a list of tag ids.
          example:
            - 321r77ddd3fcab07cfbb567y
            - 44x777ddd3fcab07cfbb88f
          items:
            type: string
            description: Represents a list of tag ids.
            example: '["321r77ddd3fcab07cfbb567y","44x777ddd3fcab07cfbb88f"]'
        taskId:
          type: string
          description: Represents task identifier across the system.
          example: 54m377ddd3fcab07cfbb432w
        type:
          type: string
          enum:
            - REGULAR
            - BREAK
    UpdateTimeEntryDescriptionRequest:
      type: object
      properties:
        description:
          type: string
    UpdateTimeEntryEndRequest:
      type: object
      properties:
        end:
          type: string
          format: date-time
    UpdateTimeEntryProjectRequest:
      type: object
      properties:
        projectId:
          $ref: '#/components/schemas/ProjectId'
    UpdateTimeEntryRequest:
      type: object
      properties:
        billable:
          type: boolean
        customFields:
          maxItems: 50
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/UpdateCustomFieldRequest'
        description:
          maxLength: 3000
          minLength: 0
          type: string
        end:
          type: string
          format: date-time
        projectId:
          type: string
        start:
          type: string
          format: date-time
        startAsString:
          type: string
        tagIds:
          type: array
          items:
            type: string
        taskId:
          type: string
    UpdateTimeEntryStartRequest:
      type: object
      properties:
        start:
          type: string
          format: date-time
    UpdateTimeEntryTagsRequest:
      type: object
      properties:
        tagIds:
          type: array
          items:
            type: string
    UpdateTimeEntryTaskRequest:
      type: object
      properties:
        taskId:
          $ref: '#/components/schemas/TaskId'
    UpdateTimeEntryUserRequest:
      required:
        - userId
      type: object
      properties:
        userId:
          type: string
    UpdateTimeOffRequest:
      type: object
      properties:
        active:
          type: boolean
        regularUserCanSeeOtherUsersTimeOff:
          type: boolean
        type:
          type: boolean
          writeOnly: true
    UpdateTimeTrackingSettingsRequest:
      required:
        - timeTrackingManual
      type: object
      properties:
        timeTrackingManual:
          type: boolean
    UpdateTimezoneRequest:
      required:
        - timezone
      type: object
      properties:
        timezone:
          type: string
    UpdateUserGroupNameRequest:
      required:
        - name
      type: object
      properties:
        name:
          maxLength: 100
          minLength: 0
          type: string
    UpdateUserGroupRequest:
      required:
        - name
      type: object
      properties:
        name:
          maxLength: 100
          minLength: 0
          type: string
          description: Represents user group name.
          example: development_team
    UpdateUserRolesRequest:
      type: object
      properties:
        roles:
          type: array
          writeOnly: true
          items:
            $ref: '#/components/schemas/UpdateRoleRequest'
        updateRoleRequests:
          type: array
          items:
            $ref: '#/components/schemas/UpdateRoleRequest'
    UpdateUserSettingsRequest:
      required:
        - settings
      type: object
      properties:
        name:
          type: string
        profilePicture:
          type: string
          writeOnly: true
        profilePictureUrl:
          type: string
        settings:
          $ref: '#/components/schemas/UserSettingsDto'
    UpdateUserStatusRequest:
      required:
        - status
      type: object
      properties:
        status:
          type: string
          description: Represents membership status.
          example: ACTIVE
          enum:
            - ACTIVE
            - INACTIVE
    UpdateUsersFromUserGroupsRequest:
      type: object
      properties:
        userFilter:
          $ref: '#/components/schemas/ContainsUsersFilterRequest'
        userGroupFilter:
          $ref: '#/components/schemas/ContainsUserGroupFilterRequest'
        userGroupId:
          type: string
        userId:
          type: string
    UpdateWebhookRequestV1:
      required:
        - triggerSource
        - triggerSourceType
        - url
        - webhookEvent
      type: object
      properties:
        name:
          maxLength: 30
          minLength: 2
          type: string
          description: Represents webhook name.
          example: Stripe
        triggerSource:
          type: array
          description: Represents a list of trigger sources.
          example:
            - 54a687e29ae1f428e7ebe909
            - 87p187e29ae1f428e7ebej56
          items:
            type: string
            description: Represents a list of trigger sources.
            example: '["54a687e29ae1f428e7ebe909","87p187e29ae1f428e7ebej56"]'
        triggerSourceType:
          type: string
          description: Represents a webhook event trigger source type.
          example: PROJECT_ID
          enum:
            - PROJECT_ID
            - USER_ID
            - TAG_ID
            - TASK_ID
            - WORKSPACE_ID
            - USER_GROUP_ID
            - INVOICE_ID
            - ASSIGNMENT_ID
            - EXPENSE_ID
        url:
          type: string
          description: Represents workspace identifier across the system.
          example: https://example-clockify.com/stripeEndpoint
        webhookEvent:
          type: string
          description: Represents webhook event type.
          enum:
            - NEW_PROJECT
            - NEW_TASK
            - NEW_CLIENT
            - NEW_TIMER_STARTED
            - TIMER_STOPPED
            - TIME_ENTRY_UPDATED
            - TIME_ENTRY_DELETED
            - NEW_TIME_ENTRY
            - NEW_TAG
            - USER_DELETED_FROM_WORKSPACE
            - USER_JOINED_WORKSPACE
            - USER_DEACTIVATED_ON_WORKSPACE
            - USER_ACTIVATED_ON_WORKSPACE
            - USER_EMAIL_CHANGED
            - USER_UPDATED
            - NEW_INVOICE
            - INVOICE_UPDATED
            - NEW_APPROVAL_REQUEST
            - APPROVAL_REQUEST_STATUS_UPDATED
            - TIME_OFF_REQUESTED
            - TIME_OFF_REQUEST_APPROVED
            - TIME_OFF_REQUEST_REJECTED
            - TIME_OFF_REQUEST_WITHDRAWN
            - BALANCE_UPDATED
    UpdateWorkspaceRequest:
      required:
        - name
      type: object
      properties:
        imageUrl:
          type: string
        name:
          type: string
        workspaceSettings:
          $ref: '#/components/schemas/UpdateWorkspaceSettingsRequest'
    UpdateWorkspaceSettingsRequest:
      required:
        - projectGroupingLabel
      type: object
      properties:
        activeBillableHours:
          type: boolean
          writeOnly: true
        adminOnlyPages:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
              - PROJECT
              - TEAM
              - REPORTS
        approvalSettings:
          $ref: '#/components/schemas/UpdateApprovalSettingsRequest'
        auditLogSettings:
          $ref: '#/components/schemas/UpdateAudiLogSettingsRequest'
        automaticLock:
          $ref: '#/components/schemas/UpdateAutomaticLockRequest'
        breakSettings:
          $ref: '#/components/schemas/BreakSettingsRequest'
        canManagerEditUsersTime:
          type: boolean
          writeOnly: true
        canManagerLaunchKiosk:
          type: boolean
          writeOnly: true
        canSeeTimeSheet:
          type: boolean
          writeOnly: true
        canSeeTracker:
          type: boolean
          writeOnly: true
        companyAddress:
          type: string
        costRateActive:
          type: boolean
        currencyFormat:
          type: string
          enum:
            - CURRENCY_SPACE_VALUE
            - VALUE_SPACE_CURRENCY
            - CURRENCY_VALUE
            - VALUE_CURRENCY
        decimalFormat:
          type: boolean
          deprecated: true
        defaultBillableProjects:
          type: boolean
          writeOnly: true
        durationFormat:
          type: string
          enum:
            - FULL
            - COMPACT
            - DECIMAL
        entityCreationPermissions:
          $ref: '#/components/schemas/UpdateEntityCreationPermissionsRequest'
        expensesEnabled:
          type: boolean
          writeOnly: true
        favoriteEntriesEnabled:
          type: boolean
          writeOnly: true
        forceDescription:
          type: boolean
          writeOnly: true
        forceProjects:
          type: boolean
          writeOnly: true
        forceTags:
          type: boolean
          writeOnly: true
        forceTasks:
          type: boolean
          writeOnly: true
        highResolutionScreenshots:
          type: boolean
          writeOnly: true
        invoicingEnabled:
          type: boolean
          writeOnly: true
        isCostRateActive:
          type: boolean
          writeOnly: true
        isProjectPublicByDefault:
          type: boolean
          writeOnly: true
        kioskAutologinEnabled:
          type: boolean
          writeOnly: true
        kioskEnabled:
          type: boolean
          writeOnly: true
        kioskProjectsAndTasksEnabled:
          type: boolean
          writeOnly: true
        locationsEnabled:
          type: boolean
          writeOnly: true
        lockTimeEntries:
          type: string
          writeOnly: true
        lockTimeZone:
          type: string
          writeOnly: true
        lockedTimeEntries:
          type: string
        multiFactorEnabled:
          type: boolean
        numberFormat:
          type: string
          enum:
            - COMMA_PERIOD
            - PERIOD_COMMA
            - QUOTATION_MARK_PERIOD
            - SPACE_COMMA
        onlyAdminsCanChangeBillableStatus:
          type: boolean
          writeOnly: true
        onlyAdminsCreateProject:
          type: boolean
          writeOnly: true
        onlyAdminsCreateTag:
          type: boolean
          writeOnly: true
        onlyAdminsCreateTask:
          type: boolean
          writeOnly: true
        onlyAdminsSeeAllTimeEntries:
          type: boolean
          writeOnly: true
        onlyAdminsSeeBillableRates:
          type: boolean
          writeOnly: true
        onlyAdminsSeeDashboard:
          type: boolean
          writeOnly: true
        onlyAdminsSeeProjectStatus:
          type: boolean
          writeOnly: true
        onlyAdminsSeePublicProjectsEntries:
          type: boolean
          writeOnly: true
        projectFavorite:
          type: boolean
          writeOnly: true
        projectFavorites:
          type: boolean
        projectGroupingLabel:
          maxLength: 200
          minLength: 1
          type: string
        projectPickerSpecialFilter:
          type: boolean
        projectPublicByDefault:
          type: boolean
        pumbleIntegrationSettings:
          $ref: '#/components/schemas/UpdatePumbleIntegrationSettingsRequest'
        pumbleIntegrationSettingsRequest:
          $ref: '#/components/schemas/UpdatePumbleIntegrationSettingsRequest'
        round:
          $ref: '#/components/schemas/UpdateRoundRequest'
        schedulingEnabled:
          type: boolean
        schedulingSettings:
          $ref: '#/components/schemas/UpdateSchedulingSettingsRequest'
        screenshotsEnabled:
          type: boolean
          writeOnly: true
        taskBillableEnabled:
          type: boolean
          writeOnly: true
        taskRateEnabled:
          type: boolean
          writeOnly: true
        timeApprovalEnabled:
          type: boolean
          writeOnly: true
        timeOff:
          $ref: '#/components/schemas/UpdateTimeOffRequest'
        timeRoundingInReports:
          type: boolean
          writeOnly: true
        timeTrackingMode:
          type: string
          writeOnly: true
          enum:
            - DEFAULT
            - STOPWATCH_ONLY
        timesheetOn:
          type: boolean
        trackTimeDownToSecond:
          type: boolean
          writeOnly: true
        trackerOn:
          type: boolean
        weekStart:
          type: string
          writeOnly: true
        workingDays:
          uniqueItems: true
          type: array
          items:
            type: string
    UpgradePriceDto:
      type: object
      properties:
        currency:
          type: string
        price:
          type: number
          format: double
        taxes:
          type: object
          additionalProperties:
            type: number
            format: double
        total:
          type: number
          format: double
        totalExcludingVAT:
          type: number
          format: double
    UploadFileResponse:
      type: object
      properties:
        name:
          type: string
        url:
          type: string
    UploadFileResponseV1:
      type: object
      properties:
        name:
          type: string
          description: File name of the uploaded image
          example: image-01234567.jpg
        url:
          type: string
          description: The URL of the uploaded image in the server
          example: https://clockify.com/image-01234567.jpg
    UpsertUserCustomFieldRequest:
      required:
        - customFieldId
      type: object
      properties:
        customFieldId:
          type: string
          description: Represents custom field identifier across the system.
          example: 5e4117fe8c625f38930d57b7
        value:
          type: object
          description: Represents custom field value.
          example: 20231211-12345
    UpsertUserCustomFieldRequestV1:
      type: object
      properties:
        value:
          type: object
          description: Represents custom field value.
          example: 20231211-12345
    Url:
      type: object
    UserAccessDisabledDto:
      type: object
      properties:
        accessDisabledDetails:
          type: object
          additionalProperties:
            type: string
        accessEnabled:
          type: boolean
        apiKey:
          $ref: '#/components/schemas/ApiKeyDto'
        countActiveWsMemberships:
          type: integer
          format: int64
        countInactiveWsMemberships:
          type: integer
          format: int64
        countInvitedWsMemberships:
          type: integer
          format: int64
        countOfWorkspaces:
          type: integer
          format: int64
        disabledAt:
          type: string
        disabledBy:
          type: string
        email:
          type: string
        entityId:
          type: string
        id:
          type: string
        name:
          type: string
        reason:
          type: string
        status:
          type: string
          enum:
            - ACTIVE
            - PENDING_EMAIL_VERIFICATION
            - DELETED
            - NOT_REGISTERED
            - LIMITED
            - LIMITED_DELETED
    UserAdminDto:
      type: object
      properties:
        accessEnabled:
          type: boolean
        apiKey:
          $ref: '#/components/schemas/ApiKeyDto'
        countActiveWsMemberships:
          type: integer
          format: int64
        countInactiveWsMemberships:
          type: integer
          format: int64
        countInvitedWsMemberships:
          type: integer
          format: int64
        countOfWorkspaces:
          type: integer
          format: int64
        email:
          type: string
        id:
          type: string
        name:
          type: string
        status:
          type: string
          enum:
            - ACTIVE
            - PENDING_EMAIL_VERIFICATION
            - DELETED
            - NOT_REGISTERED
            - LIMITED
            - LIMITED_DELETED
    UserAssignmentsRequest:
      type: object
      properties:
        end:
          type: string
          format: date-time
        start:
          type: string
          format: date-time
        statusFilter:
          type: string
          enum:
            - PUBLISHED
            - UNPUBLISHED
            - ALL
    UserAttendanceReportFilterRequest:
      type: object
      properties:
        customFields:
          type: array
          items:
            $ref: '#/components/schemas/CustomFieldFilter'
        includeUsers:
          type: boolean
        page:
          minimum: 0
          type: integer
          format: int32
        pageSize:
          minimum: 1
          type: integer
          format: int32
        searchValue:
          type: string
        sortColumn:
          type: string
        sortOrder:
          type: string
        statuses:
          type: array
          items:
            type: string
        userIds:
          uniqueItems: true
          type: array
          items:
            type: string
        userStatuses:
          type: array
          items:
            type: string
    UserCapacityDto:
      type: object
      properties:
        capacity:
          type: integer
          format: int64
        userId:
          type: string
    UserChangesPasswordRequest:
      required:
        - newPassword
        - newPasswordRepeated
        - oldPassword
      type: object
      properties:
        newPassword:
          type: string
        newPasswordRepeated:
          type: string
        oldPassword:
          type: string
    UserCustomFieldPutRequest:
      type: object
      properties:
        userCustomFields:
          type: array
          items:
            $ref: '#/components/schemas/UpsertUserCustomFieldRequest'
    UserCustomFieldValueDto:
      type: object
      properties:
        customFieldId:
          type: string
        sourceType:
          type: string
        userId:
          type: string
        value:
          type: object
    UserCustomFieldValueDtoV1:
      type: object
      properties:
        customFieldId:
          type: string
          description: Represents custom field identifier across the system.
          example: 5e4117fe8c625f38930d57b7
        customFieldName:
          type: string
          description: Represents custom field name.
          example: TIN
        customFieldType:
          $ref: '#/components/schemas/CustomFieldType'
        userId:
          type: string
          description: Represents user identifier across the system.
          example: 5a0ab5acb07987125438b60f
        value:
          type: object
          description: Represents custom field value.
          example: 20231211-12345
    UserCustomFieldValueFullDto:
      type: object
      properties:
        customField:
          $ref: '#/components/schemas/CustomFieldDto'
        customFieldDto:
          $ref: '#/components/schemas/CustomFieldDto'
        customFieldId:
          type: string
        name:
          type: string
        sourceType:
          type: string
        type:
          type: string
        userId:
          type: string
        value:
          type: object
    UserCustomFieldValueFullDtoV1:
      type: object
      properties:
        customField:
          $ref: '#/components/schemas/CustomFieldDtoV1'
        customFieldId:
          type: string
          description: Represents custom field identifier across the system.
          example: 5e4117fe8c625f38930d57b7
        name:
          type: string
          description: Represents user custom field name.
          example: race
        sourceType:
          type: string
          description: Represents user custom field source type.
          example: WORKSPACE
          enum:
            - WORKSPACE
            - USER
        type:
          type: string
          description: Represents custom field type.
          example: DROPDOWN_MULTIPLE
          enum:
            - TXT
            - NUMBER
            - DROPDOWN_SINGLE
            - DROPDOWN_MULTIPLE
            - CHECKBOX
            - LINK
        userId:
          type: string
          description: Represents user identifier across the system.
          example: 5a0ab5acb07987125438b60f
        value:
          type: object
          description: Represents user custom field value.
          example: Asian
      description: Represents a list of value objects for user’s custom fields.
    UserDeleteRequest:
      type: object
      properties:
        emailForm:
          type: string
          writeOnly: true
        message:
          type: string
    UserDto:
      type: object
      properties:
        activeWorkspace:
          type: string
        defaultWorkspace:
          type: string
        email:
          type: string
        id:
          type: string
        memberships:
          type: array
          items:
            $ref: '#/components/schemas/MembershipDto'
        name:
          type: string
        profilePicture:
          type: string
        settings:
          $ref: '#/components/schemas/UserSettingsDto'
        status:
          type: string
          enum:
            - ACTIVE
            - PENDING_EMAIL_VERIFICATION
            - DELETED
            - NOT_REGISTERED
            - LIMITED
            - LIMITED_DELETED
    UserDtoV1:
      type: object
      properties:
        activeWorkspace:
          type: string
          description: Represents user's active workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
        customFields:
          type: array
          description: Represents a list of value objects for user’s custom fields.
          items:
            $ref: '#/components/schemas/UserCustomFieldValueDtoV1'
        defaultWorkspace:
          type: string
          description: Represents user default workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
        email:
          type: string
          description: Represents email address of the user.
          example: johndoe@example.com
        id:
          type: string
          description: Represents user identifier across the system.
          example: 5a0ab5acb07987125438b60f
        memberships:
          type: array
          description: Represents a list of membership objects.
          items:
            $ref: '#/components/schemas/MembershipDtoV1'
        name:
          type: string
          description: Represents name of the user.
          example: John Doe
        profilePicture:
          type: string
          description: Represents profile image path of the user.
          example: https://www.url.com/profile-picture1234567890.png
        settings:
          $ref: '#/components/schemas/UserSettingsDtoV1'
        status:
          $ref: '#/components/schemas/AccountStatus'
    UserEmailsRequest:
      type: object
      properties:
        emails:
          type: array
          items:
            type: string
    UserForgotPinRequest:
      required:
        - userId
      type: object
      properties:
        userId:
          type: string
    UserGroupAttendanceFilterRequest:
      type: object
      properties:
        excludedIds:
          uniqueItems: true
          type: array
          writeOnly: true
          items:
            type: string
        forceFilter:
          type: boolean
        includeUsers:
          type: boolean
        page:
          minimum: 0
          type: integer
          format: int32
        pageSize:
          minimum: 1
          type: integer
          format: int32
        searchValue:
          type: string
        userIds:
          uniqueItems: true
          type: array
          items:
            type: string
    UserGroupDto:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        userIds:
          type: array
          items:
            type: string
        workspaceId:
          type: string
    UserGroupDtoV1:
      type: object
      properties:
        id:
          type: string
          description: Represents user group identifier across the system.
          example: 76a687e29ae1f428e7ebe101
        name:
          type: string
          description: Represents user group name.
          example: development_team
        userIds:
          type: array
          description: Represents a list of users' identifiers across the system.
          example:
            - 5a0ab5acb07987125438b60f
            - 98j4b5acb07987125437y32
          items:
            type: string
            description: Represents a list of users' identifiers across the system.
            example: '["5a0ab5acb07987125438b60f","98j4b5acb07987125437y32"]'
        workspaceId:
          type: string
          description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
    UserGroupIdsSchema:
      type: object
      properties:
        contains:
          type: string
          example: CONTAINS
          enum:
            - CONTAINS
            - DOES_NOT_CONTAIN
        ids:
          uniqueItems: true
          type: array
          description: Represents ids upon which filtering is performed.
          example:
            - 5b715612b079875110791111
            - 5b715612b079875110791222
          items:
            type: string
            description: Represents ids upon which filtering is performed.
            example: '["5b715612b079875110791111","5b715612b079875110791222"]'
        status:
          type: string
          description: Represents user status.
          example: ALL
          enum:
            - ALL
            - ACTIVE
            - INACTIVE
      description: Provide list with user group ids and corresponding status.
    UserGroupInfoDto:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    UserGroupReportFilterRequest:
      type: object
      properties:
        excludeIds:
          uniqueItems: true
          type: array
          items:
            type: string
        forApproval:
          type: boolean
        forceFilter:
          type: boolean
        ignoreFilter:
          type: boolean
        page:
          minimum: 0
          type: integer
          format: int32
        pageSize:
          minimum: 1
          type: integer
          format: int32
        searchValue:
          type: string
    UserGroupRequest:
      required:
        - name
      type: object
      properties:
        name:
          maxLength: 100
          minLength: 0
          type: string
          description: Represents user group name.
          example: development_team
    UserGroupUserRequest:
      required:
        - userId
      type: object
      properties:
        userId:
          type: string
          description: Represents user identifier across the system.
          example: 5a0ab5acb07987125438b60f
    UserIdWithRatesRequest:
      required:
        - userId
      type: object
      properties:
        costRate:
          $ref: '#/components/schemas/CostRateRequestV1'
        hourlyRate:
          $ref: '#/components/schemas/HourlyRateRequestV1'
        userId:
          type: string
          description: Represents user identifier across the system.
          example: 12t687e29ae1f428e7ebe202
      description: Represents a list of users with id and rates request objects.
    UserIdsSchema:
      type: object
      properties:
        contains:
          type: string
          example: CONTAINS
          enum:
            - CONTAINS
            - DOES_NOT_CONTAIN
        ids:
          uniqueItems: true
          type: array
          description: Represents ids upon which filtering is performed.
          example:
            - 5b715612b079875110791111
            - 5b715612b079875110791222
          items:
            type: string
            description: Represents ids upon which filtering is performed.
            example: '["5b715612b079875110791111","5b715612b079875110791222"]'
        status:
          type: string
          description: Represents user status.
          example: ALL
          enum:
            - ALL
            - ACTIVE
            - INACTIVE
      description: Provide list with user ids and corresponding status.
    UserInfoDto:
      type: object
      properties:
        email:
          type: string
        name:
          type: string
        timeZone:
          type: string
        userId:
          type: string
    UserInfoWithMembershipStatusDto:
      type: object
      properties:
        email:
          type: string
        membershipStatus:
          type: string
          enum:
            - PENDING
            - ACTIVE
            - DECLINED
            - INACTIVE
            - ALL
        name:
          type: string
        userId:
          type: string
    UserListAndCountDto:
      type: object
      properties:
        count:
          type: integer
          format: int64
        users:
          type: array
          items:
            $ref: '#/components/schemas/UserDto'
    UserNotificationMarkAsReadManyRequest:
      type: object
      properties:
        notifications:
          type: array
          items:
            type: string
    UserNotificationMarkAsReadRequest:
      required:
        - notificationId
      type: object
      properties:
        notificationId:
          type: string
    UserReportFilterRequest:
      type: object
      properties:
        customFields:
          type: array
          items:
            $ref: '#/components/schemas/CustomFieldFilter'
        excludeIds:
          uniqueItems: true
          type: array
          items:
            type: string
        forApproval:
          type: boolean
        forceFilter:
          type: boolean
        ignoreFilter:
          type: boolean
        page:
          minimum: 0
          type: integer
          format: int32
        pageSize:
          minimum: 1
          type: integer
          format: int32
        reportType:
          type: string
        searchValue:
          type: string
        sortColumn:
          type: string
        sortOrder:
          type: string
        statuses:
          type: array
          items:
            type: string
        userStatuses:
          type: array
          items:
            type: string
    UserRolesInfoDto:
      type: object
      properties:
        user-roles:
          type: array
          writeOnly: true
          items:
            $ref: '#/components/schemas/RoleInfoDto'
        userRoles:
          type: array
          items:
            $ref: '#/components/schemas/RoleInfoDto'
    UserSetPasswordRequest:
      required:
        - newPassword
        - retypedNewPassword
      type: object
      properties:
        newPassword:
          type: string
        retypedNewPassword:
          type: string
    UserSettingsDto:
      required:
        - dateFormat
        - timeFormat
        - timeZone
      type: object
      properties:
        alerts:
          type: boolean
        approval:
          type: boolean
        collapseAllProjectLists:
          type: boolean
        darkTheme:
          type: boolean
        dashboardPinToTop:
          type: boolean
        dashboardSelection:
          type: string
          enum:
            - ME
            - TEAM
        dashboardViewType:
          type: string
          enum:
            - PROJECT
            - BILLABILITY
        dateFormat:
          type: string
        groupSimilarEntriesDisabled:
          type: boolean
        isCompactViewOn:
          type: boolean
        lang:
          type: string
        longRunning:
          type: boolean
        multiFactorEnabled:
          type: boolean
        myStartOfDay:
          type: string
        onboarding:
          type: boolean
        projectListCollapse:
          type: integer
          format: int32
        projectPickerSpecialFilter:
          type: boolean
        pto:
          type: boolean
        reminders:
          type: boolean
        scheduledReports:
          type: boolean
        scheduling:
          type: boolean
        sendNewsletter:
          type: boolean
        showOnlyWorkingDays:
          type: boolean
        summaryReportSettings:
          $ref: '#/components/schemas/SummaryReportSettingsDto'
        theme:
          type: string
          enum:
            - DARK
            - DEFAULT
        timeFormat:
          type: string
        timeTrackingManual:
          type: boolean
        timeZone:
          type: string
        weekStart:
          type: string
          enum:
            - MONDAY
            - TUESDAY
            - WEDNESDAY
            - THURSDAY
            - FRIDAY
            - SATURDAY
            - SUNDAY
        weeklyUpdates:
          type: boolean
    UserSettingsDtoV1:
      required:
        - dateFormat
        - timeFormat
        - timeZone
      type: object
      properties:
        alerts:
          type: boolean
          example: true
        approval:
          type: boolean
          example: false
        collapseAllProjectLists:
          type: boolean
          example: true
        dashboardPinToTop:
          type: boolean
          example: true
        dashboardSelection:
          type: string
          example: ME
          enum:
            - ME
            - TEAM
        dashboardViewType:
          type: string
          example: BILLABILITY
          enum:
            - PROJECT
            - BILLABILITY
        dateFormat:
          type: string
          description: Represents a date format.
          example: MM/DD/YYYY
        groupSimilarEntriesDisabled:
          type: boolean
          example: true
        isCompactViewOn:
          type: boolean
          example: false
        lang:
          type: string
          example: en
        longRunning:
          type: boolean
          example: true
        multiFactorEnabled:
          type: boolean
          example: true
        myStartOfDay:
          type: string
          example: 09:00
        onboarding:
          type: boolean
          example: false
        projectListCollapse:
          type: integer
          format: int32
          example: 15
        projectPickerTaskFilter:
          type: boolean
          example: false
        pto:
          type: boolean
          example: true
        reminders:
          type: boolean
          example: false
        scheduledReports:
          type: boolean
          example: true
        scheduling:
          type: boolean
          example: false
        sendNewsletter:
          type: boolean
          example: false
        showOnlyWorkingDays:
          type: boolean
          example: false
        summaryReportSettings:
          $ref: '#/components/schemas/SummaryReportSettingsDtoV1'
        theme:
          type: string
          example: DARK
          enum:
            - DARK
            - DEFAULT
        timeFormat:
          type: string
          description: Represents a time format enum.
          example: HOUR24
          enum:
            - HOUR12
            - HOUR24
        timeTrackingManual:
          type: boolean
          example: true
        timeZone:
          type: string
          description: Represents a valid timezone ID
          example: Asia/Aden
        weekStart:
          $ref: '#/components/schemas/DayOfWeek'
        weeklyUpdates:
          type: boolean
          example: false
      description: Represents user settings object.
    UserSummaryDto:
      type: object
      properties:
        email:
          type: string
        id:
          type: string
        name:
          type: string
    UsersAndCountDto:
      type: object
      properties:
        count:
          type: integer
          format: int64
        users:
          type: array
          items:
            $ref: '#/components/schemas/UserAdminDto'
    UsersDto:
      type: object
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/UserAdminDto'
    UsersExistRequest:
      required:
        - userEmails
      type: object
      properties:
        userEmails:
          uniqueItems: true
          type: array
          items:
            type: string
        userIds:
          uniqueItems: true
          type: array
          items:
            type: string
    UsersIdsRequest:
      type: object
      properties:
        excludeIds:
          uniqueItems: true
          type: array
          items:
            type: string
        ids:
          maxItems: 50
          minItems: 0
          uniqueItems: true
          type: array
          items:
            type: string
    UsersNameAndProfilePictureDto:
      type: object
      properties:
        name:
          type: string
        profilePictureUrl:
          type: string
    VerificationCodeRequest:
      type: object
      properties:
        currentLang:
          type: string
        state:
          type: string
        terms:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/TermDto'
        timeZone:
          type: string
    VisibleZeroFieldsInvoice:
      type: object
      description: Represents a list of zero value invoice fields that will be visible.
      example:
        - TAX
        - TAX_2
        - DISCOUNT
      oneOf:
        - type: string
          enum:
            - TAX
            - TAX_2
            - DISCOUNT
      properties:
        DISCOUNT:
          type: string
          enum:
            - TAX
            - TAX_2
            - DISCOUNT
        TAX:
          type: string
          enum:
            - TAX
            - TAX_2
            - DISCOUNT
        TAX_2:
          type: string
          enum:
            - TAX
            - TAX_2
            - DISCOUNT
    WalkthroughCreationRequest:
      type: object
      properties:
        walkthrough:
          type: string
    WalkthroughDto:
      type: object
      properties:
        unfinished:
          type: array
          items:
            type: string
            enum:
              - INITIAL_APP_SWITCHER
    WebhookDto:
      type: object
      properties:
        authToken:
          type: string
        enabled:
          type: boolean
        id:
          type: string
        name:
          type: string
        triggerSource:
          type: array
          items:
            type: string
        triggerSourceType:
          type: string
          enum:
            - PROJECT_ID
            - USER_ID
            - TAG_ID
            - TASK_ID
            - WORKSPACE_ID
            - USER_GROUP_ID
            - INVOICE_ID
            - ASSIGNMENT_ID
            - EXPENSE_ID
        url:
          type: string
        userId:
          type: string
        webhookEvent:
          type: string
          enum:
            - NEW_PROJECT
            - NEW_TASK
            - NEW_CLIENT
            - NEW_TIMER_STARTED
            - TIMER_STOPPED
            - TIME_ENTRY_UPDATED
            - TIME_ENTRY_DELETED
            - TIME_ENTRY_SPLIT
            - NEW_TIME_ENTRY
            - NEW_TAG
            - USER_DELETED_FROM_WORKSPACE
            - USER_JOINED_WORKSPACE
            - USER_DEACTIVATED_ON_WORKSPACE
            - USER_ACTIVATED_ON_WORKSPACE
            - USER_EMAIL_CHANGED
            - USER_UPDATED
            - TEST
            - RESEND
            - NEW_INVOICE
            - INVOICE_UPDATED
            - NEW_APPROVAL_REQUEST
            - APPROVAL_REQUEST_STATUS_UPDATED
            - TIME_OFF_REQUESTED
            - TIME_OFF_REQUEST_APPROVED
            - TIME_OFF_REQUEST_REJECTED
            - TIME_OFF_REQUEST_WITHDRAWN
            - BALANCE_UPDATED
            - TAG_UPDATED
            - TAG_DELETED
            - TASK_UPDATED
            - CLIENT_UPDATED
            - TASK_DELETED
            - CLIENT_DELETED
            - ASSIGNMENT_CREATED
            - ASSIGNMENT_DELETED
            - ASSIGNMENT_PUBLISHED
            - ASSIGNMENT_UPDATED
            - EXPENSE_CREATED
            - EXPENSE_DELETED
            - EXPENSE_UPDATED
        workspaceId:
          type: string
    WebhookDtoV1:
      type: object
      properties:
        authToken:
          type: string
          description: Represents an authentication token.
          example: eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI2NGI3YmU3YmUwODM1Yjc2ZDYzOTY5YTciLCJtdWx0aUZhY3RvciI6dHJ1ZSwiaXNzIjoiY2xvY2tpZnkiLCJuYW1lIjoiTWFydGluIExsb3lkIiwiZXhwIjoxNjkzMzY5MzEwLCJ0eXBlIjoiYWNjZXNzIiwiaWF0IjoxNjkzMzI2MTEwLCJqdGkiOiJZVGcxT0Raak9XTXRPRGRsWVMwME5qZ3hMVGxpTlRndE5UQmlOVEprTmpOaE
        enabled:
          type: boolean
          description: Indicates whether webhook is enabled or not.
        id:
          type: string
          description: Represents webhook identifier across the system.
          example: 76a687e29ae1f428e7ebe101
        name:
          type: string
          description: Represents webhook name.
          example: stripe
        triggerSource:
          type: array
          description: Represents a list of trigger sources.
          example:
            - 54a687e29ae1f428e7ebe909
            - 87p187e29ae1f428e7ebej56
          items:
            type: string
            description: Represents a list of trigger sources.
            example: '["54a687e29ae1f428e7ebe909","87p187e29ae1f428e7ebej56"]'
        triggerSourceType:
          $ref: '#/components/schemas/WebhookEventTriggerSourceType'
        url:
          type: string
          description: Represents workspace identifier across the system.
          example: https://example-clockify.com/stripeEndpoint
        userId:
          type: string
          description: Represents user identifier across the system.
          example: 5a0ab5acb07987125438b60f
        webhookEvent:
          $ref: '#/components/schemas/WebhookEventType'
        workspaceId:
          type: string
          description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
    WebhookEventTriggerSourceType:
      type: object
      description: Represents a webhook event trigger source type.
      example: PROJECT_ID
      oneOf:
        - type: string
          enum:
            - PROJECT_ID
            - USER_ID
            - TAG_ID
            - TASK_ID
            - WORKSPACE_ID
            - USER_GROUP_ID
            - INVOICE_ID
            - ASSIGNMENT_ID
            - EXPENSE_ID
      properties:
        ASSIGNMENT_ID:
          type: string
          enum:
            - PROJECT_ID
            - USER_ID
            - TAG_ID
            - TASK_ID
            - WORKSPACE_ID
            - USER_GROUP_ID
            - INVOICE_ID
            - ASSIGNMENT_ID
            - EXPENSE_ID
        EXPENSE_ID:
          type: string
          enum:
            - PROJECT_ID
            - USER_ID
            - TAG_ID
            - TASK_ID
            - WORKSPACE_ID
            - USER_GROUP_ID
            - INVOICE_ID
            - ASSIGNMENT_ID
            - EXPENSE_ID
        INVOICE_ID:
          type: string
          enum:
            - PROJECT_ID
            - USER_ID
            - TAG_ID
            - TASK_ID
            - WORKSPACE_ID
            - USER_GROUP_ID
            - INVOICE_ID
            - ASSIGNMENT_ID
            - EXPENSE_ID
        PROJECT_ID:
          type: string
          enum:
            - PROJECT_ID
            - USER_ID
            - TAG_ID
            - TASK_ID
            - WORKSPACE_ID
            - USER_GROUP_ID
            - INVOICE_ID
            - ASSIGNMENT_ID
            - EXPENSE_ID
        TAG_ID:
          type: string
          enum:
            - PROJECT_ID
            - USER_ID
            - TAG_ID
            - TASK_ID
            - WORKSPACE_ID
            - USER_GROUP_ID
            - INVOICE_ID
            - ASSIGNMENT_ID
            - EXPENSE_ID
        TASK_ID:
          type: string
          enum:
            - PROJECT_ID
            - USER_ID
            - TAG_ID
            - TASK_ID
            - WORKSPACE_ID
            - USER_GROUP_ID
            - INVOICE_ID
            - ASSIGNMENT_ID
            - EXPENSE_ID
        USER_GROUP_ID:
          type: string
          enum:
            - PROJECT_ID
            - USER_ID
            - TAG_ID
            - TASK_ID
            - WORKSPACE_ID
            - USER_GROUP_ID
            - INVOICE_ID
            - ASSIGNMENT_ID
            - EXPENSE_ID
        USER_ID:
          type: string
          enum:
            - PROJECT_ID
            - USER_ID
            - TAG_ID
            - TASK_ID
            - WORKSPACE_ID
            - USER_GROUP_ID
            - INVOICE_ID
            - ASSIGNMENT_ID
            - EXPENSE_ID
        WORKSPACE_ID:
          type: string
          enum:
            - PROJECT_ID
            - USER_ID
            - TAG_ID
            - TASK_ID
            - WORKSPACE_ID
            - USER_GROUP_ID
            - INVOICE_ID
            - ASSIGNMENT_ID
            - EXPENSE_ID
        entityType:
          type: string
          enum:
            - AUTH
            - ALERT
            - APPROVAL_REQUEST
            - ASSIGNMENT
            - CLIENT
            - EXPENSE
            - EXPENSE_CATEGORY
            - EXPORT_SETTINGS
            - INVOICE
            - INVOICE_ITEM_TYPE
            - PASSWORD_RESET_TOKEN
            - PROJECT
            - PROJECT_FAVORITE
            - REMINDER
            - REPORT
            - ORGANIZATION
            - TEMPLATE
            - TIMEENTRY
            - TAG
            - TASK
            - TASK_FAVORITES
            - USER
            - USER_GROUP
            - WEBHOOK
            - WORKSPACE
            - CUSTOM_FIELD
            - WEBHOOK_LOG
            - SCHEDULE_ASSIGNMENT
            - SCHEDULE_MILESTONE
            - COMPANY
            - CURRENCY
            - KIOSK_PIN_CODE
            - KIOSK
            - KIOSK_SESSION
            - MARKETPLACE_ADDON
            - INVOICE_PAYMENT
            - FAVORITE_TIMEENTRY
            - HOLIDAY
            - POLICY
            - POLICY_ASSIGNMENT
            - EMAIL_KEY_REQUEST
            - EMAIL_SESSION_REQUEST
            - FEATURE_SUBSCRIPTION
            - TIME_OFF_REQUEST
    WebhookEventType:
      type: object
      description: Represents webhook event type.
      example: NEW_PROJECT
      oneOf:
        - type: string
          enum:
            - NEW_PROJECT
            - NEW_TASK
            - NEW_CLIENT
            - NEW_TIMER_STARTED
            - TIMER_STOPPED
            - TIME_ENTRY_UPDATED
            - TIME_ENTRY_DELETED
            - TIME_ENTRY_SPLIT
            - NEW_TIME_ENTRY
            - NEW_TAG
            - USER_DELETED_FROM_WORKSPACE
            - USER_JOINED_WORKSPACE
            - USER_DEACTIVATED_ON_WORKSPACE
            - USER_ACTIVATED_ON_WORKSPACE
            - USER_EMAIL_CHANGED
            - USER_UPDATED
            - TEST
            - RESEND
            - NEW_INVOICE
            - INVOICE_UPDATED
            - NEW_APPROVAL_REQUEST
            - APPROVAL_REQUEST_STATUS_UPDATED
            - TIME_OFF_REQUESTED
            - TIME_OFF_REQUEST_APPROVED
            - TIME_OFF_REQUEST_REJECTED
            - TIME_OFF_REQUEST_WITHDRAWN
            - BALANCE_UPDATED
            - TAG_UPDATED
            - TAG_DELETED
            - TASK_UPDATED
            - CLIENT_UPDATED
            - TASK_DELETED
            - CLIENT_DELETED
            - ASSIGNMENT_CREATED
            - ASSIGNMENT_DELETED
            - ASSIGNMENT_PUBLISHED
            - ASSIGNMENT_UPDATED
            - EXPENSE_CREATED
            - EXPENSE_DELETED
            - EXPENSE_UPDATED
      properties:
        APPROVAL_REQUEST_STATUS_UPDATED:
          type: string
          enum:
            - NEW_PROJECT
            - NEW_TASK
            - NEW_CLIENT
            - NEW_TIMER_STARTED
            - TIMER_STOPPED
            - TIME_ENTRY_UPDATED
            - TIME_ENTRY_DELETED
            - TIME_ENTRY_SPLIT
            - NEW_TIME_ENTRY
            - NEW_TAG
            - USER_DELETED_FROM_WORKSPACE
            - USER_JOINED_WORKSPACE
            - USER_DEACTIVATED_ON_WORKSPACE
            - USER_ACTIVATED_ON_WORKSPACE
            - USER_EMAIL_CHANGED
            - USER_UPDATED
            - TEST
            - RESEND
            - NEW_INVOICE
            - INVOICE_UPDATED
            - NEW_APPROVAL_REQUEST
            - APPROVAL_REQUEST_STATUS_UPDATED
            - TIME_OFF_REQUESTED
            - TIME_OFF_REQUEST_APPROVED
            - TIME_OFF_REQUEST_REJECTED
            - TIME_OFF_REQUEST_WITHDRAWN
            - BALANCE_UPDATED
            - TAG_UPDATED
            - TAG_DELETED
            - TASK_UPDATED
            - CLIENT_UPDATED
            - TASK_DELETED
            - CLIENT_DELETED
            - ASSIGNMENT_CREATED
            - ASSIGNMENT_DELETED
            - ASSIGNMENT_PUBLISHED
            - ASSIGNMENT_UPDATED
            - EXPENSE_CREATED
            - EXPENSE_DELETED
            - EXPENSE_UPDATED
        ASSIGNMENT_CREATED:
          type: string
          enum:
            - NEW_PROJECT
            - NEW_TASK
            - NEW_CLIENT
            - NEW_TIMER_STARTED
            - TIMER_STOPPED
            - TIME_ENTRY_UPDATED
            - TIME_ENTRY_DELETED
            - TIME_ENTRY_SPLIT
            - NEW_TIME_ENTRY
            - NEW_TAG
            - USER_DELETED_FROM_WORKSPACE
            - USER_JOINED_WORKSPACE
            - USER_DEACTIVATED_ON_WORKSPACE
            - USER_ACTIVATED_ON_WORKSPACE
            - USER_EMAIL_CHANGED
            - USER_UPDATED
            - TEST
            - RESEND
            - NEW_INVOICE
            - INVOICE_UPDATED
            - NEW_APPROVAL_REQUEST
            - APPROVAL_REQUEST_STATUS_UPDATED
            - TIME_OFF_REQUESTED
            - TIME_OFF_REQUEST_APPROVED
            - TIME_OFF_REQUEST_REJECTED
            - TIME_OFF_REQUEST_WITHDRAWN
            - BALANCE_UPDATED
            - TAG_UPDATED
            - TAG_DELETED
            - TASK_UPDATED
            - CLIENT_UPDATED
            - TASK_DELETED
            - CLIENT_DELETED
            - ASSIGNMENT_CREATED
            - ASSIGNMENT_DELETED
            - ASSIGNMENT_PUBLISHED
            - ASSIGNMENT_UPDATED
            - EXPENSE_CREATED
            - EXPENSE_DELETED
            - EXPENSE_UPDATED
        ASSIGNMENT_DELETED:
          type: string
          enum:
            - NEW_PROJECT
            - NEW_TASK
            - NEW_CLIENT
            - NEW_TIMER_STARTED
            - TIMER_STOPPED
            - TIME_ENTRY_UPDATED
            - TIME_ENTRY_DELETED
            - TIME_ENTRY_SPLIT
            - NEW_TIME_ENTRY
            - NEW_TAG
            - USER_DELETED_FROM_WORKSPACE
            - USER_JOINED_WORKSPACE
            - USER_DEACTIVATED_ON_WORKSPACE
            - USER_ACTIVATED_ON_WORKSPACE
            - USER_EMAIL_CHANGED
            - USER_UPDATED
            - TEST
            - RESEND
            - NEW_INVOICE
            - INVOICE_UPDATED
            - NEW_APPROVAL_REQUEST
            - APPROVAL_REQUEST_STATUS_UPDATED
            - TIME_OFF_REQUESTED
            - TIME_OFF_REQUEST_APPROVED
            - TIME_OFF_REQUEST_REJECTED
            - TIME_OFF_REQUEST_WITHDRAWN
            - BALANCE_UPDATED
            - TAG_UPDATED
            - TAG_DELETED
            - TASK_UPDATED
            - CLIENT_UPDATED
            - TASK_DELETED
            - CLIENT_DELETED
            - ASSIGNMENT_CREATED
            - ASSIGNMENT_DELETED
            - ASSIGNMENT_PUBLISHED
            - ASSIGNMENT_UPDATED
            - EXPENSE_CREATED
            - EXPENSE_DELETED
            - EXPENSE_UPDATED
        ASSIGNMENT_PUBLISHED:
          type: string
          enum:
            - NEW_PROJECT
            - NEW_TASK
            - NEW_CLIENT
            - NEW_TIMER_STARTED
            - TIMER_STOPPED
            - TIME_ENTRY_UPDATED
            - TIME_ENTRY_DELETED
            - TIME_ENTRY_SPLIT
            - NEW_TIME_ENTRY
            - NEW_TAG
            - USER_DELETED_FROM_WORKSPACE
            - USER_JOINED_WORKSPACE
            - USER_DEACTIVATED_ON_WORKSPACE
            - USER_ACTIVATED_ON_WORKSPACE
            - USER_EMAIL_CHANGED
            - USER_UPDATED
            - TEST
            - RESEND
            - NEW_INVOICE
            - INVOICE_UPDATED
            - NEW_APPROVAL_REQUEST
            - APPROVAL_REQUEST_STATUS_UPDATED
            - TIME_OFF_REQUESTED
            - TIME_OFF_REQUEST_APPROVED
            - TIME_OFF_REQUEST_REJECTED
            - TIME_OFF_REQUEST_WITHDRAWN
            - BALANCE_UPDATED
            - TAG_UPDATED
            - TAG_DELETED
            - TASK_UPDATED
            - CLIENT_UPDATED
            - TASK_DELETED
            - CLIENT_DELETED
            - ASSIGNMENT_CREATED
            - ASSIGNMENT_DELETED
            - ASSIGNMENT_PUBLISHED
            - ASSIGNMENT_UPDATED
            - EXPENSE_CREATED
            - EXPENSE_DELETED
            - EXPENSE_UPDATED
        ASSIGNMENT_UPDATED:
          type: string
          enum:
            - NEW_PROJECT
            - NEW_TASK
            - NEW_CLIENT
            - NEW_TIMER_STARTED
            - TIMER_STOPPED
            - TIME_ENTRY_UPDATED
            - TIME_ENTRY_DELETED
            - TIME_ENTRY_SPLIT
            - NEW_TIME_ENTRY
            - NEW_TAG
            - USER_DELETED_FROM_WORKSPACE
            - USER_JOINED_WORKSPACE
            - USER_DEACTIVATED_ON_WORKSPACE
            - USER_ACTIVATED_ON_WORKSPACE
            - USER_EMAIL_CHANGED
            - USER_UPDATED
            - TEST
            - RESEND
            - NEW_INVOICE
            - INVOICE_UPDATED
            - NEW_APPROVAL_REQUEST
            - APPROVAL_REQUEST_STATUS_UPDATED
            - TIME_OFF_REQUESTED
            - TIME_OFF_REQUEST_APPROVED
            - TIME_OFF_REQUEST_REJECTED
            - TIME_OFF_REQUEST_WITHDRAWN
            - BALANCE_UPDATED
            - TAG_UPDATED
            - TAG_DELETED
            - TASK_UPDATED
            - CLIENT_UPDATED
            - TASK_DELETED
            - CLIENT_DELETED
            - ASSIGNMENT_CREATED
            - ASSIGNMENT_DELETED
            - ASSIGNMENT_PUBLISHED
            - ASSIGNMENT_UPDATED
            - EXPENSE_CREATED
            - EXPENSE_DELETED
            - EXPENSE_UPDATED
        BALANCE_UPDATED:
          type: string
          enum:
            - NEW_PROJECT
            - NEW_TASK
            - NEW_CLIENT
            - NEW_TIMER_STARTED
            - TIMER_STOPPED
            - TIME_ENTRY_UPDATED
            - TIME_ENTRY_DELETED
            - TIME_ENTRY_SPLIT
            - NEW_TIME_ENTRY
            - NEW_TAG
            - USER_DELETED_FROM_WORKSPACE
            - USER_JOINED_WORKSPACE
            - USER_DEACTIVATED_ON_WORKSPACE
            - USER_ACTIVATED_ON_WORKSPACE
            - USER_EMAIL_CHANGED
            - USER_UPDATED
            - TEST
            - RESEND
            - NEW_INVOICE
            - INVOICE_UPDATED
            - NEW_APPROVAL_REQUEST
            - APPROVAL_REQUEST_STATUS_UPDATED
            - TIME_OFF_REQUESTED
            - TIME_OFF_REQUEST_APPROVED
            - TIME_OFF_REQUEST_REJECTED
            - TIME_OFF_REQUEST_WITHDRAWN
            - BALANCE_UPDATED
            - TAG_UPDATED
            - TAG_DELETED
            - TASK_UPDATED
            - CLIENT_UPDATED
            - TASK_DELETED
            - CLIENT_DELETED
            - ASSIGNMENT_CREATED
            - ASSIGNMENT_DELETED
            - ASSIGNMENT_PUBLISHED
            - ASSIGNMENT_UPDATED
            - EXPENSE_CREATED
            - EXPENSE_DELETED
            - EXPENSE_UPDATED
        CLIENT_DELETED:
          type: string
          enum:
            - NEW_PROJECT
            - NEW_TASK
            - NEW_CLIENT
            - NEW_TIMER_STARTED
            - TIMER_STOPPED
            - TIME_ENTRY_UPDATED
            - TIME_ENTRY_DELETED
            - TIME_ENTRY_SPLIT
            - NEW_TIME_ENTRY
            - NEW_TAG
            - USER_DELETED_FROM_WORKSPACE
            - USER_JOINED_WORKSPACE
            - USER_DEACTIVATED_ON_WORKSPACE
            - USER_ACTIVATED_ON_WORKSPACE
            - USER_EMAIL_CHANGED
            - USER_UPDATED
            - TEST
            - RESEND
            - NEW_INVOICE
            - INVOICE_UPDATED
            - NEW_APPROVAL_REQUEST
            - APPROVAL_REQUEST_STATUS_UPDATED
            - TIME_OFF_REQUESTED
            - TIME_OFF_REQUEST_APPROVED
            - TIME_OFF_REQUEST_REJECTED
            - TIME_OFF_REQUEST_WITHDRAWN
            - BALANCE_UPDATED
            - TAG_UPDATED
            - TAG_DELETED
            - TASK_UPDATED
            - CLIENT_UPDATED
            - TASK_DELETED
            - CLIENT_DELETED
            - ASSIGNMENT_CREATED
            - ASSIGNMENT_DELETED
            - ASSIGNMENT_PUBLISHED
            - ASSIGNMENT_UPDATED
            - EXPENSE_CREATED
            - EXPENSE_DELETED
            - EXPENSE_UPDATED
        CLIENT_UPDATED:
          type: string
          enum:
            - NEW_PROJECT
            - NEW_TASK
            - NEW_CLIENT
            - NEW_TIMER_STARTED
            - TIMER_STOPPED
            - TIME_ENTRY_UPDATED
            - TIME_ENTRY_DELETED
            - TIME_ENTRY_SPLIT
            - NEW_TIME_ENTRY
            - NEW_TAG
            - USER_DELETED_FROM_WORKSPACE
            - USER_JOINED_WORKSPACE
            - USER_DEACTIVATED_ON_WORKSPACE
            - USER_ACTIVATED_ON_WORKSPACE
            - USER_EMAIL_CHANGED
            - USER_UPDATED
            - TEST
            - RESEND
            - NEW_INVOICE
            - INVOICE_UPDATED
            - NEW_APPROVAL_REQUEST
            - APPROVAL_REQUEST_STATUS_UPDATED
            - TIME_OFF_REQUESTED
            - TIME_OFF_REQUEST_APPROVED
            - TIME_OFF_REQUEST_REJECTED
            - TIME_OFF_REQUEST_WITHDRAWN
            - BALANCE_UPDATED
            - TAG_UPDATED
            - TAG_DELETED
            - TASK_UPDATED
            - CLIENT_UPDATED
            - TASK_DELETED
            - CLIENT_DELETED
            - ASSIGNMENT_CREATED
            - ASSIGNMENT_DELETED
            - ASSIGNMENT_PUBLISHED
            - ASSIGNMENT_UPDATED
            - EXPENSE_CREATED
            - EXPENSE_DELETED
            - EXPENSE_UPDATED
        EXPENSE_CREATED:
          type: string
          enum:
            - NEW_PROJECT
            - NEW_TASK
            - NEW_CLIENT
            - NEW_TIMER_STARTED
            - TIMER_STOPPED
            - TIME_ENTRY_UPDATED
            - TIME_ENTRY_DELETED
            - TIME_ENTRY_SPLIT
            - NEW_TIME_ENTRY
            - NEW_TAG
            - USER_DELETED_FROM_WORKSPACE
            - USER_JOINED_WORKSPACE
            - USER_DEACTIVATED_ON_WORKSPACE
            - USER_ACTIVATED_ON_WORKSPACE
            - USER_EMAIL_CHANGED
            - USER_UPDATED
            - TEST
            - RESEND
            - NEW_INVOICE
            - INVOICE_UPDATED
            - NEW_APPROVAL_REQUEST
            - APPROVAL_REQUEST_STATUS_UPDATED
            - TIME_OFF_REQUESTED
            - TIME_OFF_REQUEST_APPROVED
            - TIME_OFF_REQUEST_REJECTED
            - TIME_OFF_REQUEST_WITHDRAWN
            - BALANCE_UPDATED
            - TAG_UPDATED
            - TAG_DELETED
            - TASK_UPDATED
            - CLIENT_UPDATED
            - TASK_DELETED
            - CLIENT_DELETED
            - ASSIGNMENT_CREATED
            - ASSIGNMENT_DELETED
            - ASSIGNMENT_PUBLISHED
            - ASSIGNMENT_UPDATED
            - EXPENSE_CREATED
            - EXPENSE_DELETED
            - EXPENSE_UPDATED
        EXPENSE_DELETED:
          type: string
          enum:
            - NEW_PROJECT
            - NEW_TASK
            - NEW_CLIENT
            - NEW_TIMER_STARTED
            - TIMER_STOPPED
            - TIME_ENTRY_UPDATED
            - TIME_ENTRY_DELETED
            - TIME_ENTRY_SPLIT
            - NEW_TIME_ENTRY
            - NEW_TAG
            - USER_DELETED_FROM_WORKSPACE
            - USER_JOINED_WORKSPACE
            - USER_DEACTIVATED_ON_WORKSPACE
            - USER_ACTIVATED_ON_WORKSPACE
            - USER_EMAIL_CHANGED
            - USER_UPDATED
            - TEST
            - RESEND
            - NEW_INVOICE
            - INVOICE_UPDATED
            - NEW_APPROVAL_REQUEST
            - APPROVAL_REQUEST_STATUS_UPDATED
            - TIME_OFF_REQUESTED
            - TIME_OFF_REQUEST_APPROVED
            - TIME_OFF_REQUEST_REJECTED
            - TIME_OFF_REQUEST_WITHDRAWN
            - BALANCE_UPDATED
            - TAG_UPDATED
            - TAG_DELETED
            - TASK_UPDATED
            - CLIENT_UPDATED
            - TASK_DELETED
            - CLIENT_DELETED
            - ASSIGNMENT_CREATED
            - ASSIGNMENT_DELETED
            - ASSIGNMENT_PUBLISHED
            - ASSIGNMENT_UPDATED
            - EXPENSE_CREATED
            - EXPENSE_DELETED
            - EXPENSE_UPDATED
        EXPENSE_UPDATED:
          type: string
          enum:
            - NEW_PROJECT
            - NEW_TASK
            - NEW_CLIENT
            - NEW_TIMER_STARTED
            - TIMER_STOPPED
            - TIME_ENTRY_UPDATED
            - TIME_ENTRY_DELETED
            - TIME_ENTRY_SPLIT
            - NEW_TIME_ENTRY
            - NEW_TAG
            - USER_DELETED_FROM_WORKSPACE
            - USER_JOINED_WORKSPACE
            - USER_DEACTIVATED_ON_WORKSPACE
            - USER_ACTIVATED_ON_WORKSPACE
            - USER_EMAIL_CHANGED
            - USER_UPDATED
            - TEST
            - RESEND
            - NEW_INVOICE
            - INVOICE_UPDATED
            - NEW_APPROVAL_REQUEST
            - APPROVAL_REQUEST_STATUS_UPDATED
            - TIME_OFF_REQUESTED
            - TIME_OFF_REQUEST_APPROVED
            - TIME_OFF_REQUEST_REJECTED
            - TIME_OFF_REQUEST_WITHDRAWN
            - BALANCE_UPDATED
            - TAG_UPDATED
            - TAG_DELETED
            - TASK_UPDATED
            - CLIENT_UPDATED
            - TASK_DELETED
            - CLIENT_DELETED
            - ASSIGNMENT_CREATED
            - ASSIGNMENT_DELETED
            - ASSIGNMENT_PUBLISHED
            - ASSIGNMENT_UPDATED
            - EXPENSE_CREATED
            - EXPENSE_DELETED
            - EXPENSE_UPDATED
        INVOICE_UPDATED:
          type: string
          enum:
            - NEW_PROJECT
            - NEW_TASK
            - NEW_CLIENT
            - NEW_TIMER_STARTED
            - TIMER_STOPPED
            - TIME_ENTRY_UPDATED
            - TIME_ENTRY_DELETED
            - TIME_ENTRY_SPLIT
            - NEW_TIME_ENTRY
            - NEW_TAG
            - USER_DELETED_FROM_WORKSPACE
            - USER_JOINED_WORKSPACE
            - USER_DEACTIVATED_ON_WORKSPACE
            - USER_ACTIVATED_ON_WORKSPACE
            - USER_EMAIL_CHANGED
            - USER_UPDATED
            - TEST
            - RESEND
            - NEW_INVOICE
            - INVOICE_UPDATED
            - NEW_APPROVAL_REQUEST
            - APPROVAL_REQUEST_STATUS_UPDATED
            - TIME_OFF_REQUESTED
            - TIME_OFF_REQUEST_APPROVED
            - TIME_OFF_REQUEST_REJECTED
            - TIME_OFF_REQUEST_WITHDRAWN
            - BALANCE_UPDATED
            - TAG_UPDATED
            - TAG_DELETED
            - TASK_UPDATED
            - CLIENT_UPDATED
            - TASK_DELETED
            - CLIENT_DELETED
            - ASSIGNMENT_CREATED
            - ASSIGNMENT_DELETED
            - ASSIGNMENT_PUBLISHED
            - ASSIGNMENT_UPDATED
            - EXPENSE_CREATED
            - EXPENSE_DELETED
            - EXPENSE_UPDATED
        NEW_APPROVAL_REQUEST:
          type: string
          enum:
            - NEW_PROJECT
            - NEW_TASK
            - NEW_CLIENT
            - NEW_TIMER_STARTED
            - TIMER_STOPPED
            - TIME_ENTRY_UPDATED
            - TIME_ENTRY_DELETED
            - TIME_ENTRY_SPLIT
            - NEW_TIME_ENTRY
            - NEW_TAG
            - USER_DELETED_FROM_WORKSPACE
            - USER_JOINED_WORKSPACE
            - USER_DEACTIVATED_ON_WORKSPACE
            - USER_ACTIVATED_ON_WORKSPACE
            - USER_EMAIL_CHANGED
            - USER_UPDATED
            - TEST
            - RESEND
            - NEW_INVOICE
            - INVOICE_UPDATED
            - NEW_APPROVAL_REQUEST
            - APPROVAL_REQUEST_STATUS_UPDATED
            - TIME_OFF_REQUESTED
            - TIME_OFF_REQUEST_APPROVED
            - TIME_OFF_REQUEST_REJECTED
            - TIME_OFF_REQUEST_WITHDRAWN
            - BALANCE_UPDATED
            - TAG_UPDATED
            - TAG_DELETED
            - TASK_UPDATED
            - CLIENT_UPDATED
            - TASK_DELETED
            - CLIENT_DELETED
            - ASSIGNMENT_CREATED
            - ASSIGNMENT_DELETED
            - ASSIGNMENT_PUBLISHED
            - ASSIGNMENT_UPDATED
            - EXPENSE_CREATED
            - EXPENSE_DELETED
            - EXPENSE_UPDATED
        NEW_CLIENT:
          type: string
          enum:
            - NEW_PROJECT
            - NEW_TASK
            - NEW_CLIENT
            - NEW_TIMER_STARTED
            - TIMER_STOPPED
            - TIME_ENTRY_UPDATED
            - TIME_ENTRY_DELETED
            - TIME_ENTRY_SPLIT
            - NEW_TIME_ENTRY
            - NEW_TAG
            - USER_DELETED_FROM_WORKSPACE
            - USER_JOINED_WORKSPACE
            - USER_DEACTIVATED_ON_WORKSPACE
            - USER_ACTIVATED_ON_WORKSPACE
            - USER_EMAIL_CHANGED
            - USER_UPDATED
            - TEST
            - RESEND
            - NEW_INVOICE
            - INVOICE_UPDATED
            - NEW_APPROVAL_REQUEST
            - APPROVAL_REQUEST_STATUS_UPDATED
            - TIME_OFF_REQUESTED
            - TIME_OFF_REQUEST_APPROVED
            - TIME_OFF_REQUEST_REJECTED
            - TIME_OFF_REQUEST_WITHDRAWN
            - BALANCE_UPDATED
            - TAG_UPDATED
            - TAG_DELETED
            - TASK_UPDATED
            - CLIENT_UPDATED
            - TASK_DELETED
            - CLIENT_DELETED
            - ASSIGNMENT_CREATED
            - ASSIGNMENT_DELETED
            - ASSIGNMENT_PUBLISHED
            - ASSIGNMENT_UPDATED
            - EXPENSE_CREATED
            - EXPENSE_DELETED
            - EXPENSE_UPDATED
        NEW_INVOICE:
          type: string
          enum:
            - NEW_PROJECT
            - NEW_TASK
            - NEW_CLIENT
            - NEW_TIMER_STARTED
            - TIMER_STOPPED
            - TIME_ENTRY_UPDATED
            - TIME_ENTRY_DELETED
            - TIME_ENTRY_SPLIT
            - NEW_TIME_ENTRY
            - NEW_TAG
            - USER_DELETED_FROM_WORKSPACE
            - USER_JOINED_WORKSPACE
            - USER_DEACTIVATED_ON_WORKSPACE
            - USER_ACTIVATED_ON_WORKSPACE
            - USER_EMAIL_CHANGED
            - USER_UPDATED
            - TEST
            - RESEND
            - NEW_INVOICE
            - INVOICE_UPDATED
            - NEW_APPROVAL_REQUEST
            - APPROVAL_REQUEST_STATUS_UPDATED
            - TIME_OFF_REQUESTED
            - TIME_OFF_REQUEST_APPROVED
            - TIME_OFF_REQUEST_REJECTED
            - TIME_OFF_REQUEST_WITHDRAWN
            - BALANCE_UPDATED
            - TAG_UPDATED
            - TAG_DELETED
            - TASK_UPDATED
            - CLIENT_UPDATED
            - TASK_DELETED
            - CLIENT_DELETED
            - ASSIGNMENT_CREATED
            - ASSIGNMENT_DELETED
            - ASSIGNMENT_PUBLISHED
            - ASSIGNMENT_UPDATED
            - EXPENSE_CREATED
            - EXPENSE_DELETED
            - EXPENSE_UPDATED
        NEW_PROJECT:
          type: string
          enum:
            - NEW_PROJECT
            - NEW_TASK
            - NEW_CLIENT
            - NEW_TIMER_STARTED
            - TIMER_STOPPED
            - TIME_ENTRY_UPDATED
            - TIME_ENTRY_DELETED
            - TIME_ENTRY_SPLIT
            - NEW_TIME_ENTRY
            - NEW_TAG
            - USER_DELETED_FROM_WORKSPACE
            - USER_JOINED_WORKSPACE
            - USER_DEACTIVATED_ON_WORKSPACE
            - USER_ACTIVATED_ON_WORKSPACE
            - USER_EMAIL_CHANGED
            - USER_UPDATED
            - TEST
            - RESEND
            - NEW_INVOICE
            - INVOICE_UPDATED
            - NEW_APPROVAL_REQUEST
            - APPROVAL_REQUEST_STATUS_UPDATED
            - TIME_OFF_REQUESTED
            - TIME_OFF_REQUEST_APPROVED
            - TIME_OFF_REQUEST_REJECTED
            - TIME_OFF_REQUEST_WITHDRAWN
            - BALANCE_UPDATED
            - TAG_UPDATED
            - TAG_DELETED
            - TASK_UPDATED
            - CLIENT_UPDATED
            - TASK_DELETED
            - CLIENT_DELETED
            - ASSIGNMENT_CREATED
            - ASSIGNMENT_DELETED
            - ASSIGNMENT_PUBLISHED
            - ASSIGNMENT_UPDATED
            - EXPENSE_CREATED
            - EXPENSE_DELETED
            - EXPENSE_UPDATED
        NEW_TAG:
          type: string
          enum:
            - NEW_PROJECT
            - NEW_TASK
            - NEW_CLIENT
            - NEW_TIMER_STARTED
            - TIMER_STOPPED
            - TIME_ENTRY_UPDATED
            - TIME_ENTRY_DELETED
            - TIME_ENTRY_SPLIT
            - NEW_TIME_ENTRY
            - NEW_TAG
            - USER_DELETED_FROM_WORKSPACE
            - USER_JOINED_WORKSPACE
            - USER_DEACTIVATED_ON_WORKSPACE
            - USER_ACTIVATED_ON_WORKSPACE
            - USER_EMAIL_CHANGED
            - USER_UPDATED
            - TEST
            - RESEND
            - NEW_INVOICE
            - INVOICE_UPDATED
            - NEW_APPROVAL_REQUEST
            - APPROVAL_REQUEST_STATUS_UPDATED
            - TIME_OFF_REQUESTED
            - TIME_OFF_REQUEST_APPROVED
            - TIME_OFF_REQUEST_REJECTED
            - TIME_OFF_REQUEST_WITHDRAWN
            - BALANCE_UPDATED
            - TAG_UPDATED
            - TAG_DELETED
            - TASK_UPDATED
            - CLIENT_UPDATED
            - TASK_DELETED
            - CLIENT_DELETED
            - ASSIGNMENT_CREATED
            - ASSIGNMENT_DELETED
            - ASSIGNMENT_PUBLISHED
            - ASSIGNMENT_UPDATED
            - EXPENSE_CREATED
            - EXPENSE_DELETED
            - EXPENSE_UPDATED
        NEW_TASK:
          type: string
          enum:
            - NEW_PROJECT
            - NEW_TASK
            - NEW_CLIENT
            - NEW_TIMER_STARTED
            - TIMER_STOPPED
            - TIME_ENTRY_UPDATED
            - TIME_ENTRY_DELETED
            - TIME_ENTRY_SPLIT
            - NEW_TIME_ENTRY
            - NEW_TAG
            - USER_DELETED_FROM_WORKSPACE
            - USER_JOINED_WORKSPACE
            - USER_DEACTIVATED_ON_WORKSPACE
            - USER_ACTIVATED_ON_WORKSPACE
            - USER_EMAIL_CHANGED
            - USER_UPDATED
            - TEST
            - RESEND
            - NEW_INVOICE
            - INVOICE_UPDATED
            - NEW_APPROVAL_REQUEST
            - APPROVAL_REQUEST_STATUS_UPDATED
            - TIME_OFF_REQUESTED
            - TIME_OFF_REQUEST_APPROVED
            - TIME_OFF_REQUEST_REJECTED
            - TIME_OFF_REQUEST_WITHDRAWN
            - BALANCE_UPDATED
            - TAG_UPDATED
            - TAG_DELETED
            - TASK_UPDATED
            - CLIENT_UPDATED
            - TASK_DELETED
            - CLIENT_DELETED
            - ASSIGNMENT_CREATED
            - ASSIGNMENT_DELETED
            - ASSIGNMENT_PUBLISHED
            - ASSIGNMENT_UPDATED
            - EXPENSE_CREATED
            - EXPENSE_DELETED
            - EXPENSE_UPDATED
        NEW_TIMER_STARTED:
          type: string
          enum:
            - NEW_PROJECT
            - NEW_TASK
            - NEW_CLIENT
            - NEW_TIMER_STARTED
            - TIMER_STOPPED
            - TIME_ENTRY_UPDATED
            - TIME_ENTRY_DELETED
            - TIME_ENTRY_SPLIT
            - NEW_TIME_ENTRY
            - NEW_TAG
            - USER_DELETED_FROM_WORKSPACE
            - USER_JOINED_WORKSPACE
            - USER_DEACTIVATED_ON_WORKSPACE
            - USER_ACTIVATED_ON_WORKSPACE
            - USER_EMAIL_CHANGED
            - USER_UPDATED
            - TEST
            - RESEND
            - NEW_INVOICE
            - INVOICE_UPDATED
            - NEW_APPROVAL_REQUEST
            - APPROVAL_REQUEST_STATUS_UPDATED
            - TIME_OFF_REQUESTED
            - TIME_OFF_REQUEST_APPROVED
            - TIME_OFF_REQUEST_REJECTED
            - TIME_OFF_REQUEST_WITHDRAWN
            - BALANCE_UPDATED
            - TAG_UPDATED
            - TAG_DELETED
            - TASK_UPDATED
            - CLIENT_UPDATED
            - TASK_DELETED
            - CLIENT_DELETED
            - ASSIGNMENT_CREATED
            - ASSIGNMENT_DELETED
            - ASSIGNMENT_PUBLISHED
            - ASSIGNMENT_UPDATED
            - EXPENSE_CREATED
            - EXPENSE_DELETED
            - EXPENSE_UPDATED
        NEW_TIME_ENTRY:
          type: string
          enum:
            - NEW_PROJECT
            - NEW_TASK
            - NEW_CLIENT
            - NEW_TIMER_STARTED
            - TIMER_STOPPED
            - TIME_ENTRY_UPDATED
            - TIME_ENTRY_DELETED
            - TIME_ENTRY_SPLIT
            - NEW_TIME_ENTRY
            - NEW_TAG
            - USER_DELETED_FROM_WORKSPACE
            - USER_JOINED_WORKSPACE
            - USER_DEACTIVATED_ON_WORKSPACE
            - USER_ACTIVATED_ON_WORKSPACE
            - USER_EMAIL_CHANGED
            - USER_UPDATED
            - TEST
            - RESEND
            - NEW_INVOICE
            - INVOICE_UPDATED
            - NEW_APPROVAL_REQUEST
            - APPROVAL_REQUEST_STATUS_UPDATED
            - TIME_OFF_REQUESTED
            - TIME_OFF_REQUEST_APPROVED
            - TIME_OFF_REQUEST_REJECTED
            - TIME_OFF_REQUEST_WITHDRAWN
            - BALANCE_UPDATED
            - TAG_UPDATED
            - TAG_DELETED
            - TASK_UPDATED
            - CLIENT_UPDATED
            - TASK_DELETED
            - CLIENT_DELETED
            - ASSIGNMENT_CREATED
            - ASSIGNMENT_DELETED
            - ASSIGNMENT_PUBLISHED
            - ASSIGNMENT_UPDATED
            - EXPENSE_CREATED
            - EXPENSE_DELETED
            - EXPENSE_UPDATED
        RESEND:
          type: string
          enum:
            - NEW_PROJECT
            - NEW_TASK
            - NEW_CLIENT
            - NEW_TIMER_STARTED
            - TIMER_STOPPED
            - TIME_ENTRY_UPDATED
            - TIME_ENTRY_DELETED
            - TIME_ENTRY_SPLIT
            - NEW_TIME_ENTRY
            - NEW_TAG
            - USER_DELETED_FROM_WORKSPACE
            - USER_JOINED_WORKSPACE
            - USER_DEACTIVATED_ON_WORKSPACE
            - USER_ACTIVATED_ON_WORKSPACE
            - USER_EMAIL_CHANGED
            - USER_UPDATED
            - TEST
            - RESEND
            - NEW_INVOICE
            - INVOICE_UPDATED
            - NEW_APPROVAL_REQUEST
            - APPROVAL_REQUEST_STATUS_UPDATED
            - TIME_OFF_REQUESTED
            - TIME_OFF_REQUEST_APPROVED
            - TIME_OFF_REQUEST_REJECTED
            - TIME_OFF_REQUEST_WITHDRAWN
            - BALANCE_UPDATED
            - TAG_UPDATED
            - TAG_DELETED
            - TASK_UPDATED
            - CLIENT_UPDATED
            - TASK_DELETED
            - CLIENT_DELETED
            - ASSIGNMENT_CREATED
            - ASSIGNMENT_DELETED
            - ASSIGNMENT_PUBLISHED
            - ASSIGNMENT_UPDATED
            - EXPENSE_CREATED
            - EXPENSE_DELETED
            - EXPENSE_UPDATED
        TAG_DELETED:
          type: string
          enum:
            - NEW_PROJECT
            - NEW_TASK
            - NEW_CLIENT
            - NEW_TIMER_STARTED
            - TIMER_STOPPED
            - TIME_ENTRY_UPDATED
            - TIME_ENTRY_DELETED
            - TIME_ENTRY_SPLIT
            - NEW_TIME_ENTRY
            - NEW_TAG
            - USER_DELETED_FROM_WORKSPACE
            - USER_JOINED_WORKSPACE
            - USER_DEACTIVATED_ON_WORKSPACE
            - USER_ACTIVATED_ON_WORKSPACE
            - USER_EMAIL_CHANGED
            - USER_UPDATED
            - TEST
            - RESEND
            - NEW_INVOICE
            - INVOICE_UPDATED
            - NEW_APPROVAL_REQUEST
            - APPROVAL_REQUEST_STATUS_UPDATED
            - TIME_OFF_REQUESTED
            - TIME_OFF_REQUEST_APPROVED
            - TIME_OFF_REQUEST_REJECTED
            - TIME_OFF_REQUEST_WITHDRAWN
            - BALANCE_UPDATED
            - TAG_UPDATED
            - TAG_DELETED
            - TASK_UPDATED
            - CLIENT_UPDATED
            - TASK_DELETED
            - CLIENT_DELETED
            - ASSIGNMENT_CREATED
            - ASSIGNMENT_DELETED
            - ASSIGNMENT_PUBLISHED
            - ASSIGNMENT_UPDATED
            - EXPENSE_CREATED
            - EXPENSE_DELETED
            - EXPENSE_UPDATED
        TAG_UPDATED:
          type: string
          enum:
            - NEW_PROJECT
            - NEW_TASK
            - NEW_CLIENT
            - NEW_TIMER_STARTED
            - TIMER_STOPPED
            - TIME_ENTRY_UPDATED
            - TIME_ENTRY_DELETED
            - TIME_ENTRY_SPLIT
            - NEW_TIME_ENTRY
            - NEW_TAG
            - USER_DELETED_FROM_WORKSPACE
            - USER_JOINED_WORKSPACE
            - USER_DEACTIVATED_ON_WORKSPACE
            - USER_ACTIVATED_ON_WORKSPACE
            - USER_EMAIL_CHANGED
            - USER_UPDATED
            - TEST
            - RESEND
            - NEW_INVOICE
            - INVOICE_UPDATED
            - NEW_APPROVAL_REQUEST
            - APPROVAL_REQUEST_STATUS_UPDATED
            - TIME_OFF_REQUESTED
            - TIME_OFF_REQUEST_APPROVED
            - TIME_OFF_REQUEST_REJECTED
            - TIME_OFF_REQUEST_WITHDRAWN
            - BALANCE_UPDATED
            - TAG_UPDATED
            - TAG_DELETED
            - TASK_UPDATED
            - CLIENT_UPDATED
            - TASK_DELETED
            - CLIENT_DELETED
            - ASSIGNMENT_CREATED
            - ASSIGNMENT_DELETED
            - ASSIGNMENT_PUBLISHED
            - ASSIGNMENT_UPDATED
            - EXPENSE_CREATED
            - EXPENSE_DELETED
            - EXPENSE_UPDATED
        TASK_DELETED:
          type: string
          enum:
            - NEW_PROJECT
            - NEW_TASK
            - NEW_CLIENT
            - NEW_TIMER_STARTED
            - TIMER_STOPPED
            - TIME_ENTRY_UPDATED
            - TIME_ENTRY_DELETED
            - TIME_ENTRY_SPLIT
            - NEW_TIME_ENTRY
            - NEW_TAG
            - USER_DELETED_FROM_WORKSPACE
            - USER_JOINED_WORKSPACE
            - USER_DEACTIVATED_ON_WORKSPACE
            - USER_ACTIVATED_ON_WORKSPACE
            - USER_EMAIL_CHANGED
            - USER_UPDATED
            - TEST
            - RESEND
            - NEW_INVOICE
            - INVOICE_UPDATED
            - NEW_APPROVAL_REQUEST
            - APPROVAL_REQUEST_STATUS_UPDATED
            - TIME_OFF_REQUESTED
            - TIME_OFF_REQUEST_APPROVED
            - TIME_OFF_REQUEST_REJECTED
            - TIME_OFF_REQUEST_WITHDRAWN
            - BALANCE_UPDATED
            - TAG_UPDATED
            - TAG_DELETED
            - TASK_UPDATED
            - CLIENT_UPDATED
            - TASK_DELETED
            - CLIENT_DELETED
            - ASSIGNMENT_CREATED
            - ASSIGNMENT_DELETED
            - ASSIGNMENT_PUBLISHED
            - ASSIGNMENT_UPDATED
            - EXPENSE_CREATED
            - EXPENSE_DELETED
            - EXPENSE_UPDATED
        TASK_UPDATED:
          type: string
          enum:
            - NEW_PROJECT
            - NEW_TASK
            - NEW_CLIENT
            - NEW_TIMER_STARTED
            - TIMER_STOPPED
            - TIME_ENTRY_UPDATED
            - TIME_ENTRY_DELETED
            - TIME_ENTRY_SPLIT
            - NEW_TIME_ENTRY
            - NEW_TAG
            - USER_DELETED_FROM_WORKSPACE
            - USER_JOINED_WORKSPACE
            - USER_DEACTIVATED_ON_WORKSPACE
            - USER_ACTIVATED_ON_WORKSPACE
            - USER_EMAIL_CHANGED
            - USER_UPDATED
            - TEST
            - RESEND
            - NEW_INVOICE
            - INVOICE_UPDATED
            - NEW_APPROVAL_REQUEST
            - APPROVAL_REQUEST_STATUS_UPDATED
            - TIME_OFF_REQUESTED
            - TIME_OFF_REQUEST_APPROVED
            - TIME_OFF_REQUEST_REJECTED
            - TIME_OFF_REQUEST_WITHDRAWN
            - BALANCE_UPDATED
            - TAG_UPDATED
            - TAG_DELETED
            - TASK_UPDATED
            - CLIENT_UPDATED
            - TASK_DELETED
            - CLIENT_DELETED
            - ASSIGNMENT_CREATED
            - ASSIGNMENT_DELETED
            - ASSIGNMENT_PUBLISHED
            - ASSIGNMENT_UPDATED
            - EXPENSE_CREATED
            - EXPENSE_DELETED
            - EXPENSE_UPDATED
        TEST:
          type: string
          enum:
            - NEW_PROJECT
            - NEW_TASK
            - NEW_CLIENT
            - NEW_TIMER_STARTED
            - TIMER_STOPPED
            - TIME_ENTRY_UPDATED
            - TIME_ENTRY_DELETED
            - TIME_ENTRY_SPLIT
            - NEW_TIME_ENTRY
            - NEW_TAG
            - USER_DELETED_FROM_WORKSPACE
            - USER_JOINED_WORKSPACE
            - USER_DEACTIVATED_ON_WORKSPACE
            - USER_ACTIVATED_ON_WORKSPACE
            - USER_EMAIL_CHANGED
            - USER_UPDATED
            - TEST
            - RESEND
            - NEW_INVOICE
            - INVOICE_UPDATED
            - NEW_APPROVAL_REQUEST
            - APPROVAL_REQUEST_STATUS_UPDATED
            - TIME_OFF_REQUESTED
            - TIME_OFF_REQUEST_APPROVED
            - TIME_OFF_REQUEST_REJECTED
            - TIME_OFF_REQUEST_WITHDRAWN
            - BALANCE_UPDATED
            - TAG_UPDATED
            - TAG_DELETED
            - TASK_UPDATED
            - CLIENT_UPDATED
            - TASK_DELETED
            - CLIENT_DELETED
            - ASSIGNMENT_CREATED
            - ASSIGNMENT_DELETED
            - ASSIGNMENT_PUBLISHED
            - ASSIGNMENT_UPDATED
            - EXPENSE_CREATED
            - EXPENSE_DELETED
            - EXPENSE_UPDATED
        TIMER_STOPPED:
          type: string
          enum:
            - NEW_PROJECT
            - NEW_TASK
            - NEW_CLIENT
            - NEW_TIMER_STARTED
            - TIMER_STOPPED
            - TIME_ENTRY_UPDATED
            - TIME_ENTRY_DELETED
            - TIME_ENTRY_SPLIT
            - NEW_TIME_ENTRY
            - NEW_TAG
            - USER_DELETED_FROM_WORKSPACE
            - USER_JOINED_WORKSPACE
            - USER_DEACTIVATED_ON_WORKSPACE
            - USER_ACTIVATED_ON_WORKSPACE
            - USER_EMAIL_CHANGED
            - USER_UPDATED
            - TEST
            - RESEND
            - NEW_INVOICE
            - INVOICE_UPDATED
            - NEW_APPROVAL_REQUEST
            - APPROVAL_REQUEST_STATUS_UPDATED
            - TIME_OFF_REQUESTED
            - TIME_OFF_REQUEST_APPROVED
            - TIME_OFF_REQUEST_REJECTED
            - TIME_OFF_REQUEST_WITHDRAWN
            - BALANCE_UPDATED
            - TAG_UPDATED
            - TAG_DELETED
            - TASK_UPDATED
            - CLIENT_UPDATED
            - TASK_DELETED
            - CLIENT_DELETED
            - ASSIGNMENT_CREATED
            - ASSIGNMENT_DELETED
            - ASSIGNMENT_PUBLISHED
            - ASSIGNMENT_UPDATED
            - EXPENSE_CREATED
            - EXPENSE_DELETED
            - EXPENSE_UPDATED
        TIME_ENTRY_DELETED:
          type: string
          enum:
            - NEW_PROJECT
            - NEW_TASK
            - NEW_CLIENT
            - NEW_TIMER_STARTED
            - TIMER_STOPPED
            - TIME_ENTRY_UPDATED
            - TIME_ENTRY_DELETED
            - TIME_ENTRY_SPLIT
            - NEW_TIME_ENTRY
            - NEW_TAG
            - USER_DELETED_FROM_WORKSPACE
            - USER_JOINED_WORKSPACE
            - USER_DEACTIVATED_ON_WORKSPACE
            - USER_ACTIVATED_ON_WORKSPACE
            - USER_EMAIL_CHANGED
            - USER_UPDATED
            - TEST
            - RESEND
            - NEW_INVOICE
            - INVOICE_UPDATED
            - NEW_APPROVAL_REQUEST
            - APPROVAL_REQUEST_STATUS_UPDATED
            - TIME_OFF_REQUESTED
            - TIME_OFF_REQUEST_APPROVED
            - TIME_OFF_REQUEST_REJECTED
            - TIME_OFF_REQUEST_WITHDRAWN
            - BALANCE_UPDATED
            - TAG_UPDATED
            - TAG_DELETED
            - TASK_UPDATED
            - CLIENT_UPDATED
            - TASK_DELETED
            - CLIENT_DELETED
            - ASSIGNMENT_CREATED
            - ASSIGNMENT_DELETED
            - ASSIGNMENT_PUBLISHED
            - ASSIGNMENT_UPDATED
            - EXPENSE_CREATED
            - EXPENSE_DELETED
            - EXPENSE_UPDATED
        TIME_ENTRY_SPLIT:
          type: string
          enum:
            - NEW_PROJECT
            - NEW_TASK
            - NEW_CLIENT
            - NEW_TIMER_STARTED
            - TIMER_STOPPED
            - TIME_ENTRY_UPDATED
            - TIME_ENTRY_DELETED
            - TIME_ENTRY_SPLIT
            - NEW_TIME_ENTRY
            - NEW_TAG
            - USER_DELETED_FROM_WORKSPACE
            - USER_JOINED_WORKSPACE
            - USER_DEACTIVATED_ON_WORKSPACE
            - USER_ACTIVATED_ON_WORKSPACE
            - USER_EMAIL_CHANGED
            - USER_UPDATED
            - TEST
            - RESEND
            - NEW_INVOICE
            - INVOICE_UPDATED
            - NEW_APPROVAL_REQUEST
            - APPROVAL_REQUEST_STATUS_UPDATED
            - TIME_OFF_REQUESTED
            - TIME_OFF_REQUEST_APPROVED
            - TIME_OFF_REQUEST_REJECTED
            - TIME_OFF_REQUEST_WITHDRAWN
            - BALANCE_UPDATED
            - TAG_UPDATED
            - TAG_DELETED
            - TASK_UPDATED
            - CLIENT_UPDATED
            - TASK_DELETED
            - CLIENT_DELETED
            - ASSIGNMENT_CREATED
            - ASSIGNMENT_DELETED
            - ASSIGNMENT_PUBLISHED
            - ASSIGNMENT_UPDATED
            - EXPENSE_CREATED
            - EXPENSE_DELETED
            - EXPENSE_UPDATED
        TIME_ENTRY_UPDATED:
          type: string
          enum:
            - NEW_PROJECT
            - NEW_TASK
            - NEW_CLIENT
            - NEW_TIMER_STARTED
            - TIMER_STOPPED
            - TIME_ENTRY_UPDATED
            - TIME_ENTRY_DELETED
            - TIME_ENTRY_SPLIT
            - NEW_TIME_ENTRY
            - NEW_TAG
            - USER_DELETED_FROM_WORKSPACE
            - USER_JOINED_WORKSPACE
            - USER_DEACTIVATED_ON_WORKSPACE
            - USER_ACTIVATED_ON_WORKSPACE
            - USER_EMAIL_CHANGED
            - USER_UPDATED
            - TEST
            - RESEND
            - NEW_INVOICE
            - INVOICE_UPDATED
            - NEW_APPROVAL_REQUEST
            - APPROVAL_REQUEST_STATUS_UPDATED
            - TIME_OFF_REQUESTED
            - TIME_OFF_REQUEST_APPROVED
            - TIME_OFF_REQUEST_REJECTED
            - TIME_OFF_REQUEST_WITHDRAWN
            - BALANCE_UPDATED
            - TAG_UPDATED
            - TAG_DELETED
            - TASK_UPDATED
            - CLIENT_UPDATED
            - TASK_DELETED
            - CLIENT_DELETED
            - ASSIGNMENT_CREATED
            - ASSIGNMENT_DELETED
            - ASSIGNMENT_PUBLISHED
            - ASSIGNMENT_UPDATED
            - EXPENSE_CREATED
            - EXPENSE_DELETED
            - EXPENSE_UPDATED
        TIME_OFF_REQUESTED:
          type: string
          enum:
            - NEW_PROJECT
            - NEW_TASK
            - NEW_CLIENT
            - NEW_TIMER_STARTED
            - TIMER_STOPPED
            - TIME_ENTRY_UPDATED
            - TIME_ENTRY_DELETED
            - TIME_ENTRY_SPLIT
            - NEW_TIME_ENTRY
            - NEW_TAG
            - USER_DELETED_FROM_WORKSPACE
            - USER_JOINED_WORKSPACE
            - USER_DEACTIVATED_ON_WORKSPACE
            - USER_ACTIVATED_ON_WORKSPACE
            - USER_EMAIL_CHANGED
            - USER_UPDATED
            - TEST
            - RESEND
            - NEW_INVOICE
            - INVOICE_UPDATED
            - NEW_APPROVAL_REQUEST
            - APPROVAL_REQUEST_STATUS_UPDATED
            - TIME_OFF_REQUESTED
            - TIME_OFF_REQUEST_APPROVED
            - TIME_OFF_REQUEST_REJECTED
            - TIME_OFF_REQUEST_WITHDRAWN
            - BALANCE_UPDATED
            - TAG_UPDATED
            - TAG_DELETED
            - TASK_UPDATED
            - CLIENT_UPDATED
            - TASK_DELETED
            - CLIENT_DELETED
            - ASSIGNMENT_CREATED
            - ASSIGNMENT_DELETED
            - ASSIGNMENT_PUBLISHED
            - ASSIGNMENT_UPDATED
            - EXPENSE_CREATED
            - EXPENSE_DELETED
            - EXPENSE_UPDATED
        TIME_OFF_REQUEST_APPROVED:
          type: string
          enum:
            - NEW_PROJECT
            - NEW_TASK
            - NEW_CLIENT
            - NEW_TIMER_STARTED
            - TIMER_STOPPED
            - TIME_ENTRY_UPDATED
            - TIME_ENTRY_DELETED
            - TIME_ENTRY_SPLIT
            - NEW_TIME_ENTRY
            - NEW_TAG
            - USER_DELETED_FROM_WORKSPACE
            - USER_JOINED_WORKSPACE
            - USER_DEACTIVATED_ON_WORKSPACE
            - USER_ACTIVATED_ON_WORKSPACE
            - USER_EMAIL_CHANGED
            - USER_UPDATED
            - TEST
            - RESEND
            - NEW_INVOICE
            - INVOICE_UPDATED
            - NEW_APPROVAL_REQUEST
            - APPROVAL_REQUEST_STATUS_UPDATED
            - TIME_OFF_REQUESTED
            - TIME_OFF_REQUEST_APPROVED
            - TIME_OFF_REQUEST_REJECTED
            - TIME_OFF_REQUEST_WITHDRAWN
            - BALANCE_UPDATED
            - TAG_UPDATED
            - TAG_DELETED
            - TASK_UPDATED
            - CLIENT_UPDATED
            - TASK_DELETED
            - CLIENT_DELETED
            - ASSIGNMENT_CREATED
            - ASSIGNMENT_DELETED
            - ASSIGNMENT_PUBLISHED
            - ASSIGNMENT_UPDATED
            - EXPENSE_CREATED
            - EXPENSE_DELETED
            - EXPENSE_UPDATED
        TIME_OFF_REQUEST_REJECTED:
          type: string
          enum:
            - NEW_PROJECT
            - NEW_TASK
            - NEW_CLIENT
            - NEW_TIMER_STARTED
            - TIMER_STOPPED
            - TIME_ENTRY_UPDATED
            - TIME_ENTRY_DELETED
            - TIME_ENTRY_SPLIT
            - NEW_TIME_ENTRY
            - NEW_TAG
            - USER_DELETED_FROM_WORKSPACE
            - USER_JOINED_WORKSPACE
            - USER_DEACTIVATED_ON_WORKSPACE
            - USER_ACTIVATED_ON_WORKSPACE
            - USER_EMAIL_CHANGED
            - USER_UPDATED
            - TEST
            - RESEND
            - NEW_INVOICE
            - INVOICE_UPDATED
            - NEW_APPROVAL_REQUEST
            - APPROVAL_REQUEST_STATUS_UPDATED
            - TIME_OFF_REQUESTED
            - TIME_OFF_REQUEST_APPROVED
            - TIME_OFF_REQUEST_REJECTED
            - TIME_OFF_REQUEST_WITHDRAWN
            - BALANCE_UPDATED
            - TAG_UPDATED
            - TAG_DELETED
            - TASK_UPDATED
            - CLIENT_UPDATED
            - TASK_DELETED
            - CLIENT_DELETED
            - ASSIGNMENT_CREATED
            - ASSIGNMENT_DELETED
            - ASSIGNMENT_PUBLISHED
            - ASSIGNMENT_UPDATED
            - EXPENSE_CREATED
            - EXPENSE_DELETED
            - EXPENSE_UPDATED
        TIME_OFF_REQUEST_WITHDRAWN:
          type: string
          enum:
            - NEW_PROJECT
            - NEW_TASK
            - NEW_CLIENT
            - NEW_TIMER_STARTED
            - TIMER_STOPPED
            - TIME_ENTRY_UPDATED
            - TIME_ENTRY_DELETED
            - TIME_ENTRY_SPLIT
            - NEW_TIME_ENTRY
            - NEW_TAG
            - USER_DELETED_FROM_WORKSPACE
            - USER_JOINED_WORKSPACE
            - USER_DEACTIVATED_ON_WORKSPACE
            - USER_ACTIVATED_ON_WORKSPACE
            - USER_EMAIL_CHANGED
            - USER_UPDATED
            - TEST
            - RESEND
            - NEW_INVOICE
            - INVOICE_UPDATED
            - NEW_APPROVAL_REQUEST
            - APPROVAL_REQUEST_STATUS_UPDATED
            - TIME_OFF_REQUESTED
            - TIME_OFF_REQUEST_APPROVED
            - TIME_OFF_REQUEST_REJECTED
            - TIME_OFF_REQUEST_WITHDRAWN
            - BALANCE_UPDATED
            - TAG_UPDATED
            - TAG_DELETED
            - TASK_UPDATED
            - CLIENT_UPDATED
            - TASK_DELETED
            - CLIENT_DELETED
            - ASSIGNMENT_CREATED
            - ASSIGNMENT_DELETED
            - ASSIGNMENT_PUBLISHED
            - ASSIGNMENT_UPDATED
            - EXPENSE_CREATED
            - EXPENSE_DELETED
            - EXPENSE_UPDATED
        USER_ACTIVATED_ON_WORKSPACE:
          type: string
          enum:
            - NEW_PROJECT
            - NEW_TASK
            - NEW_CLIENT
            - NEW_TIMER_STARTED
            - TIMER_STOPPED
            - TIME_ENTRY_UPDATED
            - TIME_ENTRY_DELETED
            - TIME_ENTRY_SPLIT
            - NEW_TIME_ENTRY
            - NEW_TAG
            - USER_DELETED_FROM_WORKSPACE
            - USER_JOINED_WORKSPACE
            - USER_DEACTIVATED_ON_WORKSPACE
            - USER_ACTIVATED_ON_WORKSPACE
            - USER_EMAIL_CHANGED
            - USER_UPDATED
            - TEST
            - RESEND
            - NEW_INVOICE
            - INVOICE_UPDATED
            - NEW_APPROVAL_REQUEST
            - APPROVAL_REQUEST_STATUS_UPDATED
            - TIME_OFF_REQUESTED
            - TIME_OFF_REQUEST_APPROVED
            - TIME_OFF_REQUEST_REJECTED
            - TIME_OFF_REQUEST_WITHDRAWN
            - BALANCE_UPDATED
            - TAG_UPDATED
            - TAG_DELETED
            - TASK_UPDATED
            - CLIENT_UPDATED
            - TASK_DELETED
            - CLIENT_DELETED
            - ASSIGNMENT_CREATED
            - ASSIGNMENT_DELETED
            - ASSIGNMENT_PUBLISHED
            - ASSIGNMENT_UPDATED
            - EXPENSE_CREATED
            - EXPENSE_DELETED
            - EXPENSE_UPDATED
        USER_DEACTIVATED_ON_WORKSPACE:
          type: string
          enum:
            - NEW_PROJECT
            - NEW_TASK
            - NEW_CLIENT
            - NEW_TIMER_STARTED
            - TIMER_STOPPED
            - TIME_ENTRY_UPDATED
            - TIME_ENTRY_DELETED
            - TIME_ENTRY_SPLIT
            - NEW_TIME_ENTRY
            - NEW_TAG
            - USER_DELETED_FROM_WORKSPACE
            - USER_JOINED_WORKSPACE
            - USER_DEACTIVATED_ON_WORKSPACE
            - USER_ACTIVATED_ON_WORKSPACE
            - USER_EMAIL_CHANGED
            - USER_UPDATED
            - TEST
            - RESEND
            - NEW_INVOICE
            - INVOICE_UPDATED
            - NEW_APPROVAL_REQUEST
            - APPROVAL_REQUEST_STATUS_UPDATED
            - TIME_OFF_REQUESTED
            - TIME_OFF_REQUEST_APPROVED
            - TIME_OFF_REQUEST_REJECTED
            - TIME_OFF_REQUEST_WITHDRAWN
            - BALANCE_UPDATED
            - TAG_UPDATED
            - TAG_DELETED
            - TASK_UPDATED
            - CLIENT_UPDATED
            - TASK_DELETED
            - CLIENT_DELETED
            - ASSIGNMENT_CREATED
            - ASSIGNMENT_DELETED
            - ASSIGNMENT_PUBLISHED
            - ASSIGNMENT_UPDATED
            - EXPENSE_CREATED
            - EXPENSE_DELETED
            - EXPENSE_UPDATED
        USER_DELETED_FROM_WORKSPACE:
          type: string
          enum:
            - NEW_PROJECT
            - NEW_TASK
            - NEW_CLIENT
            - NEW_TIMER_STARTED
            - TIMER_STOPPED
            - TIME_ENTRY_UPDATED
            - TIME_ENTRY_DELETED
            - TIME_ENTRY_SPLIT
            - NEW_TIME_ENTRY
            - NEW_TAG
            - USER_DELETED_FROM_WORKSPACE
            - USER_JOINED_WORKSPACE
            - USER_DEACTIVATED_ON_WORKSPACE
            - USER_ACTIVATED_ON_WORKSPACE
            - USER_EMAIL_CHANGED
            - USER_UPDATED
            - TEST
            - RESEND
            - NEW_INVOICE
            - INVOICE_UPDATED
            - NEW_APPROVAL_REQUEST
            - APPROVAL_REQUEST_STATUS_UPDATED
            - TIME_OFF_REQUESTED
            - TIME_OFF_REQUEST_APPROVED
            - TIME_OFF_REQUEST_REJECTED
            - TIME_OFF_REQUEST_WITHDRAWN
            - BALANCE_UPDATED
            - TAG_UPDATED
            - TAG_DELETED
            - TASK_UPDATED
            - CLIENT_UPDATED
            - TASK_DELETED
            - CLIENT_DELETED
            - ASSIGNMENT_CREATED
            - ASSIGNMENT_DELETED
            - ASSIGNMENT_PUBLISHED
            - ASSIGNMENT_UPDATED
            - EXPENSE_CREATED
            - EXPENSE_DELETED
            - EXPENSE_UPDATED
        USER_EMAIL_CHANGED:
          type: string
          enum:
            - NEW_PROJECT
            - NEW_TASK
            - NEW_CLIENT
            - NEW_TIMER_STARTED
            - TIMER_STOPPED
            - TIME_ENTRY_UPDATED
            - TIME_ENTRY_DELETED
            - TIME_ENTRY_SPLIT
            - NEW_TIME_ENTRY
            - NEW_TAG
            - USER_DELETED_FROM_WORKSPACE
            - USER_JOINED_WORKSPACE
            - USER_DEACTIVATED_ON_WORKSPACE
            - USER_ACTIVATED_ON_WORKSPACE
            - USER_EMAIL_CHANGED
            - USER_UPDATED
            - TEST
            - RESEND
            - NEW_INVOICE
            - INVOICE_UPDATED
            - NEW_APPROVAL_REQUEST
            - APPROVAL_REQUEST_STATUS_UPDATED
            - TIME_OFF_REQUESTED
            - TIME_OFF_REQUEST_APPROVED
            - TIME_OFF_REQUEST_REJECTED
            - TIME_OFF_REQUEST_WITHDRAWN
            - BALANCE_UPDATED
            - TAG_UPDATED
            - TAG_DELETED
            - TASK_UPDATED
            - CLIENT_UPDATED
            - TASK_DELETED
            - CLIENT_DELETED
            - ASSIGNMENT_CREATED
            - ASSIGNMENT_DELETED
            - ASSIGNMENT_PUBLISHED
            - ASSIGNMENT_UPDATED
            - EXPENSE_CREATED
            - EXPENSE_DELETED
            - EXPENSE_UPDATED
        USER_JOINED_WORKSPACE:
          type: string
          enum:
            - NEW_PROJECT
            - NEW_TASK
            - NEW_CLIENT
            - NEW_TIMER_STARTED
            - TIMER_STOPPED
            - TIME_ENTRY_UPDATED
            - TIME_ENTRY_DELETED
            - TIME_ENTRY_SPLIT
            - NEW_TIME_ENTRY
            - NEW_TAG
            - USER_DELETED_FROM_WORKSPACE
            - USER_JOINED_WORKSPACE
            - USER_DEACTIVATED_ON_WORKSPACE
            - USER_ACTIVATED_ON_WORKSPACE
            - USER_EMAIL_CHANGED
            - USER_UPDATED
            - TEST
            - RESEND
            - NEW_INVOICE
            - INVOICE_UPDATED
            - NEW_APPROVAL_REQUEST
            - APPROVAL_REQUEST_STATUS_UPDATED
            - TIME_OFF_REQUESTED
            - TIME_OFF_REQUEST_APPROVED
            - TIME_OFF_REQUEST_REJECTED
            - TIME_OFF_REQUEST_WITHDRAWN
            - BALANCE_UPDATED
            - TAG_UPDATED
            - TAG_DELETED
            - TASK_UPDATED
            - CLIENT_UPDATED
            - TASK_DELETED
            - CLIENT_DELETED
            - ASSIGNMENT_CREATED
            - ASSIGNMENT_DELETED
            - ASSIGNMENT_PUBLISHED
            - ASSIGNMENT_UPDATED
            - EXPENSE_CREATED
            - EXPENSE_DELETED
            - EXPENSE_UPDATED
        USER_UPDATED:
          type: string
          enum:
            - NEW_PROJECT
            - NEW_TASK
            - NEW_CLIENT
            - NEW_TIMER_STARTED
            - TIMER_STOPPED
            - TIME_ENTRY_UPDATED
            - TIME_ENTRY_DELETED
            - TIME_ENTRY_SPLIT
            - NEW_TIME_ENTRY
            - NEW_TAG
            - USER_DELETED_FROM_WORKSPACE
            - USER_JOINED_WORKSPACE
            - USER_DEACTIVATED_ON_WORKSPACE
            - USER_ACTIVATED_ON_WORKSPACE
            - USER_EMAIL_CHANGED
            - USER_UPDATED
            - TEST
            - RESEND
            - NEW_INVOICE
            - INVOICE_UPDATED
            - NEW_APPROVAL_REQUEST
            - APPROVAL_REQUEST_STATUS_UPDATED
            - TIME_OFF_REQUESTED
            - TIME_OFF_REQUEST_APPROVED
            - TIME_OFF_REQUEST_REJECTED
            - TIME_OFF_REQUEST_WITHDRAWN
            - BALANCE_UPDATED
            - TAG_UPDATED
            - TAG_DELETED
            - TASK_UPDATED
            - CLIENT_UPDATED
            - TASK_DELETED
            - CLIENT_DELETED
            - ASSIGNMENT_CREATED
            - ASSIGNMENT_DELETED
            - ASSIGNMENT_PUBLISHED
            - ASSIGNMENT_UPDATED
            - EXPENSE_CREATED
            - EXPENSE_DELETED
            - EXPENSE_UPDATED
        payloadType:
          type: string
          enum:
            - PROJECT
            - TIME_ENTRY
            - CLIENT
            - TAG
            - TASK
            - WEBHOOK
            - WEBHOOK_LOG
            - NO_PAYLOAD
            - WORKSPACE_PAYMENT_DETAILS
            - DOMAIN_DETAILS
            - WORKSPACE_DELETED_DETAILS
            - USER
            - USER_GROUP
            - FILE_IMPORT_RESULTS
            - APPROVAL_REQUEST
            - INVOICE
            - TIME_OFF_REQUEST
            - BALANCE_UPDATED
            - ASSIGNMENT_WEBHOOK
            - ASSIGNMENT
            - TIME_ENTRY_WITH_CUSTOM_FIELD
            - ADDITIONAL_WORKSPACE
            - EXPENSE
            - WORKSPACE_TRANSFER_DETAILS
            - PROJECT_STATUS_FAILED
        validSourceTypes:
          type: array
          items:
            type: string
            enum:
              - PROJECT_ID
              - USER_ID
              - TAG_ID
              - TASK_ID
              - WORKSPACE_ID
              - USER_GROUP_ID
              - INVOICE_ID
              - ASSIGNMENT_ID
              - EXPENSE_ID
    WebhookLogDto:
      type: object
      properties:
        id:
          type: string
        requestBody:
          type: string
        respondedAt:
          type: string
        responseBody:
          type: string
        statusCode:
          type: integer
          format: int32
        webhookId:
          type: string
    WebhookLogDtoV1:
      type: object
      properties:
        id:
          type: string
          description: Represents log identifier across the system.
          example: 65e5b854fe0dfa24f1528ef0
        requestBody:
          type: string
          description: Represents request body.
          example: '{"id":"65df50f5d2dd8f23a685374e","name":"Webhook"}'
        respondedAt:
          type: string
          description: Represents date and time of response.
          example: "2024-03-04T12:02:28.125+00:00"
        responseBody:
          type: string
          description: Represents response body.
          example: '{"id":"h73210f5d2dd8f23685374e","response":"Webhook response"}'
        statusCode:
          type: integer
          description: Represents response status code.
          format: int32
          example: 200
        webhookId:
          type: string
          description: Represents webhook identifier across the system.
          example: 65df5508d2dd8f23a68537af
    WebhookLogSearchRequestV1:
      type: object
      properties:
        from:
          type: string
          description: Represents date and time in yyyy-MM-ddThh:mm:ssZ format. If provided, results will include logs which occurred after this value.
          format: date-time
          example: "2023-02-01T13:00:46Z"
        sortByNewest:
          type: boolean
          description: If set to true, logs will be sorted with most recent first.
        status:
          type: string
          description: Filters logs by status.
          enum:
            - ALL
            - SUCCEEDED
            - FAILED
        to:
          type: string
          description: Represents date and time in yyyy-MM-ddThh:mm:ssZ format. If provided, results will include logs which occurred before this value.
          format: date-time
          example: "2023-02-05T13:00:46Z"
    WebhookRequest:
      required:
        - triggerSource
        - url
      type: object
      properties:
        name:
          type: string
        triggerSource:
          type: array
          items:
            type: string
        triggerSourceType:
          type: string
          enum:
            - PROJECT_ID
            - USER_ID
            - TAG_ID
            - TASK_ID
            - WORKSPACE_ID
            - USER_GROUP_ID
            - INVOICE_ID
            - ASSIGNMENT_ID
            - EXPENSE_ID
        url:
          type: string
        webhookEvent:
          type: string
          enum:
            - NEW_PROJECT
            - NEW_TASK
            - NEW_CLIENT
            - NEW_TIMER_STARTED
            - TIMER_STOPPED
            - TIME_ENTRY_UPDATED
            - TIME_ENTRY_DELETED
            - TIME_ENTRY_SPLIT
            - NEW_TIME_ENTRY
            - NEW_TAG
            - USER_DELETED_FROM_WORKSPACE
            - USER_JOINED_WORKSPACE
            - USER_DEACTIVATED_ON_WORKSPACE
            - USER_ACTIVATED_ON_WORKSPACE
            - USER_EMAIL_CHANGED
            - USER_UPDATED
            - TEST
            - RESEND
            - NEW_INVOICE
            - INVOICE_UPDATED
            - NEW_APPROVAL_REQUEST
            - APPROVAL_REQUEST_STATUS_UPDATED
            - TIME_OFF_REQUESTED
            - TIME_OFF_REQUEST_APPROVED
            - TIME_OFF_REQUEST_REJECTED
            - TIME_OFF_REQUEST_WITHDRAWN
            - BALANCE_UPDATED
            - TAG_UPDATED
            - TAG_DELETED
            - TASK_UPDATED
            - CLIENT_UPDATED
            - TASK_DELETED
            - CLIENT_DELETED
            - ASSIGNMENT_CREATED
            - ASSIGNMENT_DELETED
            - ASSIGNMENT_PUBLISHED
            - ASSIGNMENT_UPDATED
            - EXPENSE_CREATED
            - EXPENSE_DELETED
            - EXPENSE_UPDATED
    WebhooksDto:
      type: object
      properties:
        webhooks:
          type: array
          items:
            $ref: '#/components/schemas/WebhookDto'
        workspaceWebhookCount:
          type: integer
          format: int32
    WebhooksDtoV1:
      type: object
      properties:
        webhooks:
          type: array
          description: Represents a list of webhook objects for the workspace.
          items:
            $ref: '#/components/schemas/WebhookDtoV1'
        workspaceWebhookCount:
          type: integer
          description: Represents number of webhooks for the workspace.
          format: int32
          example: 5
    WeeklyCapacityDto:
      type: object
      properties:
        firstDateOfWeek:
          type: string
          format: date
        offHours:
          type: number
          format: double
        percentage:
          type: number
          format: double
        workingHours:
          type: number
          format: double
    WorkspaceAccessDisabledDto:
      type: object
      properties:
        accessDisabled:
          type: boolean
        accessDisabledDetails:
          type: object
          additionalProperties:
            type: string
        currentSubscriptionPlan:
          type: string
        customerIds:
          type: object
          additionalProperties:
            type: string
        disabledAt:
          type: string
        disabledBy:
          type: string
        name:
          type: string
        numberOfActiveLimitedUsers:
          type: integer
          format: int32
        numberOfActiveUsers:
          type: integer
          format: int32
        numberOfInactiveUsers:
          type: integer
          format: int32
        numberOfPendingUsers:
          type: integer
          format: int32
        ownerEmail:
          type: string
        reason:
          type: string
        stripeCustomerId:
          type: string
        workspaceId:
          type: string
    WorkspaceDto:
      type: object
      properties:
        costRate:
          $ref: '#/components/schemas/RateDto'
        currency:
          $ref: '#/components/schemas/CurrencyDto'
        featureSubscriptionType:
          type: string
          enum:
            - PREMIUM
            - PREMIUM_YEAR
            - SPECIAL
            - SPECIAL_YEAR
            - TRIAL
            - ENTERPRISE
            - ENTERPRISE_YEAR
            - BASIC_2021
            - BASIC_YEAR_2021
            - STANDARD_2021
            - STANDARD_YEAR_2021
            - PRO_2021
            - PRO_YEAR_2021
            - ENTERPRISE_2021
            - ENTERPRISE_YEAR_2021
            - BUNDLE_2024
            - BUNDLE_YEAR_2024
            - SELF_HOSTED
            - FREE
        features:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
              - ADD_TIME_FOR_OTHERS
              - ADMIN_PANEL
              - ALERTS
              - APPROVAL
              - AUDIT_LOG
              - AUTOMATIC_LOCK
              - BRANDED_REPORTS
              - BULK_EDIT
              - CUSTOM_FIELDS
              - CUSTOM_REPORTING
              - CUSTOM_SUBDOMAIN
              - DECIMAL_FORMAT
              - DISABLE_MANUAL_MODE
              - EDIT_MEMBER_PROFILE
              - EXCLUDE_NON_BILLABLE_FROM_ESTIMATE
              - EXPENSES
              - FILE_IMPORT
              - HIDE_PAGES
              - HISTORIC_RATES
              - INVOICING
              - INVOICE_EMAILS
              - LABOR_COST
              - LOCATIONS
              - MANAGER_ROLE
              - MULTI_FACTOR_AUTHENTICATION
              - PROJECT_BUDGET
              - PROJECT_TEMPLATES
              - QUICKBOOKS_INTEGRATION
              - RECURRING_ESTIMATES
              - REQUIRED_FIELDS
              - SCHEDULED_REPORTS
              - SCHEDULING
              - SCREENSHOTS
              - SSO
              - SUMMARY_ESTIMATE
              - TARGETS_AND_REMINDERS
              - TASK_RATES
              - TIME_OFF
              - UNLIMITED_REPORTS
              - USER_CUSTOM_FIELDS
              - WHO_CAN_CHANGE_TIMEENTRY_BILLABILITY
              - BREAKS
              - KIOSK_SESSION_DURATION
              - KIOSK_PIN_REQUIRED
              - WHO_CAN_SEE_ALL_TIME_ENTRIES
              - WHO_CAN_SEE_PROJECT_STATUS
              - WHO_CAN_SEE_PUBLIC_PROJECTS_ENTRIES
              - WHO_CAN_SEE_TEAMS_DASHBOARD
              - WORKSPACE_LOCK_TIMEENTRIES
              - WORKSPACE_TIME_AUDIT
              - WORKSPACE_TIME_ROUNDING
              - KIOSK
              - FORECASTING
              - TIME_TRACKING
              - ATTENDANCE_REPORT
              - WORKSPACE_TRANSFER
              - FAVORITE_ENTRIES
              - SPLIT_TIME_ENTRY
              - CLIENT_CURRENCY
        hourlyRate:
          $ref: '#/components/schemas/RateDto'
        id:
          type: string
        imageUrl:
          type: string
        memberships:
          type: array
          items:
            $ref: '#/components/schemas/MembershipDto'
        name:
          type: string
        onSubdomain:
          type: boolean
          deprecated: true
        subdomain:
          $ref: '#/components/schemas/WorkspaceSubdomainDto'
        workspaceSettings:
          $ref: '#/components/schemas/WorkspaceSettingsDto'
    WorkspaceDtoV1:
      type: object
      properties:
        costRate:
          $ref: '#/components/schemas/RateDtoV1'
        currencies:
          type: array
          description: Represents currency with default info object.
          items:
            $ref: '#/components/schemas/CurrencyWithDefaultInfoDtoV1'
        featureSubscriptionType:
          $ref: '#/components/schemas/FeatureSubscriptionType'
        features:
          $ref: '#/components/schemas/Feature'
        hourlyRate:
          $ref: '#/components/schemas/HourlyRateDtoV1'
        id:
          type: string
          description: Represents workspace identifier across the system.
          example: 64a687e29ae1f428e7ebe303
        imageUrl:
          type: string
          description: Represents an image url.
          example: https://www.url.com/imageurl-1234567890.jpg
        memberships:
          type: array
          description: Represents a list of membership objects.
          items:
            $ref: '#/components/schemas/MembershipDtoV1'
        name:
          type: string
          description: Represents workspace name.
          example: Cool Company
        subdomain:
          $ref: '#/components/schemas/WorkspaceSubdomainDtoV1'
        workspaceSettings:
          $ref: '#/components/schemas/WorkspaceSettingsDtoV1'
    WorkspaceOverviewDto:
      type: object
      properties:
        accessEnabled:
          type: boolean
        costRate:
          $ref: '#/components/schemas/RateDto'
        currency:
          $ref: '#/components/schemas/CurrencyDto'
        featureSubscriptionType:
          type: string
          enum:
            - PREMIUM
            - PREMIUM_YEAR
            - SPECIAL
            - SPECIAL_YEAR
            - TRIAL
            - ENTERPRISE
            - ENTERPRISE_YEAR
            - BASIC_2021
            - BASIC_YEAR_2021
            - STANDARD_2021
            - STANDARD_YEAR_2021
            - PRO_2021
            - PRO_YEAR_2021
            - ENTERPRISE_2021
            - ENTERPRISE_YEAR_2021
            - BUNDLE_2024
            - BUNDLE_YEAR_2024
            - SELF_HOSTED
            - FREE
        features:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
              - ADD_TIME_FOR_OTHERS
              - ADMIN_PANEL
              - ALERTS
              - APPROVAL
              - AUDIT_LOG
              - AUTOMATIC_LOCK
              - BRANDED_REPORTS
              - BULK_EDIT
              - CUSTOM_FIELDS
              - CUSTOM_REPORTING
              - CUSTOM_SUBDOMAIN
              - DECIMAL_FORMAT
              - DISABLE_MANUAL_MODE
              - EDIT_MEMBER_PROFILE
              - EXCLUDE_NON_BILLABLE_FROM_ESTIMATE
              - EXPENSES
              - FILE_IMPORT
              - HIDE_PAGES
              - HISTORIC_RATES
              - INVOICING
              - INVOICE_EMAILS
              - LABOR_COST
              - LOCATIONS
              - MANAGER_ROLE
              - MULTI_FACTOR_AUTHENTICATION
              - PROJECT_BUDGET
              - PROJECT_TEMPLATES
              - QUICKBOOKS_INTEGRATION
              - RECURRING_ESTIMATES
              - REQUIRED_FIELDS
              - SCHEDULED_REPORTS
              - SCHEDULING
              - SCREENSHOTS
              - SSO
              - SUMMARY_ESTIMATE
              - TARGETS_AND_REMINDERS
              - TASK_RATES
              - TIME_OFF
              - UNLIMITED_REPORTS
              - USER_CUSTOM_FIELDS
              - WHO_CAN_CHANGE_TIMEENTRY_BILLABILITY
              - BREAKS
              - KIOSK_SESSION_DURATION
              - KIOSK_PIN_REQUIRED
              - WHO_CAN_SEE_ALL_TIME_ENTRIES
              - WHO_CAN_SEE_PROJECT_STATUS
              - WHO_CAN_SEE_PUBLIC_PROJECTS_ENTRIES
              - WHO_CAN_SEE_TEAMS_DASHBOARD
              - WORKSPACE_LOCK_TIMEENTRIES
              - WORKSPACE_TIME_AUDIT
              - WORKSPACE_TIME_ROUNDING
              - KIOSK
              - FORECASTING
              - TIME_TRACKING
              - ATTENDANCE_REPORT
              - WORKSPACE_TRANSFER
              - FAVORITE_ENTRIES
              - SPLIT_TIME_ENTRY
              - CLIENT_CURRENCY
        hourlyRate:
          $ref: '#/components/schemas/RateDto'
        id:
          type: string
        imageUrl:
          type: string
        memberships:
          type: array
          items:
            $ref: '#/components/schemas/MembershipDto'
        name:
          type: string
        onSubdomain:
          type: boolean
          deprecated: true
        reason:
          type: string
        subdomain:
          $ref: '#/components/schemas/WorkspaceSubdomainDto'
        workspaceSettings:
          $ref: '#/components/schemas/WorkspaceSettingsDto'
    WorkspaceRequest:
      required:
        - name
      type: object
      properties:
        cakeOrganizationId:
          type: string
          description: Organization ID for Cake Account WS sync
        name:
          maxLength: 250
          minLength: 2
          type: string
          description: Represents a workspace name.
          example: Cool Company
        organizationId:
          type: string
          writeOnly: true
    WorkspaceSettingsDto:
      type: object
      properties:
        activeBillableHours:
          type: boolean
        adminOnlyPages:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
              - PROJECT
              - TEAM
              - REPORTS
        approvalSettings:
          $ref: '#/components/schemas/ApprovalSettings'
        auditLogSettings:
          $ref: '#/components/schemas/AuditLogSettingsDto'
        automaticLock:
          $ref: '#/components/schemas/AutomaticLockDto'
        breakSettings:
          $ref: '#/components/schemas/BreakSettingsDto'
        canManagerEditUsersTime:
          type: boolean
        canManagerLaunchKiosk:
          type: boolean
        canSeeTimeSheet:
          type: boolean
        canSeeTracker:
          type: boolean
        companyAddress:
          type: string
        currencyFormat:
          type: string
          enum:
            - CURRENCY_SPACE_VALUE
            - VALUE_SPACE_CURRENCY
            - CURRENCY_VALUE
            - VALUE_CURRENCY
        customLabels:
          $ref: '#/components/schemas/CustomLabelsDto'
        decimalFormat:
          type: boolean
          deprecated: true
        defaultBillableProjects:
          type: boolean
        durationFormat:
          type: string
          enum:
            - FULL
            - COMPACT
            - DECIMAL
        entityCreationPermissions:
          $ref: '#/components/schemas/EntityCreationPermissionsDto'
        expensesEnabled:
          type: boolean
        favoriteEntriesEnabled:
          type: boolean
        forceDescription:
          type: boolean
        forceProjects:
          type: boolean
        forceTags:
          type: boolean
        forceTasks:
          type: boolean
        highResolutionScreenshots:
          type: boolean
        invoicingEnabled:
          type: boolean
        isCostRateActive:
          type: boolean
        isProjectPublicByDefault:
          type: boolean
        kioskAutologinEnabled:
          type: boolean
        kioskEnabled:
          type: boolean
        kioskProjectsAndTasksEnabled:
          type: boolean
        locationsEnabled:
          type: boolean
        lockTimeEntries:
          type: string
        lockTimeZone:
          type: string
        multiFactorEnabled:
          type: boolean
        numberFormat:
          type: string
          enum:
            - COMMA_PERIOD
            - PERIOD_COMMA
            - QUOTATION_MARK_PERIOD
            - SPACE_COMMA
        onlyAdminsCanChangeBillableStatus:
          type: boolean
        onlyAdminsCreateProject:
          type: boolean
        onlyAdminsCreateTag:
          type: boolean
        onlyAdminsCreateTask:
          type: boolean
        onlyAdminsSeeAllTimeEntries:
          type: boolean
        onlyAdminsSeeBillableRates:
          type: boolean
        onlyAdminsSeeDashboard:
          type: boolean
        onlyAdminsSeeProjectStatus:
          type: boolean
        onlyAdminsSeePublicProjectsEntries:
          type: boolean
        projectFavorites:
          type: boolean
        projectGroupingLabel:
          type: string
        projectLabel:
          type: string
        projectPickerSpecialFilter:
          type: boolean
        pumbleIntegrationSettings:
          $ref: '#/components/schemas/PumbleIntegrationSettingsDto'
        round:
          $ref: '#/components/schemas/RoundDto'
        schedulingEnabled:
          type: boolean
        schedulingSettings:
          $ref: '#/components/schemas/SchedulingSettingsDto'
        screenshotsEnabled:
          type: boolean
        taskBillableEnabled:
          type: boolean
        taskLabel:
          type: string
        taskRateEnabled:
          type: boolean
        timeApprovalEnabled:
          type: boolean
          deprecated: true
        timeOff:
          $ref: '#/components/schemas/TimeOffDto'
        timeRoundingInReports:
          type: boolean
        timeTrackingMode:
          type: string
          enum:
            - DEFAULT
            - STOPWATCH_ONLY
        trackTimeDownToSecond:
          type: boolean
          deprecated: true
        weekStart:
          type: string
          enum:
            - MONDAY
            - TUESDAY
            - WEDNESDAY
            - THURSDAY
            - FRIDAY
            - SATURDAY
            - SUNDAY
        workingDays:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
              - MONDAY
              - TUESDAY
              - WEDNESDAY
              - THURSDAY
              - FRIDAY
              - SATURDAY
              - SUNDAY
    WorkspaceSettingsDtoV1:
      type: object
      properties:
        adminOnlyPages:
          type: string
          description: Represents a unique list of protected page enums.
          example: '["PROJECT","TEAM","REPORTS"]'
          enum:
            - PROJECT
            - TEAM
            - REPORTS
        automaticLock:
          $ref: '#/components/schemas/AutomaticLockDtoV1'
        canSeeTimeSheet:
          type: boolean
          description: Indicates whether timesheets are visible or not.
        canSeeTracker:
          type: boolean
          description: Indicates whether time trackers are visible or not.
        currencyFormat:
          type: string
          description: Represents a clockify currency format enum.
          example: CURRENCY_SPACE_VALUE
          enum:
            - CURRENCY_SPACE_VALUE
            - VALUE_SPACE_CURRENCY
            - CURRENCY_VALUE
            - VALUE_CURRENCY
        defaultBillableProjects:
          type: boolean
          description: Indicates whether projects are billable by default.
        durationFormat:
          type: string
          description: Represents a clockify duration format enum. Used to set Duration format instead of setting decimalFormat and trackTimeDownToSecond.
          example: FULL
          enum:
            - FULL
            - COMPACT
            - DECIMAL
        forceDescription:
          type: boolean
          description: Indicates whether description are forced or not.
        forceProjects:
          type: boolean
          description: Indicates whether projects are forced or not.
        forceTags:
          type: boolean
          description: Indicates whether tags are forced or not.
        forceTasks:
          type: boolean
          description: Indicates whether tasks are forced or not.
        isProjectPublicByDefault:
          type: boolean
        lockTimeEntries:
          type: string
          example: "2024-02-25T23:00:00Z"
        lockTimeZone:
          type: string
          example: Europe/Belgrade
        multiFactorEnabled:
          type: boolean
          description: Indicates whether two-factor authentication is enabled or not.
        numberFormat:
          type: string
          description: Represents a clockify number format enum.
          example: COMMA_PERIOD
          enum:
            - COMMA_PERIOD
            - PERIOD_COMMA
            - QUOTATION_MARK_PERIOD
            - SPACE_COMMA
        onlyAdminsCreateProject:
          type: boolean
          description: Indicates whether only admins can create projects.
        onlyAdminsCreateTag:
          type: boolean
          description: Indicates whether only admins can create tags.
        onlyAdminsCreateTask:
          type: boolean
          description: Indicates whether only admins can create task.
        onlyAdminsSeeAllTimeEntries:
          type: boolean
          description: Indicates whether only admins can see all time entries.
        onlyAdminsSeeBillableRates:
          type: boolean
          description: Indicates whether only admins can see billable rates.
        onlyAdminsSeeDashboard:
          type: boolean
          description: Indicates whether only admins can see dashboard.
        onlyAdminsSeePublicProjectsEntries:
          type: boolean
          description: Indicates whether only admins can see public project entries.
        projectFavorites:
          type: boolean
          description: Indicates whether project favorites are allowed.
        projectGroupingLabel:
          type: string
          description: Represents a project grouping label.
          example: Project Label
        projectPickerSpecialFilter:
          type: boolean
          description: Indicates whether project picker special filter is enabled.
        round:
          $ref: '#/components/schemas/RoundDto'
        timeRoundingInReports:
          type: boolean
          description: Indicates whether time rounding is enabled in reports.
        timeTrackingMode:
          type: string
          description: Represents a time tracking mode enum.
          example: DEFAULT
          enum:
            - DEFAULT
            - STOPWATCH_ONLY
        trackTimeDownToSecond:
          type: boolean
          description: Indicates whether time tracking is seconds-accurate. This is now deprecated and durationFormat can now be used to manage Time Duration Format.
          deprecated: true
      description: |+
        Workspace settings also include Time Duration Format settings.

        Setting Time Duration Format by changing the boolean fields
        decimalFormat and trackTimeDownToSecond is now deprecated.

        Time Duration Format can be set by durationFormat enum field.

        Three different Time Duration modes will still map the boolean fields:

            1. Full (hh:mm:ss) -> decimalFormat = false, trackTimeDownToSecond = true,

            2. Compact (h:mm) -> decimalFormat = false, trackTimeDownToSecond = false,

            3. Decimal (h:hh) -> decimalFormat = true, trackTimeDownToSecond = true

    WorkspaceSubdomainDto:
      type: object
      properties:
        enabled:
          type: boolean
        name:
          type: string
    WorkspaceSubdomainDtoV1:
      type: object
      properties:
        enabled:
          type: boolean
          description: Indicates whether subdomain is enabled on workspace
        name:
          type: string
          description: Represents subdomain name
          example: coolcompany
      description: Represents the workspace subdomain
    WorkspaceSubscriptionInfoDto:
      type: object
      properties:
        accessDisabled:
          type: boolean
        currentSubscriptionPlan:
          type: string
        customerIds:
          type: object
          additionalProperties:
            type: string
        name:
          type: string
        numberOfActiveLimitedUsers:
          type: integer
          format: int32
        numberOfActiveUsers:
          type: integer
          format: int32
        numberOfInactiveUsers:
          type: integer
          format: int32
        numberOfPendingUsers:
          type: integer
          format: int32
        ownerEmail:
          type: string
        stripeCustomerId:
          type: string
        workspaceId:
          type: string
    WorkspaceSurveyDataDto:
      type: object
      properties:
        showSurvey:
          type: boolean
        surveyQuestions:
          type: array
          items:
            $ref: '#/components/schemas/SurveyQuestionDto'
        surveyResponse:
          $ref: '#/components/schemas/SurveyResponseDto'
    WorkspaceTransferAccessDisabledDto:
      type: object
      properties:
        domainUrl:
          type: string
        workspaceId:
          type: string
    WorkspaceTransferDto:
      type: object
      properties:
        id:
          type: string
        sourceRegion:
          type: string
        startTime:
          type: string
        status:
          type: string
        targetRegion:
          type: string
        targetRegionDomainUrl:
          type: string
        targetRegionUrl:
          type: string
        transferMessage:
          type: string
        workspaceId:
          type: string
    WorkspaceTransferFailedRequest:
      type: object
      properties:
        error:
          type: string
        processingError:
          type: string
        sourceRegion:
          type: string
        sourceRegionUrl:
          type: string
        targetRegion:
          type: string
        targetRegionUrl:
          type: string
        transferAppId:
          type: string
    WorkspaceTransferFinishedRequest:
      type: object
      properties:
        sendErrorEmail:
          type: boolean
        sourceRegion:
          type: string
        sourceRegionUrl:
          type: string
        targetRegion:
          type: string
        targetRegionApiUrl:
          type: string
        targetRegionDomainUrl:
          type: string
        targetRegionUrl:
          type: string
        transferAppId:
          type: string
        transferSeatDetailsDto:
          $ref: '#/components/schemas/TransferSeatDetailsDto'
    WorkspaceTransferPossibleDto:
      type: object
      properties:
        reason:
          type: string
          enum:
            - DEFAULT
            - WORKSPACE_LOCKED
            - NO_ACTIVE_SUBSCRIPTION
            - BUNDLE_SUBSCRIPTION
            - ACCOUNT_ON_DESTINATION
            - CUSTOM_PRICE
            - UNPAID_INVOICES
            - CAKE_MIGRATION
        transferPossible:
          type: boolean
    WorkspaceTransferRequest:
      required:
        - targetRegion
      type: object
      properties:
        code:
          type: string
        passwordConfirm:
          type: string
        targetRegion:
          type: string
  securitySchemes:
    AddonKeyAuth:
      in: header
      name: x-addon-token
      type: apiKey
    ApiKeyAuth:
      in: header
      name: x-api-key
      type: apiKey
    MarketplaceKeyAuth:
      in: header
      name: x-marketplace-token
      type: apiKey
